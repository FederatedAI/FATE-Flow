{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"configuration_instruction/","text":"Configuration Instructions \u00b6 1. Description \u00b6 Contains the general configuration of the FATE project and the configuration of each subsystem 2. Global configuration \u00b6 Path: ${FATE_PROJECT_BASE}/conf/server_conf.yaml Description: Commonly used configuration, generally needed to determine when deploying Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified # If FATEFlow uses the registry, FATEFlow will register the FATEFlow Server address and the published model download address to the registry for the online system FATEServing; it will also get the FATEServing address from the registry. use_registry : false # Whether to enable higher security serialization mode use_deserialize_safe_module : false dependent_distribution : false # party id\uff1a required for site authentication party_id : # Hook module configuration hook_module : # Client authentication hooks client_authentication : fate_flow.hook.flow.client_authentication # site-side authentication hooks site_authentication : fate_flow.hook.flow.site_authentication # Permission authentication hooks permission : fate_flow.hook.flow.permission # In addition to using flow's hooks for authentication and authentication, we also support authentication and authentication interfaces registered with third-party services # The name of the service registered by the third-party authentication and authentication service hook_server_name : # Authentication authentication : # Client authentication configuration client : # Client authentication switch switch : false http_app_key : http_secret_key : # Site authentication configuration site : # Authentication switch switch : false # Authentication permission : # Authentication switch switch : false # Component authentication switch component : false # Data set authentication switch dataset : false fateflow : # you must set real ip address, 127.0.0.1 and 0.0.0.0 is not supported host : 127.0.0.1 http_port : 9380 grpc_port : 9360 # The nginx address needs to be configured for high availability nginx : host : http_port : grpc_port : # use random instance_id instead of {host}:{http_port} random_instance_id : false # support rollsite/nginx/fateflow as a coordination proxy # rollsite support fate on eggroll, use grpc protocol # nginx support fate on eggroll and fate on spark, use http or grpc protocol, default is http # fateflow support fate on eggroll and fate on spark, use http protocol, but not support exchange network mode # format(proxy: rollsite) means rollsite use the rollsite configuration of fate_one_eggroll and nginx use the nginx configuration of fate_one_spark # you also can customize the config like this(set fateflow of the opposite party as proxy): # proxy: # name: fateflow # host: xx # http_port: xx # grpc_port: xx proxy : rollsite # support default/http/grpc protocol : default database : name : fate_flow user : fate passwd : fate host : 127.0.0.1 port : 3306 max_connections : 100 stale_timeout : 30 # The registry address and its authentication parameters zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate # engine services default_engines : computing : standalone federation : standalone storage : standalone fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll : clustermanager : # CPU cores of the machine where eggroll nodemanager service is running cores_per_node : 16 # the number of eggroll nodemanager machine nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 linkis_spark : cores_per_node : 20 nodes : 2 host : 127.0.0.1 port : 9001 token_code : MLSS python_path : /data/projects/fate/python hive : host : 127.0.0.1 port : 10000 auth_mechanism : username : password : linkis_hive : host : 127.0.0.1 port : 9001 hdfs : name_node : hdfs://fate-cluster # default / path_prefix : rabbitmq : host : 192.168.0.4 mng_port : 12345 port : 5672 user : fate password : fate # default conf/rabbitmq_route_table.yaml route_table : pulsar : host : 192.168.0.5 port : 6650 mng_port : 8080 cluster : standalone # all parties should use a same tenant tenant : fl-tenant # message ttl in minutes topic_ttl : 5 # default conf/pulsar_route_table.yaml route_table : nginx : host : 127.0.0.1 http_port : 9300 grpc_port : 9310 # external services fateboard : host : 127.0.0.1 port : 8080 # on API `/model/load` and `/model/load/do` # automatic upload models to the model store if it exists locally but does not exist in the model storage # or download models from the model store if it does not exist locally but exists in the model storage # this config will not affect API `/model/store` or `/model/restore` enable_model_store : false # default address for export model model_store_address : # use mysql as the model store engine # storage: mysql # database: fate_model # user: fate # password: fate # host: 127.0.0.1 # port: 3306 # other optional configs send to the engine # max_connections: 10 # stale_timeout: 10 # use redis as the model store engine # storage: redis # host: 127.0.0.1 # port: 6379 # db: 0 # password: # the expiry time of keys, in seconds. defaults None (no expiry time) # ex: # use tencent cos as model store engine storage : tencent_cos Region : SecretId : SecretKey : Bucket : # The address of the FATE Serving Server needs to be configured if the registry is not used servings : hosts : - 127.0.0.1:8000 fatemanager : host : 127.0.0.1 port : 8001 federatedId : 0 3. FATE Flow Configuration \u00b6 3.1 FATE Flow Server Configuration \u00b6 Path: ${FATE_FLOW_BASE}/python/fate_flow/settings.py Description: Advanced configuration, generally no changes are needed Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified # Thread pool size of grpc server used by FATE Flow Server for multiparty FATE Flow Server communication, not set default equal to the number of CPU cores of the machine GRPC_SERVER_MAX_WORKERS = None # Switch # The upload data interface gets data from the client by default, this value can be configured at the time of the interface call using use_local_data UPLOAD_DATA_FROM_CLIENT = True # Whether to enable multi-party communication authentication, need to be used with FATE Cloud CHECK_NODES_IDENTITY = False # Whether to enable the resource authentication function, need to use with FATE Cloud USE_AUTHENTICATION = False # Resource privileges granted by default PRIVILEGE_COMMAND_WHITELIST = [] 3.2 FATE Flow Default Job Configuration \u00b6 Path: ${FATE_FLOW_BASE}/conf/job_default_config.yaml Description: Advanced configuration, generally no changes are needed Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified Take effect: use flow server reload or restart fate flow server # component provider, relative path to get_fate_python_directory default_component_provider_path : federatedml # resource # total_cores_overweight_percent total_cores_overweight_percent : 1 # 1 means no overweight total_memory_overweight_percent : 1 # 1 means no overweight # Default task parallelism per job, you can configure a custom value using job_parameters:task_parallelism when submitting the job configuration task_parallelism : 1 # The default number of CPU cores per task per job, which can be configured using job_parameters:task_cores when submitting the job configuration task_cores : 4 # This configuration does not take effect as memory resources are not supported for scheduling at the moment task_memory : 0 # mb # The ratio of the maximum number of CPU cores allowed for a job to the total number of resources, e.g., if the total resources are 10 and the value is 0.5, then a job is allowed to request up to 5 CPUs, i.e., task_cores * task_parallelism <= 10 * 0.5 max_cores_percent_per_job : 1 # 1 means total # scheduling # Default job execution timeout, you can configure a custom value using job_parameters:timeout when submitting the job configuration job_timeout : 259200 # s # Timeout for communication when sending cross-participant scheduling commands or status remote_request_timeout : 30000 # ms # Number of retries to send cross-participant scheduling commands or status federated_command_trys : 3 end_status_job_scheduling_time_limit : 300000 # ms end_status_job_scheduling_updates : 1 # Default number of auto retries, you can configure a custom value using job_parameters:auto_retries when submitting the job configuration auto_retries : 0 # Default retry interval auto_retry_delay : 1 #seconds # Default multiparty status collection method, supports PULL and PUSH; you can also specify the current job collection mode in the job configuration federated_status_collect_type : PUSH # upload upload_max_bytes : 104857600 # bytes #component output output_data_summary_count_limit : 100 4. FATE Board Configuration \u00b6 Path: ${FATE_BOARD_BASE}/conf/application.properties Description: Commonly used configuration, generally needed to determine when deploying Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified # Service listening port server.port = 8080 # fateflow address, referring to the http port address of fateflow fateflow.url == http://127.0.0.1:9380 # db address, same as the above global configuration service_conf.yaml inside the database configuration fateboard.datasource.jdbc-url = jdbc:mysql://localhost:3306/fate_flow?characterEncoding=utf8&characterSetResults=utf8&autoReconnect= true&failOverReadOnly=false&serverTimezone=GMT%2B8 # db configuration, same as the above global configuration service_conf.yaml inside the database configuration fateboard.datasource.username = # db configuration, same as the above global configuration service_conf.yaml inside the database configuration fateboard.datasource.password = server.tomcat.max-threads = 1000 server.tomcat.max-connections = 20000 spring.servlet.multipart.max-file-size = 10MB spring.servlet.multipart.max-request-size = 100MB # Administrator account configuration server.board.login.username = admin server.board.login.password = admin server.ssl.key-store = classpath: server.ssl.key-store-password = server.ssl.key-password = server.ssl.key-alias = # When fateflo server enables api access authentication, you need to configure HTTP_APP_KEY = HTTP_SECRET_KEY = 5. EggRoll \u00b6 5.1 System configuration \u00b6 Path: ${EGGROLL_HOME}/conf/eggroll.properties Description: Commonly used configuration, generally needed to determine when deploying Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified [eggroll] # core # MySQL connection configuration, generally required for production applications eggroll.resourcemanager.clustermanager.jdbc.driver.class.name = com.mysql.cj.jdbc. # MySQL connection configuration, generally required for production applications eggroll.resourcemanager.clustermanager.jdbc.url = jdbc:mysql://localhost:3306/eggroll_meta?useSSL=false&serverTimezone=UTC& characterEncoding=utf8&allowPublicKeyRetrieval=true # Connect to MySQL account, this configuration is required for general production applications eggroll.resourcemanager.clustermanager.jdbc.username = # Connect to MySQL password, generally required for production applications eggroll.resourcemanager.clustermanager.jdbc.password = # Data storage directory eggroll.data.dir = data/ # Log storage directory eggroll.logs.dir = logs/ eggroll.resourcemanager.clustermanager.host = 127.0.0.1 eggroll.resourcemanager.clustermanager.port = 4670 eggroll.resourcemanager.nodemanager.port = 4670 # python path eggroll.resourcemanager.bootstrap.eggg_pair.venv = # pythonpath, usually you need to specify the python directory of eggroll and the python directory of fate eggroll.resourcemanager.bootstrap.eggg_pair.pythonpath = python # java path eggroll.resourcemanager.bootstrap.eggg_frame.javahome = # java service startup parameters, no special needs, no need to configure eggroll.resourcemanager.bootstrap.eggg_frame.jvm.options = # grpc connection hold time for multi-party communication eggroll.core.grpc.channel.keepalive.timeout.sec = 20 # session # Number of computing processes started per nodemanager in an eggroll session; replaced by the default parameters of the fate flow if using fate for committing tasks eggroll.session.processors.per.node = 4 # rollsite eggroll.rollsite.coordinator = webank eggroll.rollsite.host = 127.0.0.1 eggroll.rollsite.port = 9370 eggroll.rollsite.party.id = 10001 eggroll.rollsite.route.table.path = conf/route_table.json eggroll.rollsite.push.max.retry = 3 eggroll.rollsite.push.long.retry = 2 eggroll.rollsite.push.batches.per.stream = 10 eggroll.rollsite.adapter.sendbuf.size = 100000 5.2 Routing table configuration \u00b6 Path: ${EGGROLL_HOME}/conf/route_table.json Description: Commonly used configuration, generally needed to determine when deploying The routing table is mainly divided into two levels The first level indicates the site, if the corresponding target site configuration is not found, then use default The second level represents the service, if you can not find the corresponding target service, then use default The second level, usually set default as the address of our rollsite service, and fateflow as the grpc address of our fate flow server service { \"route_table\" : { \"10001\" : { \"default\" :[ { \"port\" : 9370 , \"ip\" : \"127.0.0.1\" } ], \"fateflow\" :[ { \"port\" : 9360 , \"ip\" : \"127.0.0.1\" } ] }, \"10002\" : { \"default\" :[ { \"port\" : 9470 , \"ip\" : \"127.0.0.1\" } ] } }, \"permission\" : { \"default_allow\" : true } }","title":"Configuration Instructions"},{"location":"configuration_instruction/#configuration-instructions","text":"","title":"Configuration Instructions"},{"location":"configuration_instruction/#1-description","text":"Contains the general configuration of the FATE project and the configuration of each subsystem","title":"1. Description"},{"location":"configuration_instruction/#2-global-configuration","text":"Path: ${FATE_PROJECT_BASE}/conf/server_conf.yaml Description: Commonly used configuration, generally needed to determine when deploying Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified # If FATEFlow uses the registry, FATEFlow will register the FATEFlow Server address and the published model download address to the registry for the online system FATEServing; it will also get the FATEServing address from the registry. use_registry : false # Whether to enable higher security serialization mode use_deserialize_safe_module : false dependent_distribution : false # party id\uff1a required for site authentication party_id : # Hook module configuration hook_module : # Client authentication hooks client_authentication : fate_flow.hook.flow.client_authentication # site-side authentication hooks site_authentication : fate_flow.hook.flow.site_authentication # Permission authentication hooks permission : fate_flow.hook.flow.permission # In addition to using flow's hooks for authentication and authentication, we also support authentication and authentication interfaces registered with third-party services # The name of the service registered by the third-party authentication and authentication service hook_server_name : # Authentication authentication : # Client authentication configuration client : # Client authentication switch switch : false http_app_key : http_secret_key : # Site authentication configuration site : # Authentication switch switch : false # Authentication permission : # Authentication switch switch : false # Component authentication switch component : false # Data set authentication switch dataset : false fateflow : # you must set real ip address, 127.0.0.1 and 0.0.0.0 is not supported host : 127.0.0.1 http_port : 9380 grpc_port : 9360 # The nginx address needs to be configured for high availability nginx : host : http_port : grpc_port : # use random instance_id instead of {host}:{http_port} random_instance_id : false # support rollsite/nginx/fateflow as a coordination proxy # rollsite support fate on eggroll, use grpc protocol # nginx support fate on eggroll and fate on spark, use http or grpc protocol, default is http # fateflow support fate on eggroll and fate on spark, use http protocol, but not support exchange network mode # format(proxy: rollsite) means rollsite use the rollsite configuration of fate_one_eggroll and nginx use the nginx configuration of fate_one_spark # you also can customize the config like this(set fateflow of the opposite party as proxy): # proxy: # name: fateflow # host: xx # http_port: xx # grpc_port: xx proxy : rollsite # support default/http/grpc protocol : default database : name : fate_flow user : fate passwd : fate host : 127.0.0.1 port : 3306 max_connections : 100 stale_timeout : 30 # The registry address and its authentication parameters zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate # engine services default_engines : computing : standalone federation : standalone storage : standalone fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll : clustermanager : # CPU cores of the machine where eggroll nodemanager service is running cores_per_node : 16 # the number of eggroll nodemanager machine nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 linkis_spark : cores_per_node : 20 nodes : 2 host : 127.0.0.1 port : 9001 token_code : MLSS python_path : /data/projects/fate/python hive : host : 127.0.0.1 port : 10000 auth_mechanism : username : password : linkis_hive : host : 127.0.0.1 port : 9001 hdfs : name_node : hdfs://fate-cluster # default / path_prefix : rabbitmq : host : 192.168.0.4 mng_port : 12345 port : 5672 user : fate password : fate # default conf/rabbitmq_route_table.yaml route_table : pulsar : host : 192.168.0.5 port : 6650 mng_port : 8080 cluster : standalone # all parties should use a same tenant tenant : fl-tenant # message ttl in minutes topic_ttl : 5 # default conf/pulsar_route_table.yaml route_table : nginx : host : 127.0.0.1 http_port : 9300 grpc_port : 9310 # external services fateboard : host : 127.0.0.1 port : 8080 # on API `/model/load` and `/model/load/do` # automatic upload models to the model store if it exists locally but does not exist in the model storage # or download models from the model store if it does not exist locally but exists in the model storage # this config will not affect API `/model/store` or `/model/restore` enable_model_store : false # default address for export model model_store_address : # use mysql as the model store engine # storage: mysql # database: fate_model # user: fate # password: fate # host: 127.0.0.1 # port: 3306 # other optional configs send to the engine # max_connections: 10 # stale_timeout: 10 # use redis as the model store engine # storage: redis # host: 127.0.0.1 # port: 6379 # db: 0 # password: # the expiry time of keys, in seconds. defaults None (no expiry time) # ex: # use tencent cos as model store engine storage : tencent_cos Region : SecretId : SecretKey : Bucket : # The address of the FATE Serving Server needs to be configured if the registry is not used servings : hosts : - 127.0.0.1:8000 fatemanager : host : 127.0.0.1 port : 8001 federatedId : 0","title":"2. Global configuration"},{"location":"configuration_instruction/#3-fate-flow-configuration","text":"","title":"3. FATE Flow Configuration"},{"location":"configuration_instruction/#31-fate-flow-server-configuration","text":"Path: ${FATE_FLOW_BASE}/python/fate_flow/settings.py Description: Advanced configuration, generally no changes are needed Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified # Thread pool size of grpc server used by FATE Flow Server for multiparty FATE Flow Server communication, not set default equal to the number of CPU cores of the machine GRPC_SERVER_MAX_WORKERS = None # Switch # The upload data interface gets data from the client by default, this value can be configured at the time of the interface call using use_local_data UPLOAD_DATA_FROM_CLIENT = True # Whether to enable multi-party communication authentication, need to be used with FATE Cloud CHECK_NODES_IDENTITY = False # Whether to enable the resource authentication function, need to use with FATE Cloud USE_AUTHENTICATION = False # Resource privileges granted by default PRIVILEGE_COMMAND_WHITELIST = []","title":"3.1 FATE Flow Server Configuration"},{"location":"configuration_instruction/#32-fate-flow-default-job-configuration","text":"Path: ${FATE_FLOW_BASE}/conf/job_default_config.yaml Description: Advanced configuration, generally no changes are needed Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified Take effect: use flow server reload or restart fate flow server # component provider, relative path to get_fate_python_directory default_component_provider_path : federatedml # resource # total_cores_overweight_percent total_cores_overweight_percent : 1 # 1 means no overweight total_memory_overweight_percent : 1 # 1 means no overweight # Default task parallelism per job, you can configure a custom value using job_parameters:task_parallelism when submitting the job configuration task_parallelism : 1 # The default number of CPU cores per task per job, which can be configured using job_parameters:task_cores when submitting the job configuration task_cores : 4 # This configuration does not take effect as memory resources are not supported for scheduling at the moment task_memory : 0 # mb # The ratio of the maximum number of CPU cores allowed for a job to the total number of resources, e.g., if the total resources are 10 and the value is 0.5, then a job is allowed to request up to 5 CPUs, i.e., task_cores * task_parallelism <= 10 * 0.5 max_cores_percent_per_job : 1 # 1 means total # scheduling # Default job execution timeout, you can configure a custom value using job_parameters:timeout when submitting the job configuration job_timeout : 259200 # s # Timeout for communication when sending cross-participant scheduling commands or status remote_request_timeout : 30000 # ms # Number of retries to send cross-participant scheduling commands or status federated_command_trys : 3 end_status_job_scheduling_time_limit : 300000 # ms end_status_job_scheduling_updates : 1 # Default number of auto retries, you can configure a custom value using job_parameters:auto_retries when submitting the job configuration auto_retries : 0 # Default retry interval auto_retry_delay : 1 #seconds # Default multiparty status collection method, supports PULL and PUSH; you can also specify the current job collection mode in the job configuration federated_status_collect_type : PUSH # upload upload_max_bytes : 104857600 # bytes #component output output_data_summary_count_limit : 100","title":"3.2 FATE Flow Default Job Configuration"},{"location":"configuration_instruction/#4-fate-board-configuration","text":"Path: ${FATE_BOARD_BASE}/conf/application.properties Description: Commonly used configuration, generally needed to determine when deploying Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified # Service listening port server.port = 8080 # fateflow address, referring to the http port address of fateflow fateflow.url == http://127.0.0.1:9380 # db address, same as the above global configuration service_conf.yaml inside the database configuration fateboard.datasource.jdbc-url = jdbc:mysql://localhost:3306/fate_flow?characterEncoding=utf8&characterSetResults=utf8&autoReconnect= true&failOverReadOnly=false&serverTimezone=GMT%2B8 # db configuration, same as the above global configuration service_conf.yaml inside the database configuration fateboard.datasource.username = # db configuration, same as the above global configuration service_conf.yaml inside the database configuration fateboard.datasource.password = server.tomcat.max-threads = 1000 server.tomcat.max-connections = 20000 spring.servlet.multipart.max-file-size = 10MB spring.servlet.multipart.max-request-size = 100MB # Administrator account configuration server.board.login.username = admin server.board.login.password = admin server.ssl.key-store = classpath: server.ssl.key-store-password = server.ssl.key-password = server.ssl.key-alias = # When fateflo server enables api access authentication, you need to configure HTTP_APP_KEY = HTTP_SECRET_KEY =","title":"4. FATE Board Configuration"},{"location":"configuration_instruction/#5-eggroll","text":"","title":"5. EggRoll"},{"location":"configuration_instruction/#51-system-configuration","text":"Path: ${EGGROLL_HOME}/conf/eggroll.properties Description: Commonly used configuration, generally needed to determine when deploying Note: Configuration items that are not listed below in the configuration file are internal system parameters and are not recommended to be modified [eggroll] # core # MySQL connection configuration, generally required for production applications eggroll.resourcemanager.clustermanager.jdbc.driver.class.name = com.mysql.cj.jdbc. # MySQL connection configuration, generally required for production applications eggroll.resourcemanager.clustermanager.jdbc.url = jdbc:mysql://localhost:3306/eggroll_meta?useSSL=false&serverTimezone=UTC& characterEncoding=utf8&allowPublicKeyRetrieval=true # Connect to MySQL account, this configuration is required for general production applications eggroll.resourcemanager.clustermanager.jdbc.username = # Connect to MySQL password, generally required for production applications eggroll.resourcemanager.clustermanager.jdbc.password = # Data storage directory eggroll.data.dir = data/ # Log storage directory eggroll.logs.dir = logs/ eggroll.resourcemanager.clustermanager.host = 127.0.0.1 eggroll.resourcemanager.clustermanager.port = 4670 eggroll.resourcemanager.nodemanager.port = 4670 # python path eggroll.resourcemanager.bootstrap.eggg_pair.venv = # pythonpath, usually you need to specify the python directory of eggroll and the python directory of fate eggroll.resourcemanager.bootstrap.eggg_pair.pythonpath = python # java path eggroll.resourcemanager.bootstrap.eggg_frame.javahome = # java service startup parameters, no special needs, no need to configure eggroll.resourcemanager.bootstrap.eggg_frame.jvm.options = # grpc connection hold time for multi-party communication eggroll.core.grpc.channel.keepalive.timeout.sec = 20 # session # Number of computing processes started per nodemanager in an eggroll session; replaced by the default parameters of the fate flow if using fate for committing tasks eggroll.session.processors.per.node = 4 # rollsite eggroll.rollsite.coordinator = webank eggroll.rollsite.host = 127.0.0.1 eggroll.rollsite.port = 9370 eggroll.rollsite.party.id = 10001 eggroll.rollsite.route.table.path = conf/route_table.json eggroll.rollsite.push.max.retry = 3 eggroll.rollsite.push.long.retry = 2 eggroll.rollsite.push.batches.per.stream = 10 eggroll.rollsite.adapter.sendbuf.size = 100000","title":"5.1 System configuration"},{"location":"configuration_instruction/#52-routing-table-configuration","text":"Path: ${EGGROLL_HOME}/conf/route_table.json Description: Commonly used configuration, generally needed to determine when deploying The routing table is mainly divided into two levels The first level indicates the site, if the corresponding target site configuration is not found, then use default The second level represents the service, if you can not find the corresponding target service, then use default The second level, usually set default as the address of our rollsite service, and fateflow as the grpc address of our fate flow server service { \"route_table\" : { \"10001\" : { \"default\" :[ { \"port\" : 9370 , \"ip\" : \"127.0.0.1\" } ], \"fateflow\" :[ { \"port\" : 9360 , \"ip\" : \"127.0.0.1\" } ] }, \"10002\" : { \"default\" :[ { \"port\" : 9470 , \"ip\" : \"127.0.0.1\" } ] } }, \"permission\" : { \"default_allow\" : true } }","title":"5.2 Routing table configuration"},{"location":"document_navigation/","text":"Document Navigation \u00b6 1. General Document Variables \u00b6 You will see the following document variables in all FATE Flow documentation, with the following meanings. FATE_PROJECT_BASE: denotes the FATE project deployment directory, containing configuration, fate algorithm packages, fate clients and subsystems: bin , conf , examples , fate , fateflow , fateboard , eggroll , etc. FATE_BASE: The deployment directory of FATE , named fate , contains algorithm packages, clients: federatedml , fate arch , fate client , usually the path is ${FATE_PROJECT_BASE}/fate FATE_FLOW_BASE: The deployment directory of FATE Flow , named fateflow , containing fate flow server , etc., usually the path is ${FATE_PROJECT_BASE}/fateflow FATE_BOARD_BASE: the deployment directory of FATE Board , name fateboard , contains fateboard , usually the path is ${FATE_PROJECT_BASE}/fateboard EGGROLL_HOME: the deployment directory for EggRoll , named eggroll , containing rollsite , clustermanager , nodemanager , etc., usually in ${FATE_PROJECT_BASE}/eggroll Deploy the FATE project with reference to the main repository FederatedAI/FATE , the main directory structure is as follows FATE_VERSION: The version number of FATE , e.g. 1.7.0 FATE_FLOW_VERSION: the version number of FATE Flow , e.g. 1.7.0 version: Generally in the deployment documentation, it means the version number of FATE project , such as 1.7.0 , 1.6.0 . version_tag: generally in the deployment documentation, indicates the FATE project version tag, such as release , rc1 , rc10 2. Glossary of terms \u00b6 component_name : the name of the component when the task is submitted, a task can have more than one of the same component, but the component_name is not the same, equivalent to an instance of the class componet_module_name : the class name of the component model_alias : similar to component_name , which is the name of the output model that the user can configure inside dsl Example. In the figure dataio_0 is component_name , DataIO is componet_module_name , dataio is model_alias ! 3. Reading guide \u00b6 you can first read overall design Refer to the main repository FATE for deployment, either standalone (installer, Docker, source compiler) or cluster (Ansible, Docker, Kuberneters) You can refer to the directory in order of navigation","title":"Document Navigation"},{"location":"document_navigation/#document-navigation","text":"","title":"Document Navigation"},{"location":"document_navigation/#1-general-document-variables","text":"You will see the following document variables in all FATE Flow documentation, with the following meanings. FATE_PROJECT_BASE: denotes the FATE project deployment directory, containing configuration, fate algorithm packages, fate clients and subsystems: bin , conf , examples , fate , fateflow , fateboard , eggroll , etc. FATE_BASE: The deployment directory of FATE , named fate , contains algorithm packages, clients: federatedml , fate arch , fate client , usually the path is ${FATE_PROJECT_BASE}/fate FATE_FLOW_BASE: The deployment directory of FATE Flow , named fateflow , containing fate flow server , etc., usually the path is ${FATE_PROJECT_BASE}/fateflow FATE_BOARD_BASE: the deployment directory of FATE Board , name fateboard , contains fateboard , usually the path is ${FATE_PROJECT_BASE}/fateboard EGGROLL_HOME: the deployment directory for EggRoll , named eggroll , containing rollsite , clustermanager , nodemanager , etc., usually in ${FATE_PROJECT_BASE}/eggroll Deploy the FATE project with reference to the main repository FederatedAI/FATE , the main directory structure is as follows FATE_VERSION: The version number of FATE , e.g. 1.7.0 FATE_FLOW_VERSION: the version number of FATE Flow , e.g. 1.7.0 version: Generally in the deployment documentation, it means the version number of FATE project , such as 1.7.0 , 1.6.0 . version_tag: generally in the deployment documentation, indicates the FATE project version tag, such as release , rc1 , rc10","title":"1. General Document Variables"},{"location":"document_navigation/#2-glossary-of-terms","text":"component_name : the name of the component when the task is submitted, a task can have more than one of the same component, but the component_name is not the same, equivalent to an instance of the class componet_module_name : the class name of the component model_alias : similar to component_name , which is the name of the output model that the user can configure inside dsl Example. In the figure dataio_0 is component_name , DataIO is componet_module_name , dataio is model_alias !","title":"2. Glossary of terms"},{"location":"document_navigation/#3-reading-guide","text":"you can first read overall design Refer to the main repository FATE for deployment, either standalone (installer, Docker, source compiler) or cluster (Ansible, Docker, Kuberneters) You can refer to the directory in order of navigation","title":"3. Reading guide"},{"location":"faq/","text":"FAQ \u00b6 1. Description \u00b6 2. Log descriptions \u00b6 In general, to troubleshoot a problem, the following logs are required. v1.7+ \u00b6 ${FATE_PROJECT_BASE}/fateflow/logs/$job_id/fate_flow_schedule.log , this is the internal scheduling log of a certain task ${FATE_PROJECT_BASE}/fateflow/logs/$job_id/* These are all the execution logs of a certain task ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_stat.log , this is some logs that are not related to tasks ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_schedule.log , this is the overall scheduling log of all tasks ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_detect.log , which is the overall exception detection log for all tasks v1.7- \u00b6 ${FATE_PROJECT_BASE}/logs/$job_id/fate_flow_schedule.log , this is the internal scheduling log for a particular task ${FATE_PROJECT_BASE}/logs/$job_id/* These are all the execution logs of a certain task ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_stat.log , this is some logs that are not related to the task ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_schedule.log , this is the overall scheduling log of all tasks ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_detect.log , this is the overall exception detection log of all tasks 3. Offline \u00b6 upload failed \u00b6 checking eggroll related services for exceptions. submit job is stuck \u00b6 check if both rollsite services have been killed submit_job returns grpc exception \u00b6 submit job link: guest fate_flow -> guest rollsite -> host rollsite -> host fate_flow check that each service in the above link is not hung, it must be ensured that each node is functioning properly. checking that the routing table is correctly configured. dataio component exception: not enough values to unpack (expected 2, got 1) \u00b6 the data separator does not match the separator in the configuration Exception thrown at task runtime: \"Count of data_instance is 0\" \u00b6 task has an intersection component and the intersection match rate is 0, need to check if the output data ids of guest and host can be matched. 4. Serving \u00b6 load model retcode returns 100, what are the possible reasons? \u00b6 no fate-servings deployed flow did not fetch the fate-servings address flow reads the address of the fate-servings in priority order: read from zk if zk is not open, it will read from the fate-servings configuration file, the configuration path is 1.5+: ${FATE_PROJECT_BASE}/conf/service_conf.yaml 1.5-: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json load model retcode returns 123, what are the possible reasons? \u00b6 Incorrect model information. This error code is thrown by fate-servings not finding the model. bind model operation prompted \"no service id\"? \u00b6 Customize the service_id in the bind configuration Where is the configuration of servings? How do I configure it? \u00b6 v1.5+ Configuration path: ${FATE_PROJECT_BASE}/conf/service_conf.yaml servings : hosts : - 127.0.0.1:8000 v1.5- Configuration path: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json { \"servers\" : { \"servings\" : [ \"127.0.0.1:8000\" ] } }","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#1-description","text":"","title":"1. Description"},{"location":"faq/#2-log-descriptions","text":"In general, to troubleshoot a problem, the following logs are required.","title":"2. Log descriptions"},{"location":"faq/#v17","text":"${FATE_PROJECT_BASE}/fateflow/logs/$job_id/fate_flow_schedule.log , this is the internal scheduling log of a certain task ${FATE_PROJECT_BASE}/fateflow/logs/$job_id/* These are all the execution logs of a certain task ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_stat.log , this is some logs that are not related to tasks ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_schedule.log , this is the overall scheduling log of all tasks ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_detect.log , which is the overall exception detection log for all tasks","title":"v1.7+"},{"location":"faq/#v17-","text":"${FATE_PROJECT_BASE}/logs/$job_id/fate_flow_schedule.log , this is the internal scheduling log for a particular task ${FATE_PROJECT_BASE}/logs/$job_id/* These are all the execution logs of a certain task ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_stat.log , this is some logs that are not related to the task ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_schedule.log , this is the overall scheduling log of all tasks ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_detect.log , this is the overall exception detection log of all tasks","title":"v1.7-"},{"location":"faq/#3-offline","text":"","title":"3. Offline"},{"location":"faq/#upload-failed","text":"checking eggroll related services for exceptions.","title":"upload failed"},{"location":"faq/#submit-job-is-stuck","text":"check if both rollsite services have been killed","title":"submit job is stuck"},{"location":"faq/#submit_job-returns-grpc-exception","text":"submit job link: guest fate_flow -> guest rollsite -> host rollsite -> host fate_flow check that each service in the above link is not hung, it must be ensured that each node is functioning properly. checking that the routing table is correctly configured.","title":"submit_job returns grpc exception"},{"location":"faq/#dataio-component-exception-not-enough-values-to-unpack-expected-2-got-1","text":"the data separator does not match the separator in the configuration","title":"dataio component exception: not enough values to unpack (expected 2, got 1)"},{"location":"faq/#exception-thrown-at-task-runtime-count-of-data_instance-is-0","text":"task has an intersection component and the intersection match rate is 0, need to check if the output data ids of guest and host can be matched.","title":"Exception thrown at task runtime: \"Count of data_instance is 0\""},{"location":"faq/#4-serving","text":"","title":"4. Serving"},{"location":"faq/#load-model-retcode-returns-100-what-are-the-possible-reasons","text":"no fate-servings deployed flow did not fetch the fate-servings address flow reads the address of the fate-servings in priority order: read from zk if zk is not open, it will read from the fate-servings configuration file, the configuration path is 1.5+: ${FATE_PROJECT_BASE}/conf/service_conf.yaml 1.5-: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json","title":"load model retcode returns 100, what are the possible reasons?"},{"location":"faq/#load-model-retcode-returns-123-what-are-the-possible-reasons","text":"Incorrect model information. This error code is thrown by fate-servings not finding the model.","title":"load model retcode returns 123, what are the possible reasons?"},{"location":"faq/#bind-model-operation-prompted-no-service-id","text":"Customize the service_id in the bind configuration","title":"bind model operation prompted \"no service id\"?"},{"location":"faq/#where-is-the-configuration-of-servings-how-do-i-configure-it","text":"v1.5+ Configuration path: ${FATE_PROJECT_BASE}/conf/service_conf.yaml servings : hosts : - 127.0.0.1:8000 v1.5- Configuration path: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json { \"servers\" : { \"servings\" : [ \"127.0.0.1:8000\" ] } }","title":"Where is the configuration of servings? How do I configure it?"},{"location":"fate_flow/","text":"Overall Design \u00b6 1. Logical Architecture \u00b6 DSL defined jobs Top-down vertical subtask flow scheduling, multi-participant joint subtask coordination Independent isolated task execution work processes Support for multiple types and versions of components Computational abstraction API Storage abstraction API Cross-party transfer abstraction API 2. Service Architecture \u00b6 2.1 FATE \u00b6 2.2 FATE Flow \u00b6 3. Scheduling Architecture \u00b6 3.1 A new scheduling architecture based on shared-state \u00b6 Stripping state (resources, jobs) and managers (schedulers, resource managers) Resource state and job state are persisted in MySQL and shared globally to provide reliable transactional operations Improve the high availability and scalability of managed services Jobs can be intervened to support restart, rerun, parallel control, resource isolation, etc. 3.2 State-Driven Scheduling \u00b6 Resource coordination Pull up the child process Executor to run the component Executor reports state to local Server and also to scheduler Multi-party task state calculation of federal task state Upstream and downstream task states compute job states 4. Multiparty Resource Coordination \u00b6 The total resource size of each engine is configured through the configuration file, and the system is subsequently interfaced The cores_per_node in the total resource size indicates the number of cpu cores per compute node, and nodes indicates the number of compute nodes. FATEFlow server reads the resource size configuration from the configuration file when it starts and registers the update to the database The resources are requested in Job dimension, and take effect when Job Conf is submitted, formula: task_parallelism*task_cores See separate section of the documentation for details 5. Data Flow Tracking \u00b6 Definition metric type: metric type, such as auc, loss, ks, etc. metric namespace: custom metric namespace, e.g. train, predict metric name: custom metric name, e.g. auc0, hetero_lr_auc0 metric data: metric data in key-value form metric meta: metric meta information in key-value form, support flexible drawing API log_metric_data(metric_namespace, metric_name, metrics) set_metric_meta(metric_namespace, metric_name, metric_meta) get_metric_data(metric_namespace, metric_name) get_metric_meta(metric_namespace, metric_name) 6. Realtime Monitoring \u00b6 Job process survivability detection Job timeout detection Resource recovery detection Base engine session timeout detection 7. Task Component Registry \u00b6 8. Multi-Party Federated Model Registry \u00b6 Using Google Protocol Buffer as the model storage protocol, using cross-language sharing, each algorithmic model consists of two parts: ModelParam & ModelMeta A Pipeline generates a series of algorithmic models The model named Pipeline stores Pipeline modeling DSL and online inference DSL Under federal learning, model consistency needs to be guaranteed for all participants, i.e., model binding model_key is the model identifier defined by the user when submitting the task The model IDs of the federated parties are the party identification information role, party_id, plus model_key The model version of the federated parties must be unique and consistent, and FATE-Flow directly sets it to job_id 9. Data Access \u00b6 Upload. External storage is imported directly to FATE Storage, creating a new DTable When the job runs, Reader reads directly from Storage Table Bind. Key the external storage address to a new DTable in FATE When the job is running, Reader reads data from external storage via Meta and transfers it to FATE Storage Connecting to the Big Data ecosystem: HDFS, Hive/MySQL 10. Multi-Party Collaboration Authority Management \u00b6","title":"Overall Design"},{"location":"fate_flow/#overall-design","text":"","title":"Overall Design"},{"location":"fate_flow/#1-logical-architecture","text":"DSL defined jobs Top-down vertical subtask flow scheduling, multi-participant joint subtask coordination Independent isolated task execution work processes Support for multiple types and versions of components Computational abstraction API Storage abstraction API Cross-party transfer abstraction API","title":"1. Logical Architecture"},{"location":"fate_flow/#2-service-architecture","text":"","title":"2. Service Architecture"},{"location":"fate_flow/#21-fate","text":"","title":"2.1 FATE"},{"location":"fate_flow/#22-fate-flow","text":"","title":"2.2 FATE Flow"},{"location":"fate_flow/#3-scheduling-architecture","text":"","title":"3. Scheduling Architecture"},{"location":"fate_flow/#31-a-new-scheduling-architecture-based-on-shared-state","text":"Stripping state (resources, jobs) and managers (schedulers, resource managers) Resource state and job state are persisted in MySQL and shared globally to provide reliable transactional operations Improve the high availability and scalability of managed services Jobs can be intervened to support restart, rerun, parallel control, resource isolation, etc.","title":"3.1 A new scheduling architecture based on shared-state"},{"location":"fate_flow/#32-state-driven-scheduling","text":"Resource coordination Pull up the child process Executor to run the component Executor reports state to local Server and also to scheduler Multi-party task state calculation of federal task state Upstream and downstream task states compute job states","title":"3.2 State-Driven Scheduling"},{"location":"fate_flow/#4-multiparty-resource-coordination","text":"The total resource size of each engine is configured through the configuration file, and the system is subsequently interfaced The cores_per_node in the total resource size indicates the number of cpu cores per compute node, and nodes indicates the number of compute nodes. FATEFlow server reads the resource size configuration from the configuration file when it starts and registers the update to the database The resources are requested in Job dimension, and take effect when Job Conf is submitted, formula: task_parallelism*task_cores See separate section of the documentation for details","title":"4. Multiparty Resource Coordination"},{"location":"fate_flow/#5-data-flow-tracking","text":"Definition metric type: metric type, such as auc, loss, ks, etc. metric namespace: custom metric namespace, e.g. train, predict metric name: custom metric name, e.g. auc0, hetero_lr_auc0 metric data: metric data in key-value form metric meta: metric meta information in key-value form, support flexible drawing API log_metric_data(metric_namespace, metric_name, metrics) set_metric_meta(metric_namespace, metric_name, metric_meta) get_metric_data(metric_namespace, metric_name) get_metric_meta(metric_namespace, metric_name)","title":"5. Data Flow Tracking"},{"location":"fate_flow/#6-realtime-monitoring","text":"Job process survivability detection Job timeout detection Resource recovery detection Base engine session timeout detection","title":"6. Realtime Monitoring"},{"location":"fate_flow/#7-task-component-registry","text":"","title":"7. Task Component Registry"},{"location":"fate_flow/#8-multi-party-federated-model-registry","text":"Using Google Protocol Buffer as the model storage protocol, using cross-language sharing, each algorithmic model consists of two parts: ModelParam & ModelMeta A Pipeline generates a series of algorithmic models The model named Pipeline stores Pipeline modeling DSL and online inference DSL Under federal learning, model consistency needs to be guaranteed for all participants, i.e., model binding model_key is the model identifier defined by the user when submitting the task The model IDs of the federated parties are the party identification information role, party_id, plus model_key The model version of the federated parties must be unique and consistent, and FATE-Flow directly sets it to job_id","title":"8. Multi-Party Federated Model Registry"},{"location":"fate_flow/#9-data-access","text":"Upload. External storage is imported directly to FATE Storage, creating a new DTable When the job runs, Reader reads directly from Storage Table Bind. Key the external storage address to a new DTable in FATE When the job is running, Reader reads data from external storage via Meta and transfers it to FATE Storage Connecting to the Big Data ecosystem: HDFS, Hive/MySQL","title":"9. Data Access"},{"location":"fate_flow/#10-multi-party-collaboration-authority-management","text":"","title":"10. Multi-Party Collaboration Authority Management"},{"location":"fate_flow_authority_management/","text":"Certification program \u00b6 1. Description \u00b6 Authentication includes: client authentication and site authentication Authentication configuration: $FATE_BASE/conf/service_conf.yaml . ## Site authentication requires configuration of the party site id party_id : # Hook module, need to configure different hooks according to different scenarios hook_module : client_authentication : fate_flow.hook.flow.client_authentication site_authentication : fate_flow.hook.flow.site_authentication # Third-party authentication service name hook_server_name : authentication : client : # Client authentication switch switch : false http_app_key : http_secret_key : site : # Site authentication switch switch : false Authentication method: Support flow's own authentication module authentication and third-party service authentication. The authentication hooks can be modified by hook_module, currently the following hooks are supported. client_authentication supports \"fate_flow.hook.flow.client_authentication\" and \"fate_flow.hook.api.client_authentication\", where the former is the client authentication method of flow. the former is the client authentication method of flow, the latter is the client authentication method of third-party services. site_authentication supports \"fate_flow.hook.flow.site_authentication\" and \"fate_flow.hook.api.site_authentication\", where the former is the site authentication method of flow and the latter is the third-party The former is the site authentication method of flow, and the latter is the third-party site authentication method. 2. client authentication \u00b6 2.1 flow authentication \u00b6 2.1.1 Configuration \u00b6 hook_module : client_authentication : fate_flow.hook.flow.client_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\" 2.2.2 Interface Authentication Method \u00b6 All client requests sent to Flow need to add the following header `TIMESTAMP`: Unix timestamp in milliseconds, e.g. `1634890066095` means `2021-10-22 16:07:46 GMT+0800`, note that the difference between this time and the current time of the server cannot exceed 60 seconds `NONCE`: random string, can use UUID, such as `782d733e-330f-11ec-8be9-a0369fa972af` `APP_KEY`: must be consistent with `http_app_key` in the Flow configuration file `SIGNATURE`: signature generated based on `http_secret_key` and request parameters in the Flow configuration file 2.2.3 Signature generation method \u00b6 Combine the following elements in order TIMESTAMP NONCE APP_KEY request path + query parameters, if there are no query parameters then the final ? , such as /v1/job/submit or /v1/data/upload?table_name=dvisits_hetero_guest&namespace=experiment If Content-Type is application/json , then it is the original JSON, i.e. the request body; if not, this item is filled with the empty string If Content-Type is application/x-www-form-urlencoded or multipart/form-data , all parameters need to be sorted alphabetically and urlencode , refer to RFC 3986 (i.e. except a-zA-Z0-9- . _~ ), note that the file does not participate in the signature; if not, this item is filled with the empty string Concatenate all parameters with the newline character \\n and encode them in ASCII . Use the HMAC-SHA1 algorithm to calculate the binary digest using the http_secret_key key in the Flow configuration file Encode the binary digest using base64 2.2.4 Example \u00b6 You can refer to Fate SDK 2.2 Third party service authentication \u00b6 2.2.1 Configuration \u00b6 hook_module : client_authentication : fate_flow.hook.api.client_authentication authentication : client : switch : true hook_server_name : \"xxx\" 2.2.2 Interface Authentication Method \u00b6 The third party service needs to register the client authentication interface with flow, refer to Client Authentication Service Registration If the authentication fails, flow will return the authentication failure directly to the client. 3. Site Authentication \u00b6 3.1 flow authentication \u00b6 3.1.1 Configuration \u00b6 party_id : 9999 hook_module : site_authentication : fate_flow.hook.flow.site_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\" 3.1.2 Authentication scheme \u00b6 flow generates a pair of public and private keys when it starts, and needs to exchange public keys with each other with its partners. When sending a request, it uses the public key to generate a signature by RSA algorithm, and the requested site verifies the signature by its co-key. flow provides a key management cli as follows 3.1.3 Key Management \u00b6 Add the partner's public key Used to save other fate site public key information, that is, for cooperation with other sites flow key save -c fateflow/examples/key/save_public_key.json Options parameters short format long format required type description conf_path -c -conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter name required type description party_id yes string site id key yes string site public key return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } Delete a partner's public key Delete the partner site public key, i.e. cancel the partnership flow key delete -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } Query the co-key Query the public key information of our or partner's fate site flow key query -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\ nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+ VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/ gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n /wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 3.2 Third-party service authentication \u00b6 3.2.1 Configuration \u00b6 hook_module : site_authentication : fate_flow.hook.api.site_authentication authentication : site : switch : true hook_server_name : \"xxx\" 3.2.2 Interface Authentication Method \u00b6 Third party services need to register the site authentication interface with flow, refer to site authentication service registration If the authentication fails, flow will directly return the authentication failure to the initiator.","title":"Certification program"},{"location":"fate_flow_authority_management/#certification-program","text":"","title":"Certification program"},{"location":"fate_flow_authority_management/#1-description","text":"Authentication includes: client authentication and site authentication Authentication configuration: $FATE_BASE/conf/service_conf.yaml . ## Site authentication requires configuration of the party site id party_id : # Hook module, need to configure different hooks according to different scenarios hook_module : client_authentication : fate_flow.hook.flow.client_authentication site_authentication : fate_flow.hook.flow.site_authentication # Third-party authentication service name hook_server_name : authentication : client : # Client authentication switch switch : false http_app_key : http_secret_key : site : # Site authentication switch switch : false Authentication method: Support flow's own authentication module authentication and third-party service authentication. The authentication hooks can be modified by hook_module, currently the following hooks are supported. client_authentication supports \"fate_flow.hook.flow.client_authentication\" and \"fate_flow.hook.api.client_authentication\", where the former is the client authentication method of flow. the former is the client authentication method of flow, the latter is the client authentication method of third-party services. site_authentication supports \"fate_flow.hook.flow.site_authentication\" and \"fate_flow.hook.api.site_authentication\", where the former is the site authentication method of flow and the latter is the third-party The former is the site authentication method of flow, and the latter is the third-party site authentication method.","title":"1. Description"},{"location":"fate_flow_authority_management/#2-client-authentication","text":"","title":"2. client authentication"},{"location":"fate_flow_authority_management/#21-flow-authentication","text":"","title":"2.1 flow authentication"},{"location":"fate_flow_authority_management/#211-configuration","text":"hook_module : client_authentication : fate_flow.hook.flow.client_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\"","title":"2.1.1 Configuration"},{"location":"fate_flow_authority_management/#222-interface-authentication-method","text":"All client requests sent to Flow need to add the following header `TIMESTAMP`: Unix timestamp in milliseconds, e.g. `1634890066095` means `2021-10-22 16:07:46 GMT+0800`, note that the difference between this time and the current time of the server cannot exceed 60 seconds `NONCE`: random string, can use UUID, such as `782d733e-330f-11ec-8be9-a0369fa972af` `APP_KEY`: must be consistent with `http_app_key` in the Flow configuration file `SIGNATURE`: signature generated based on `http_secret_key` and request parameters in the Flow configuration file","title":"2.2.2 Interface Authentication Method"},{"location":"fate_flow_authority_management/#223-signature-generation-method","text":"Combine the following elements in order TIMESTAMP NONCE APP_KEY request path + query parameters, if there are no query parameters then the final ? , such as /v1/job/submit or /v1/data/upload?table_name=dvisits_hetero_guest&namespace=experiment If Content-Type is application/json , then it is the original JSON, i.e. the request body; if not, this item is filled with the empty string If Content-Type is application/x-www-form-urlencoded or multipart/form-data , all parameters need to be sorted alphabetically and urlencode , refer to RFC 3986 (i.e. except a-zA-Z0-9- . _~ ), note that the file does not participate in the signature; if not, this item is filled with the empty string Concatenate all parameters with the newline character \\n and encode them in ASCII . Use the HMAC-SHA1 algorithm to calculate the binary digest using the http_secret_key key in the Flow configuration file Encode the binary digest using base64","title":"2.2.3 Signature generation method"},{"location":"fate_flow_authority_management/#224-example","text":"You can refer to Fate SDK","title":"2.2.4 Example"},{"location":"fate_flow_authority_management/#22-third-party-service-authentication","text":"","title":"2.2 Third party service authentication"},{"location":"fate_flow_authority_management/#221-configuration","text":"hook_module : client_authentication : fate_flow.hook.api.client_authentication authentication : client : switch : true hook_server_name : \"xxx\"","title":"2.2.1 Configuration"},{"location":"fate_flow_authority_management/#222-interface-authentication-method_1","text":"The third party service needs to register the client authentication interface with flow, refer to Client Authentication Service Registration If the authentication fails, flow will return the authentication failure directly to the client.","title":"2.2.2 Interface Authentication Method"},{"location":"fate_flow_authority_management/#3-site-authentication","text":"","title":"3. Site Authentication"},{"location":"fate_flow_authority_management/#31-flow-authentication","text":"","title":"3.1 flow authentication"},{"location":"fate_flow_authority_management/#311-configuration","text":"party_id : 9999 hook_module : site_authentication : fate_flow.hook.flow.site_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\"","title":"3.1.1 Configuration"},{"location":"fate_flow_authority_management/#312-authentication-scheme","text":"flow generates a pair of public and private keys when it starts, and needs to exchange public keys with each other with its partners. When sending a request, it uses the public key to generate a signature by RSA algorithm, and the requested site verifies the signature by its co-key. flow provides a key management cli as follows","title":"3.1.2 Authentication scheme"},{"location":"fate_flow_authority_management/#313-key-management","text":"Add the partner's public key Used to save other fate site public key information, that is, for cooperation with other sites flow key save -c fateflow/examples/key/save_public_key.json Options parameters short format long format required type description conf_path -c -conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter name required type description party_id yes string site id key yes string site public key return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } Delete a partner's public key Delete the partner site public key, i.e. cancel the partnership flow key delete -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } Query the co-key Query the public key information of our or partner's fate site flow key query -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\ nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+ VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/ gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n /wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3.1.3 Key Management"},{"location":"fate_flow_authority_management/#32-third-party-service-authentication","text":"","title":"3.2 Third-party service authentication"},{"location":"fate_flow_authority_management/#321-configuration","text":"hook_module : site_authentication : fate_flow.hook.api.site_authentication authentication : site : switch : true hook_server_name : \"xxx\"","title":"3.2.1 Configuration"},{"location":"fate_flow_authority_management/#322-interface-authentication-method","text":"Third party services need to register the site authentication interface with flow, refer to site authentication service registration If the authentication fails, flow will directly return the authentication failure to the initiator.","title":"3.2.2 Interface Authentication Method"},{"location":"fate_flow_client/","text":"FATE Flow Client \u00b6 Description \u00b6 Introduces how to install and use the FATE Flow Client , which is usually included in the FATE Client , which contains several clients of the FATE Project : Pipeline , FATE Flow Client and FATE Test . Introducing the command line provided by FATE Flow Client , all commands will have a common invocation entry, you can type flow in the command line to get all the command categories and their subcommands. [ IN ] flow [ OUT ] Usage: flow COMMAND [ OPTIONS ] Fate Flow Client Options. -h, --help Show this message and exit. Commands: -h, --help Component Component Operations data Data Operations init Flow CLI Init Command Job Job Operations model Model Operations queue Queue Operations table Table Operations task Task Operations For more information, please consult the following documentation or use the flow --help command. All commands are described Install FATE Client \u00b6 Online installation \u00b6 FATE Client will be distributed to pypi , you can install the corresponding version directly using tools such as pip , e.g. pip install fate-client or pip install atmosphere-client == ${ version } Installing on a FATE cluster \u00b6 Please install on a machine with version 1.5.1 and above of FATE. Installation command. cd $FATE_PROJECT_BASE / # Enter the virtual environment of FATE PYTHON source bin/init_env.sh # Execute the installation cd fate/python/fate_client && python setup.py install Once the installation is complete, type flow on the command line and enter, the installation will be considered successful if you get the following return. Usage: flow [ OPTIONS ] COMMAND [ ARGS ] ... Fate Flow Client Options: -h, --help Show this message and exit. Commands: component Component Operations data Data Operations init Flow CLI Init Command Job Job Operations model Model Operations queue Queue Operations Table Table Operations tag Tag Operations task Task Operations Task Operations ## Initialization Before using the fate-client, you need to initialize it. It is recommended to use the configuration file of fate-client to initialize it. ### Specify the fateflow service address ``` bash ### Specify the IP address and port of the fateflow service for initialization flow init --ip 192 .168.0.1 --port 9380 via the configuration file on the FATE cluster \u00b6 ### Go to the FATE installation path, e.g. /data/projects/fate cd $FATE_PROJECT_BASE / flow init -c conf/service_conf.yaml The initialization is considered successful if you get the following return. { \"retcode\" : 0 , \"retmsg\" : \"Fate Flow CLI has been initialized successfully.\" } Verify \u00b6 Mainly verify that the client can connect to the FATE Flow Server , e.g. try to query the current job status flow job query Usually the retcode in the return is 0 . { \"data\" : [], \"retcode\" : 0 , \"retmsg\" : \"no job could be found\" } If it returns something like the following, it means that the connection is not available, please check the network situation { \"retcode\" : 100 , \"retmsg\" : \"Connection refused. Please check if the fate flow service is started\" } Data \u00b6 upload \u00b6 Used to upload the input data for the modeling task to the storage system supported by fate flow data upload -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description file yes string data storage path id_delimiter yes string Data separator, e.g. \",\" head no int Whether the data has a table header partition yes int Number of data partitions storage_engine no string storage engine type, default \"EGGROLL\", also support \"HDFS\", \"LOCALFS\", \"HIVE\", etc. namespace yes string table namespace table_name yes string table name storage_address no object The storage address of the corresponding storage engine is required use_local_data no int The default is 1, which means use the data from the client's machine; 0 means use the data from the fate flow service's machine. drop no int Whether to overwrite uploads extend_sid no bool Whether to add a new column for uuid id, default False auto_increasing_sid no bool Whether the new id column is self-increasing (will only work if extend_sid is True), default False mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, passing in the meta parameter will generate anonymous information about the feature. Example eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } upload-history \u00b6 Used to query upload table history. flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID Options parameter name required type description -l --limit no int Number of records to return. (default: 10) -j --job_id no string Job ID download \u00b6 Brief description: Used to download data from within the fate storage engine to file format data flow data download -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description output_path yes string download_path table_name yes string fate table name namespace yes int fate table namespace Example: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } writer \u00b6 Brief description: Used to download data from the fate storage engine to the external engine or to save data as a new table flow data writer -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description table_name yes string fate table name namespace yes int fate table namespace storage_engine no string Storage type, e.g., MYSQL address no object storage_address output_namespace no string Save as a table namespace for fate output_name no string Save as fate's table name **Note: storage_engine, address are combined parameters that provide storage to the specified engine. output_namespace, output_name are also combined parameters, providing the function to save as a new table of the same engine** Example: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } return parameter name type description jobId string job id retcode int return code retmsg string return information data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } Table \u00b6 info \u00b6 Query information about the fate table (real storage address, number, schema, etc.) flow table info [ options ] options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns | parameter name | type | description | | :------ | :----- | -------- | | retcode | int | return code | | retmsg | string | return information | | data | object | return data | Sample { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exists\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 You can delete table data with table delete flow table delete [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return message data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 Real storage addresses can be mapped to fate storage tables via table bind flow table bind [ options ] options parameters short format long format required type description conf_path -c --conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter_name required type description name yes string fate table name namespace yes string fate table namespace engine yes string storage engine, supports \"HDFS\", \"MYSQL\", \"PATH\" yes object real storage address drop no int Overwrite previous information head no int Whether there is a data table header id_delimiter no string Data separator id_column no string id field feature_column no array feature_field mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, if the meta parameter is passed in during the table bind phase, no anonymous information about the feature is generated directly. The feature anonymization information of the original data will be updated after the data has passed through the reader component once Sample hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } return parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } disable \u00b6 Tables can be made unavailable by table disable flow table disable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } enable \u00b6 Tables can be made available with table enable flow table enable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } disable-delete \u00b6 Tables that are currently unavailable can be deleted with disable-delete flow table disable-delete return parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } Job \u00b6 submit \u00b6 Build a federated learning job with two configuration files: job dsl and job conf, and submit it to the scheduler for execution flow job submit [ options ] Options parameter name required type description -d, --dsl-path yes string path to job dsl -c, --conf-path yes string job conf's path Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data data.dsl_path string The path to the actual running dsl configuration generated by the system based on the submitted dsl content data.runtime_conf_on_party_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.dsl_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.board_url string fateboard view address data.model_info dict Model identification information Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } rerun \u00b6 Rerun a job flow job rerun [ options ] Options | parameter name | required | type | description | | :------------- | :------- | :--- | ----------- |------- | | -j, --job-id | yes | string | job id path | | --cpn, --component-name | no | string | Specifies which component to rerun from, unspecified components will not be executed if they have no upstream dependencies on the specified component; if not specified, the entire job will be rerun | | --force | no | bool | The job will be rerun even if it succeeds; if not specified, the job will be skipped if it succeeds | Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data Example flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force parameter-update \u00b6 Update the job parameters flow job parameter-update [ options ] Options parameter-name required type description -j, --job-id yes string job id path -c, --conf-path yes string The contents of the job conf that needs to be updated, no need to fill in parameters that don't need to be updated Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict Returns the updated job conf Example Assuming that the job is updated with some of the execution parameters of the hetero_lr_0 component, the configuration file is as follows. { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } Execution of the following command takes effect. flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json Execute the following command to rerun. flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force stop \u00b6 Cancels or terminates the specified job Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id yes Job ID Example flow job stop -j $JOB_ID query \u00b6 Retrieve task information. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID view \u00b6 Retrieve the job data view. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job view -j $JOB_ID -s complete config \u00b6 Download the configuration file for the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role yes role 3 party_id -p --party_id yes Party ID 4 output_path -o --output-path yes output directory Example flow job config -j $JOB_ID -r host -p 10000 --output-path . /examples/ log \u00b6 Download the log file of the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 output_path -o --output-path yes output directory Example flow job log -j JOB_ID --output-path . /examples/ list \u00b6 Show the list of jobs. Options number parameters short-format long-format required parameters parameter description 1 limit -l -limit no Returns the number limit (default: 10) Example flow job list flow job list -l 30 dsl \u00b6 Predictive DSL file generator. Options number parameters short-format long-format required parameters parameter description 1 cpn_list -cpn-list No List of user-specified component names 2 cpn_path -cpn-path No User-specified path to a file with a list of component names 3 train_dsl_path -train-dsl-path yes path to the training dsl file 4 output_path -o --output-path no output directory path Example flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow /examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/ Task \u00b6 query \u00b6 Retrieve Task information Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 component_name -cpn --component_name no component_name 5 status -s --status No Task status Example flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete list \u00b6 Show the list of Tasks. Options number parameters short format long format required parameters parameter description 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow task list flow task list -l 25 Tracking \u00b6 metrics \u00b6 Get a list of all metrics names generated by a component task flow tracking metrics [ options ] Options parameter name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data Example flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } metric-all \u00b6 Get all the output metrics for a component task flow tracking metric-all [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output (limited space, only some of the metric data is shown and some values are omitted in the middle of the array type data): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } parameters \u00b6 After the job is submitted, the system resolves the actual component task parameters based on the component_parameters in the job conf combined with the system default component parameters flow tracking parameters [ options ] Options parameter_name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } output-data \u00b6 Get the component output flow tracking output-data [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl -o, --output-path yes string Path to output data Returns parameter name type description retcode int Return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o . / Output : { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory \" } output-data-table \u00b6 Get the output data table name of the component flow tracking output-data-table [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 output: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } output-model \u00b6 Get the output model of a component task flow tracking output-model [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } get-summary \u00b6 Each component allows to set some summary information for easy observation and analysis flow tracking get-summary [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-source \u00b6 For querying the parent and source tables of a table flow table tracking-source [ options ] Options parameter-name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero _lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-job \u00b6 For querying the usage of a particular table flow table tracking-job [ options ] Options parameter name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"count\" : 2 , \"jobs\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" } Model \u00b6 load \u00b6 Load a model generated by deploy to Fate-Serving. flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path Yes Config file path job_id -j --job-id Yes Job ID Example { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 Bind a model generated by deploy to Fate-Serving. flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path job_id -j --job-id Yes Job ID Example { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" } import \u00b6 Import the model from a file or storage engine. flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path from_database --from-database Yes Import the model from storage engine Example { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } export \u00b6 Export the model to a file or storage engine. flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path to_database --to-database Yes Export the model to storage engine Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } migrate \u00b6 Migrate the model. flow model migrate -c examples/model/migrate_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path Example { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } tag-list \u00b6 List tags of the model. flow model tag-list -j <job_id> Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag-model \u00b6 Add or remove a tag from the model. flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag_name -t --tag-name No Tag name remove --remove Yes Remove the tag deploy \u00b6 Configure predict DSL. flow model deploy --model-id <model_id> --model-version <model_version> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version cpn_list --cpn-list Yes Components list cpn_path --cpn-path Yes Load components list from a file dsl_path --dsl-path Yes Predict DSL file path cpn_step_index --cpn-step-index Yes Specify a checkpoint model to replace the pipeline model Use : to separate component name and step index E.g. --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name Yes Specify a checkpoint model to replace the pipeline model. Use : to separate component name and step name E.g. --cpn-step-name cpn_b:foobar Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } } get-predict-dsl \u00b6 Get predict DSL of the model. flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path get-predict-conf \u00b6 Get the template of predict config. flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path get-model-info \u00b6 Get model information. flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role Yes Party role party_id -p --party-id Yes Party ID detail --detail Yes Display detailed information homo-convert \u00b6 Convert trained homogenous model to the format of another ML framework. flow model homo-convert -c examples/model/homo_convert_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path homo-deploy \u00b6 Deploy trained homogenous model to a target online serving system. Currently the supported target serving system is KFServing. flow model homo-deploy -c examples/model/homo_deploy_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path Checkpoint \u00b6 list \u00b6 List checkpoints. flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] } get \u00b6 Get checkpoint information. flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> Example Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name step_index --step-index Yes Step index, cannot be used with step_name step_name --step-name Yes Step name, cannot be used with step_index Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } } Provider \u00b6 list \u00b6 List all current component providers and information about the components they provide flow provider list [ options ] Options Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e Example output: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Contains the name , version number , codepath , list of provided components register \u00b6 Register a component provider flow provider register [ options ] Options \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f Example flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json conf: { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } output: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Resource \u00b6 query \u00b6 For querying fate system resources flow resource query Options Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } return \u00b6 Resources for returning a job flow resource return [ options ] Options parameter name required type description job_id yes string job_id Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } Privilege \u00b6 grant \u00b6 Add privileges flow privilege grant -c fateflow/examples/permission/grant.json Options parameter name required type description party_id yes string site id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 Delete permissions flow privilege delete -c fateflow/examples/permission/delete.json Options parameter name required type description party_id yes string site_id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets, \"*\" is all datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } query \u00b6 Query permissions flow privilege query -p 10000 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string Return information data object return data Sample { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Tag \u00b6 create \u00b6 Creates a label. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 tag_parameter_introduction -d --tag-desc no tag_introduction Example flow tag create -t tag1 -d \"This is the parameter description of tag1.\" flow tag create -t tag2 update \u00b6 Update the tag information. Options number parameters short format long format required parameters parameter description 1 tag_name -t --tag-name yes tag_name 2 new_tag_name --new-tag-name no new-tag-name 3 new_tag_desc --new-tag-desc no new tag introduction Example flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the introduction of the new parameter.\" list \u00b6 Show the list of tags. options number parameters short-format long-format required-parameters parameter-introduction 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow tag list flow tag list -l 3 query \u00b6 Retrieve tags. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 with_model -with-model no If specified, information about models with this tag will be displayed Example flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model delete \u00b6 Delete the tag. Options number parameters short-format long-format required-parameters parameters introduction 1 tag_name -t ---tag-name yes tag_name Example flow tag delete -t tag1 Server \u00b6 versions \u00b6 List all relevant system version numbers flow server versions Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server versions Output: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } reload \u00b6 The following configuration items will take effect again after reload All configurations after # engine services in $FATE_PROJECT_BASE/conf/service_conf.yaml All configurations in $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml flow server reload Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server reload Output: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"FATE Flow Client"},{"location":"fate_flow_client/#fate-flow-client","text":"","title":"FATE Flow Client"},{"location":"fate_flow_client/#description","text":"Introduces how to install and use the FATE Flow Client , which is usually included in the FATE Client , which contains several clients of the FATE Project : Pipeline , FATE Flow Client and FATE Test . Introducing the command line provided by FATE Flow Client , all commands will have a common invocation entry, you can type flow in the command line to get all the command categories and their subcommands. [ IN ] flow [ OUT ] Usage: flow COMMAND [ OPTIONS ] Fate Flow Client Options. -h, --help Show this message and exit. Commands: -h, --help Component Component Operations data Data Operations init Flow CLI Init Command Job Job Operations model Model Operations queue Queue Operations table Table Operations task Task Operations For more information, please consult the following documentation or use the flow --help command. All commands are described","title":"Description"},{"location":"fate_flow_client/#install-fate-client","text":"","title":"Install FATE Client"},{"location":"fate_flow_client/#online-installation","text":"FATE Client will be distributed to pypi , you can install the corresponding version directly using tools such as pip , e.g. pip install fate-client or pip install atmosphere-client == ${ version }","title":"Online installation"},{"location":"fate_flow_client/#installing-on-a-fate-cluster","text":"Please install on a machine with version 1.5.1 and above of FATE. Installation command. cd $FATE_PROJECT_BASE / # Enter the virtual environment of FATE PYTHON source bin/init_env.sh # Execute the installation cd fate/python/fate_client && python setup.py install Once the installation is complete, type flow on the command line and enter, the installation will be considered successful if you get the following return. Usage: flow [ OPTIONS ] COMMAND [ ARGS ] ... Fate Flow Client Options: -h, --help Show this message and exit. Commands: component Component Operations data Data Operations init Flow CLI Init Command Job Job Operations model Model Operations queue Queue Operations Table Table Operations tag Tag Operations task Task Operations Task Operations ## Initialization Before using the fate-client, you need to initialize it. It is recommended to use the configuration file of fate-client to initialize it. ### Specify the fateflow service address ``` bash ### Specify the IP address and port of the fateflow service for initialization flow init --ip 192 .168.0.1 --port 9380","title":"Installing on a FATE cluster"},{"location":"fate_flow_client/#via-the-configuration-file-on-the-fate-cluster","text":"### Go to the FATE installation path, e.g. /data/projects/fate cd $FATE_PROJECT_BASE / flow init -c conf/service_conf.yaml The initialization is considered successful if you get the following return. { \"retcode\" : 0 , \"retmsg\" : \"Fate Flow CLI has been initialized successfully.\" }","title":"via the configuration file on the FATE cluster"},{"location":"fate_flow_client/#verify","text":"Mainly verify that the client can connect to the FATE Flow Server , e.g. try to query the current job status flow job query Usually the retcode in the return is 0 . { \"data\" : [], \"retcode\" : 0 , \"retmsg\" : \"no job could be found\" } If it returns something like the following, it means that the connection is not available, please check the network situation { \"retcode\" : 100 , \"retmsg\" : \"Connection refused. Please check if the fate flow service is started\" }","title":"Verify"},{"location":"fate_flow_client/#data","text":"","title":"Data"},{"location":"fate_flow_client/#upload","text":"Used to upload the input data for the modeling task to the storage system supported by fate flow data upload -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description file yes string data storage path id_delimiter yes string Data separator, e.g. \",\" head no int Whether the data has a table header partition yes int Number of data partitions storage_engine no string storage engine type, default \"EGGROLL\", also support \"HDFS\", \"LOCALFS\", \"HIVE\", etc. namespace yes string table namespace table_name yes string table name storage_address no object The storage address of the corresponding storage engine is required use_local_data no int The default is 1, which means use the data from the client's machine; 0 means use the data from the fate flow service's machine. drop no int Whether to overwrite uploads extend_sid no bool Whether to add a new column for uuid id, default False auto_increasing_sid no bool Whether the new id column is self-increasing (will only work if extend_sid is True), default False mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, passing in the meta parameter will generate anonymous information about the feature. Example eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"upload"},{"location":"fate_flow_client/#upload-history","text":"Used to query upload table history. flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID Options parameter name required type description -l --limit no int Number of records to return. (default: 10) -j --job_id no string Job ID","title":"upload-history"},{"location":"fate_flow_client/#download","text":"Brief description: Used to download data from within the fate storage engine to file format data flow data download -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description output_path yes string download_path table_name yes string fate table name namespace yes int fate table namespace Example: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"download"},{"location":"fate_flow_client/#writer","text":"Brief description: Used to download data from the fate storage engine to the external engine or to save data as a new table flow data writer -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description table_name yes string fate table name namespace yes int fate table namespace storage_engine no string Storage type, e.g., MYSQL address no object storage_address output_namespace no string Save as a table namespace for fate output_name no string Save as fate's table name **Note: storage_engine, address are combined parameters that provide storage to the specified engine. output_namespace, output_name are also combined parameters, providing the function to save as a new table of the same engine** Example: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } return parameter name type description jobId string job id retcode int return code retmsg string return information data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"writer"},{"location":"fate_flow_client/#table","text":"","title":"Table"},{"location":"fate_flow_client/#info","text":"Query information about the fate table (real storage address, number, schema, etc.) flow table info [ options ] options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns | parameter name | type | description | | :------ | :----- | -------- | | retcode | int | return code | | retmsg | string | return information | | data | object | return data | Sample { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exists\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"info"},{"location":"fate_flow_client/#delete","text":"You can delete table data with table delete flow table delete [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return message data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"fate_flow_client/#bind","text":"Real storage addresses can be mapped to fate storage tables via table bind flow table bind [ options ] options parameters short format long format required type description conf_path -c --conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter_name required type description name yes string fate table name namespace yes string fate table namespace engine yes string storage engine, supports \"HDFS\", \"MYSQL\", \"PATH\" yes object real storage address drop no int Overwrite previous information head no int Whether there is a data table header id_delimiter no string Data separator id_column no string id field feature_column no array feature_field mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, if the meta parameter is passed in during the table bind phase, no anonymous information about the feature is generated directly. The feature anonymization information of the original data will be updated after the data has passed through the reader component once Sample hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } return parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"bind"},{"location":"fate_flow_client/#disable","text":"Tables can be made unavailable by table disable flow table disable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable"},{"location":"fate_flow_client/#enable","text":"Tables can be made available with table enable flow table enable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"enable"},{"location":"fate_flow_client/#disable-delete","text":"Tables that are currently unavailable can be deleted with disable-delete flow table disable-delete return parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable-delete"},{"location":"fate_flow_client/#job","text":"","title":"Job"},{"location":"fate_flow_client/#submit","text":"Build a federated learning job with two configuration files: job dsl and job conf, and submit it to the scheduler for execution flow job submit [ options ] Options parameter name required type description -d, --dsl-path yes string path to job dsl -c, --conf-path yes string job conf's path Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data data.dsl_path string The path to the actual running dsl configuration generated by the system based on the submitted dsl content data.runtime_conf_on_party_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.dsl_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.board_url string fateboard view address data.model_info dict Model identification information Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"submit"},{"location":"fate_flow_client/#rerun","text":"Rerun a job flow job rerun [ options ] Options | parameter name | required | type | description | | :------------- | :------- | :--- | ----------- |------- | | -j, --job-id | yes | string | job id path | | --cpn, --component-name | no | string | Specifies which component to rerun from, unspecified components will not be executed if they have no upstream dependencies on the specified component; if not specified, the entire job will be rerun | | --force | no | bool | The job will be rerun even if it succeeds; if not specified, the job will be skipped if it succeeds | Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data Example flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force","title":"rerun"},{"location":"fate_flow_client/#parameter-update","text":"Update the job parameters flow job parameter-update [ options ] Options parameter-name required type description -j, --job-id yes string job id path -c, --conf-path yes string The contents of the job conf that needs to be updated, no need to fill in parameters that don't need to be updated Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict Returns the updated job conf Example Assuming that the job is updated with some of the execution parameters of the hetero_lr_0 component, the configuration file is as follows. { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } Execution of the following command takes effect. flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json Execute the following command to rerun. flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force","title":"parameter-update"},{"location":"fate_flow_client/#stop","text":"Cancels or terminates the specified job Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id yes Job ID Example flow job stop -j $JOB_ID","title":"stop"},{"location":"fate_flow_client/#query","text":"Retrieve task information. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID","title":"query"},{"location":"fate_flow_client/#view","text":"Retrieve the job data view. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job view -j $JOB_ID -s complete","title":"view"},{"location":"fate_flow_client/#config","text":"Download the configuration file for the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role yes role 3 party_id -p --party_id yes Party ID 4 output_path -o --output-path yes output directory Example flow job config -j $JOB_ID -r host -p 10000 --output-path . /examples/","title":"config"},{"location":"fate_flow_client/#log","text":"Download the log file of the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 output_path -o --output-path yes output directory Example flow job log -j JOB_ID --output-path . /examples/","title":"log"},{"location":"fate_flow_client/#list","text":"Show the list of jobs. Options number parameters short-format long-format required parameters parameter description 1 limit -l -limit no Returns the number limit (default: 10) Example flow job list flow job list -l 30","title":"list"},{"location":"fate_flow_client/#dsl","text":"Predictive DSL file generator. Options number parameters short-format long-format required parameters parameter description 1 cpn_list -cpn-list No List of user-specified component names 2 cpn_path -cpn-path No User-specified path to a file with a list of component names 3 train_dsl_path -train-dsl-path yes path to the training dsl file 4 output_path -o --output-path no output directory path Example flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow /examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/","title":"dsl"},{"location":"fate_flow_client/#task","text":"","title":"Task"},{"location":"fate_flow_client/#query_1","text":"Retrieve Task information Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 component_name -cpn --component_name no component_name 5 status -s --status No Task status Example flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete","title":"query"},{"location":"fate_flow_client/#list_1","text":"Show the list of Tasks. Options number parameters short format long format required parameters parameter description 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow task list flow task list -l 25","title":"list"},{"location":"fate_flow_client/#tracking","text":"","title":"Tracking"},{"location":"fate_flow_client/#metrics","text":"Get a list of all metrics names generated by a component task flow tracking metrics [ options ] Options parameter name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data Example flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metrics"},{"location":"fate_flow_client/#metric-all","text":"Get all the output metrics for a component task flow tracking metric-all [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output (limited space, only some of the metric data is shown and some values are omitted in the middle of the array type data): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metric-all"},{"location":"fate_flow_client/#parameters","text":"After the job is submitted, the system resolves the actual component task parameters based on the component_parameters in the job conf combined with the system default component parameters flow tracking parameters [ options ] Options parameter_name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"parameters"},{"location":"fate_flow_client/#output-data","text":"Get the component output flow tracking output-data [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl -o, --output-path yes string Path to output data Returns parameter name type description retcode int Return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o . / Output : { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory \" }","title":"output-data"},{"location":"fate_flow_client/#output-data-table","text":"Get the output data table name of the component flow tracking output-data-table [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 output: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-data-table"},{"location":"fate_flow_client/#output-model","text":"Get the output model of a component task flow tracking output-model [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-model"},{"location":"fate_flow_client/#get-summary","text":"Each component allows to set some summary information for easy observation and analysis flow tracking get-summary [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"get-summary"},{"location":"fate_flow_client/#tracking-source","text":"For querying the parent and source tables of a table flow table tracking-source [ options ] Options parameter-name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero _lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-source"},{"location":"fate_flow_client/#tracking-job","text":"For querying the usage of a particular table flow table tracking-job [ options ] Options parameter name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"count\" : 2 , \"jobs\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-job"},{"location":"fate_flow_client/#model","text":"","title":"Model"},{"location":"fate_flow_client/#load","text":"Load a model generated by deploy to Fate-Serving. flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path Yes Config file path job_id -j --job-id Yes Job ID Example { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"load"},{"location":"fate_flow_client/#bind_1","text":"Bind a model generated by deploy to Fate-Serving. flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path job_id -j --job-id Yes Job ID Example { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" }","title":"bind"},{"location":"fate_flow_client/#import","text":"Import the model from a file or storage engine. flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path from_database --from-database Yes Import the model from storage engine Example { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"import"},{"location":"fate_flow_client/#export","text":"Export the model to a file or storage engine. flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path to_database --to-database Yes Export the model to storage engine Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"export"},{"location":"fate_flow_client/#migrate","text":"Migrate the model. flow model migrate -c examples/model/migrate_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path Example { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"migrate"},{"location":"fate_flow_client/#tag-list","text":"List tags of the model. flow model tag-list -j <job_id> Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID","title":"tag-list"},{"location":"fate_flow_client/#tag-model","text":"Add or remove a tag from the model. flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag_name -t --tag-name No Tag name remove --remove Yes Remove the tag","title":"tag-model"},{"location":"fate_flow_client/#deploy","text":"Configure predict DSL. flow model deploy --model-id <model_id> --model-version <model_version> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version cpn_list --cpn-list Yes Components list cpn_path --cpn-path Yes Load components list from a file dsl_path --dsl-path Yes Predict DSL file path cpn_step_index --cpn-step-index Yes Specify a checkpoint model to replace the pipeline model Use : to separate component name and step index E.g. --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name Yes Specify a checkpoint model to replace the pipeline model. Use : to separate component name and step name E.g. --cpn-step-name cpn_b:foobar Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } }","title":"deploy"},{"location":"fate_flow_client/#get-predict-dsl","text":"Get predict DSL of the model. flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path","title":"get-predict-dsl"},{"location":"fate_flow_client/#get-predict-conf","text":"Get the template of predict config. flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path","title":"get-predict-conf"},{"location":"fate_flow_client/#get-model-info","text":"Get model information. flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role Yes Party role party_id -p --party-id Yes Party ID detail --detail Yes Display detailed information","title":"get-model-info"},{"location":"fate_flow_client/#homo-convert","text":"Convert trained homogenous model to the format of another ML framework. flow model homo-convert -c examples/model/homo_convert_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path","title":"homo-convert"},{"location":"fate_flow_client/#homo-deploy","text":"Deploy trained homogenous model to a target online serving system. Currently the supported target serving system is KFServing. flow model homo-deploy -c examples/model/homo_deploy_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path","title":"homo-deploy"},{"location":"fate_flow_client/#checkpoint","text":"","title":"Checkpoint"},{"location":"fate_flow_client/#list_2","text":"List checkpoints. flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] }","title":"list"},{"location":"fate_flow_client/#get","text":"Get checkpoint information. flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> Example Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name step_index --step-index Yes Step index, cannot be used with step_name step_name --step-name Yes Step name, cannot be used with step_index Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"get"},{"location":"fate_flow_client/#provider","text":"","title":"Provider"},{"location":"fate_flow_client/#list_3","text":"List all current component providers and information about the components they provide flow provider list [ options ] Options Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e Example output: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Contains the name , version number , codepath , list of provided components","title":"list"},{"location":"fate_flow_client/#register","text":"Register a component provider flow provider register [ options ] Options \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f Example flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json conf: { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } output: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"register"},{"location":"fate_flow_client/#resource","text":"","title":"Resource"},{"location":"fate_flow_client/#query_2","text":"For querying fate system resources flow resource query Options Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"fate_flow_client/#return","text":"Resources for returning a job flow resource return [ options ] Options parameter name required type description job_id yes string job_id Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"return"},{"location":"fate_flow_client/#privilege","text":"","title":"Privilege"},{"location":"fate_flow_client/#grant","text":"Add privileges flow privilege grant -c fateflow/examples/permission/grant.json Options parameter name required type description party_id yes string site id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"grant"},{"location":"fate_flow_client/#delete_1","text":"Delete permissions flow privilege delete -c fateflow/examples/permission/delete.json Options parameter name required type description party_id yes string site_id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets, \"*\" is all datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"fate_flow_client/#query_3","text":"Query permissions flow privilege query -p 10000 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string Return information data object return data Sample { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"fate_flow_client/#tag","text":"","title":"Tag"},{"location":"fate_flow_client/#create","text":"Creates a label. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 tag_parameter_introduction -d --tag-desc no tag_introduction Example flow tag create -t tag1 -d \"This is the parameter description of tag1.\" flow tag create -t tag2","title":"create"},{"location":"fate_flow_client/#update","text":"Update the tag information. Options number parameters short format long format required parameters parameter description 1 tag_name -t --tag-name yes tag_name 2 new_tag_name --new-tag-name no new-tag-name 3 new_tag_desc --new-tag-desc no new tag introduction Example flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the introduction of the new parameter.\"","title":"update"},{"location":"fate_flow_client/#list_4","text":"Show the list of tags. options number parameters short-format long-format required-parameters parameter-introduction 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow tag list flow tag list -l 3","title":"list"},{"location":"fate_flow_client/#query_4","text":"Retrieve tags. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 with_model -with-model no If specified, information about models with this tag will be displayed Example flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model","title":"query"},{"location":"fate_flow_client/#delete_2","text":"Delete the tag. Options number parameters short-format long-format required-parameters parameters introduction 1 tag_name -t ---tag-name yes tag_name Example flow tag delete -t tag1","title":"delete"},{"location":"fate_flow_client/#server","text":"","title":"Server"},{"location":"fate_flow_client/#versions","text":"List all relevant system version numbers flow server versions Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server versions Output: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"versions"},{"location":"fate_flow_client/#reload","text":"The following configuration items will take effect again after reload All configurations after # engine services in $FATE_PROJECT_BASE/conf/service_conf.yaml All configurations in $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml flow server reload Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server reload Output: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"reload"},{"location":"fate_flow_component_registry/","text":"Task Component Registry \u00b6 1. Description \u00b6 After FATE Flow version 1.7, it started to support multiple versions of component packages at the same time, for example, you can put both fate algorithm component packages of 1.7.0 and 1.7.1 versions We refer to the provider of the algorithm component package as the component provider , and the name and version uniquely identify the component provider . When submitting a job, you can specify which component package to use for this job via job dsl , please refer to componentprovider 2. Default Component Provider \u00b6 Deploying a FATE cluster will include a default component provider, which is usually found in the ${FATE_PROJECT_BASE}/python/federatedml directory 3. current component provider \u00b6 List all current component providers and information about the components they provide flow provider list [ options ] Options Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e Example output: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Contains the name , version number , codepath , list of provided components 4. new component provider \u00b6 Register a component provider flow provider register [ options ] Options \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f Example flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json conf: { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } output: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Task Component Registry"},{"location":"fate_flow_component_registry/#task-component-registry","text":"","title":"Task Component Registry"},{"location":"fate_flow_component_registry/#1-description","text":"After FATE Flow version 1.7, it started to support multiple versions of component packages at the same time, for example, you can put both fate algorithm component packages of 1.7.0 and 1.7.1 versions We refer to the provider of the algorithm component package as the component provider , and the name and version uniquely identify the component provider . When submitting a job, you can specify which component package to use for this job via job dsl , please refer to componentprovider","title":"1. Description"},{"location":"fate_flow_component_registry/#2-default-component-provider","text":"Deploying a FATE cluster will include a default component provider, which is usually found in the ${FATE_PROJECT_BASE}/python/federatedml directory","title":"2. Default Component Provider"},{"location":"fate_flow_component_registry/#3-current-component-provider","text":"List all current component providers and information about the components they provide flow provider list [ options ] Options Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e Example output: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Contains the name , version number , codepath , list of provided components","title":"3. current component provider"},{"location":"fate_flow_component_registry/#4-new-component-provider","text":"Register a component provider flow provider register [ options ] Options \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f Example flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json conf: { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } output: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"4. new component provider"},{"location":"fate_flow_data_access/","text":"Data Access \u00b6 1. Description \u00b6 The storage tables of fate are identified by table name and namespace. fate provides an upload component for users to upload data to a storage system supported by the fate compute engine. If the user's data already exists in a storage system supported by fate, the storage information can be mapped to a fate storage table by table bind. If the table bind's table storage type is not consistent with the current default engine, the reader component will automatically convert the storage type; 2. data upload \u00b6 Used to upload the input data for the modeling task to the storage system supported by fate flow data upload -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description file yes string data storage path id_delimiter yes string Data separator, e.g. \",\" head no int Whether the data has a table header partition yes int Number of data partitions storage_engine no string storage engine type, default \"EGGROLL\", also support \"HDFS\", \"LOCALFS\", \"HIVE\", etc. namespace yes string table namespace table_name yes string table name storage_address no object The storage address of the corresponding storage engine is required use_local_data no int The default is 1, which means use the data from the client's machine; 0 means use the data from the fate flow service's machine. drop no int Whether to overwrite uploads extend_sid no bool Whether to add a new column for uuid id, default False auto_increasing_sid no bool Whether the new id column is self-increasing (will only work if extend_sid is True), default False mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, passing in the meta parameter will generate anonymous information about the feature. Example eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. table binding \u00b6 Real storage addresses can be mapped to fate storage tables via table bind flow table bind [ options ] options parameters short format long format required type description conf_path -c --conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter_name required type description name yes string fate table name namespace yes string fate table namespace engine yes string storage engine, supports \"HDFS\", \"MYSQL\", \"PATH\" yes object real storage address drop no int Overwrite previous information head no int Whether there is a data table header id_delimiter no string Data separator id_column no string id field feature_column no array feature_field mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, if the meta parameter is passed in during the table bind phase, no anonymous information about the feature is generated directly. The feature anonymization information of the original data will be updated after the data has passed through the reader component once Sample hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } return parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 4. table information query \u00b6 Query information about the fate table (real storage address, number, schema, etc.) flow table info [ options ] options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns | parameter name | type | description | | :------ | :----- | -------- | | retcode | int | return code | | retmsg | string | return information | | data | object | return data | Sample { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exists\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 5. Delete table data \u00b6 You can delete table data with table delete flow table delete [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return message data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 6. Download data \u00b6 Brief description: Used to download data from within the fate storage engine to file format data flow data download -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description output_path yes string download_path table_name yes string fate table name namespace yes int fate table namespace Example: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 7. disable data \u00b6 Tables can be made unavailable by table disable flow table disable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 8. enable data \u00b6 Tables can be made available with table enable flow table enable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } 9. delete disable data \u00b6 Tables that are currently unavailable can be deleted with disable-delete flow table disable-delete return parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } 10. Writer \u00b6 Brief description: Used to download data from the fate storage engine to the external engine or to save data as a new table flow data writer -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description table_name yes string fate table name namespace yes int fate table namespace storage_engine no string Storage type, e.g., MYSQL address no object storage_address output_namespace no string Save as a table namespace for fate output_name no string Save as fate's table name **Note: storage_engine, address are combined parameters that provide storage to the specified engine. output_namespace, output_name are also combined parameters, providing the function to save as a new table of the same engine** Example: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } return parameter name type description jobId string job id retcode int return code retmsg string return information data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 11. reader component \u00b6 Brief description: The reader component is a data input component of fate; The reader component converts input data into data of the specified storage type; Parameter configuration : The input table of the reader is configured in the conf when submitting the job: { \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } } } } } } Component Output The output data storage engine of the component is determined by the configuration file conf/service_conf.yaml, with the following configuration items: default_engines : storage : eggroll The computing engine and storage engine have certain support dependencies on each other, the list of dependencies is as follows. computing_engine storage_engine standalone standalone eggroll eggroll spark hdfs(distributed), localfs(standalone) The reader component's input data storage type supports: eggroll, hdfs, localfs, mysql, path, etc; reader component output data type is determined by default_engines.storage configuration (except for path) 12. api-reader \u00b6 Brief description: The data input of api-reader component is id, and the data output is feature; request parameters can be user-defined, e.g. version number, back month, etc.. The component will request third-party services, and the third-party services need to implement upload, query, download interfaces and register with the fate flow, which can be referred to api-reader related service registration Parameter configuration : Configure the api-reader parameter in the conf when submitting the job: { \"role\" : { \"guest\" : { \"0\" : { \"api_reader_0\" : { \"server_name\" : \"xxx\" , \"parameters\" : { \"version\" : \"xxx\" }, \"id_delimiter\" : \",\" , \"head\" : true } } } } } Parameter meaning: - server_name: the name of the service to be requested - parameters: the parameters of the requested feature - id_delimiter: the data separator to be returned - head: whether the returned data contains a header or not","title":"Data Access"},{"location":"fate_flow_data_access/#data-access","text":"","title":"Data Access"},{"location":"fate_flow_data_access/#1-description","text":"The storage tables of fate are identified by table name and namespace. fate provides an upload component for users to upload data to a storage system supported by the fate compute engine. If the user's data already exists in a storage system supported by fate, the storage information can be mapped to a fate storage table by table bind. If the table bind's table storage type is not consistent with the current default engine, the reader component will automatically convert the storage type;","title":"1. Description"},{"location":"fate_flow_data_access/#2-data-upload","text":"Used to upload the input data for the modeling task to the storage system supported by fate flow data upload -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description file yes string data storage path id_delimiter yes string Data separator, e.g. \",\" head no int Whether the data has a table header partition yes int Number of data partitions storage_engine no string storage engine type, default \"EGGROLL\", also support \"HDFS\", \"LOCALFS\", \"HIVE\", etc. namespace yes string table namespace table_name yes string table name storage_address no object The storage address of the corresponding storage engine is required use_local_data no int The default is 1, which means use the data from the client's machine; 0 means use the data from the fate flow service's machine. drop no int Whether to overwrite uploads extend_sid no bool Whether to add a new column for uuid id, default False auto_increasing_sid no bool Whether the new id column is self-increasing (will only work if extend_sid is True), default False mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, passing in the meta parameter will generate anonymous information about the feature. Example eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2. data upload"},{"location":"fate_flow_data_access/#3-table-binding","text":"Real storage addresses can be mapped to fate storage tables via table bind flow table bind [ options ] options parameters short format long format required type description conf_path -c --conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter_name required type description name yes string fate table name namespace yes string fate table namespace engine yes string storage engine, supports \"HDFS\", \"MYSQL\", \"PATH\" yes object real storage address drop no int Overwrite previous information head no int Whether there is a data table header id_delimiter no string Data separator id_column no string id field feature_column no array feature_field mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, if the meta parameter is passed in during the table bind phase, no anonymous information about the feature is generated directly. The feature anonymization information of the original data will be updated after the data has passed through the reader component once Sample hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } return parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3. table binding"},{"location":"fate_flow_data_access/#4-table-information-query","text":"Query information about the fate table (real storage address, number, schema, etc.) flow table info [ options ] options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns | parameter name | type | description | | :------ | :----- | -------- | | retcode | int | return code | | retmsg | string | return information | | data | object | return data | Sample { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exists\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"4. table information query"},{"location":"fate_flow_data_access/#5-delete-table-data","text":"You can delete table data with table delete flow table delete [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return message data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"5. Delete table data"},{"location":"fate_flow_data_access/#6-download-data","text":"Brief description: Used to download data from within the fate storage engine to file format data flow data download -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description output_path yes string download_path table_name yes string fate table name namespace yes int fate table namespace Example: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"6. Download data"},{"location":"fate_flow_data_access/#7-disable-data","text":"Tables can be made unavailable by table disable flow table disable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"7.  disable data"},{"location":"fate_flow_data_access/#8-enable-data","text":"Tables can be made available with table enable flow table enable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"8.  enable data"},{"location":"fate_flow_data_access/#9-delete-disable-data","text":"Tables that are currently unavailable can be deleted with disable-delete flow table disable-delete return parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"9.  delete disable data"},{"location":"fate_flow_data_access/#10-writer","text":"Brief description: Used to download data from the fate storage engine to the external engine or to save data as a new table flow data writer -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description table_name yes string fate table name namespace yes int fate table namespace storage_engine no string Storage type, e.g., MYSQL address no object storage_address output_namespace no string Save as a table namespace for fate output_name no string Save as fate's table name **Note: storage_engine, address are combined parameters that provide storage to the specified engine. output_namespace, output_name are also combined parameters, providing the function to save as a new table of the same engine** Example: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } return parameter name type description jobId string job id retcode int return code retmsg string return information data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"10. Writer"},{"location":"fate_flow_data_access/#11-reader-component","text":"Brief description: The reader component is a data input component of fate; The reader component converts input data into data of the specified storage type; Parameter configuration : The input table of the reader is configured in the conf when submitting the job: { \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } } } } } } Component Output The output data storage engine of the component is determined by the configuration file conf/service_conf.yaml, with the following configuration items: default_engines : storage : eggroll The computing engine and storage engine have certain support dependencies on each other, the list of dependencies is as follows. computing_engine storage_engine standalone standalone eggroll eggroll spark hdfs(distributed), localfs(standalone) The reader component's input data storage type supports: eggroll, hdfs, localfs, mysql, path, etc; reader component output data type is determined by default_engines.storage configuration (except for path)","title":"11. reader component"},{"location":"fate_flow_data_access/#12-api-reader","text":"Brief description: The data input of api-reader component is id, and the data output is feature; request parameters can be user-defined, e.g. version number, back month, etc.. The component will request third-party services, and the third-party services need to implement upload, query, download interfaces and register with the fate flow, which can be referred to api-reader related service registration Parameter configuration : Configure the api-reader parameter in the conf when submitting the job: { \"role\" : { \"guest\" : { \"0\" : { \"api_reader_0\" : { \"server_name\" : \"xxx\" , \"parameters\" : { \"version\" : \"xxx\" }, \"id_delimiter\" : \",\" , \"head\" : true } } } } } Parameter meaning: - server_name: the name of the service to be requested - parameters: the parameters of the requested feature - id_delimiter: the data separator to be returned - head: whether the returned data contains a header or not","title":"12. api-reader"},{"location":"fate_flow_http_api/","text":"REST API \u00b6 1. Description \u00b6 2. Error codes \u00b6 400 Bad Request request body has both json and form 401 Unauthorized Missing one or more header(s) 400 Invalid TIMESTAMP TIMESTAMP could not be parsed 425 TIMESTAMP is more than 60 seconds away from the server time The TIMESTAMP in the header is more than 60 seconds away from the server time 401 Unknown APP_KEY header in APP_KEY does not match http_app_key in the Flow configuration file 403 Forbidden Signature verification failed","title":"REST API"},{"location":"fate_flow_http_api/#rest-api","text":"","title":"REST API"},{"location":"fate_flow_http_api/#1-description","text":"","title":"1. Description"},{"location":"fate_flow_http_api/#2-error-codes","text":"400 Bad Request request body has both json and form 401 Unauthorized Missing one or more header(s) 400 Invalid TIMESTAMP TIMESTAMP could not be parsed 425 TIMESTAMP is more than 60 seconds away from the server time The TIMESTAMP in the header is more than 60 seconds away from the server time 401 Unknown APP_KEY header in APP_KEY does not match http_app_key in the Flow configuration file 403 Forbidden Signature verification failed","title":"2. Error codes"},{"location":"fate_flow_http_api_call_demo/","text":"REST API CLIENT \u00b6 1. Description \u00b6 Use python request fate flow api \u00b6 2. data upload/download \u00b6 import json import os import requests from anaconda_project.internal.test.multipart import MultipartEncoder base_url = \"http://127.0.0.1:9380/v1\" def upload (): uri = \"/data/upload\" file_name = \"./data/breast_hetero_guest.csv\" with open ( file_name , 'rb' ) as fp : data = MultipartEncoder ( fields = { 'file' : ( os . path . basename ( file_name ), fp , 'application/octet-stream' )} ) config_data = { \"file\" : file_name , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , data = data , params = json . dumps ( config_data ), headers = { 'Content-Type' : data . content_type } ) print ( response . text ) def download (): uri = \"/data/download\" config_data = { \"output_path\" : \"./download_breast_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text ) def upload_history (): uri = \"/data/upload/history\" config_data = { \"limit\" : 5 } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text ) 3. table \u00b6 import requests base_url = \"http://127.0.0.1:9380/v1\" def table_bind (): uri = \"/table/bind\" data = { \"head\" : 1 , \"partition\" : 8 , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"xxx\" , \"name\" : \"xxx\" }, \"id_name\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12\" , \"engine\" : \"MYSQL\" , \"id_delimiter\" : \",\" , \"namespace\" : \"wzh\" , \"name\" : \"wzh\" , } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_delete (): uri = \"/table/delete\" data = { \"table_name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_info (): uri = \"/table/table_info\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_list (): uri = \"/table/list\" data = { \"job_id\" : \"202204221515021092240\" , \"role\" : \"guest\" , \"party_id\" : \"20001\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_source (): uri = \"/table/tracking/source\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_job (): uri = \"/table/tracking/job\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) 4. job \u00b6 import tarfile import requests base_url = \"http:/127.0.0.1:9380/v1\" def submit (): uri = \"/job/submit\" data = { \"dsl\" : { \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"table\" ] } }, \"dataio_0\" : { \"module\" : \"DataIO\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.table\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"dataio\" ] }, \"need_deploy\" : True }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"dataio_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ] } }, \"hetero_feature_binning_0\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"intersection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_feature_binning\" ] } }, \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.hetero_feature_binning\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"selected\" ] } }, \"hetero_lr_0\" : { \"module\" : \"HeteroLR\" , \"input\" : { \"data\" : { \"train_data\" : [ \"hetero_feature_selection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_lr\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_lr_0.train\" ] } }, \"output\" : { \"data\" : [ \"evaluate\" ] } } } }, \"runtime_conf\" : { \"dsl_version\" : \"2\" , \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 20001 }, \"role\" : { \"guest\" : [ 20001 ], \"host\" : [ 10001 ], \"arbiter\" : [ 10001 ] }, \"job_parameters\" : { \"common\" : { \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"task_cores\" : 4 , \"auto_retries\" : 1 } }, \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : True , \"only_output_key\" : False }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : True , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : False , \"output_format\" : \"dense\" }, \"evaluation_0\" : { \"need_run\" : False } } } } } } } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def stop (): uri = \"/job/stop\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def rerun (): uri = \"/job/rerun\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def query (): uri = \"/job/query\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_job (): uri = \"/job/list/job\" data = { \"limit\" : 1 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def update (): uri = \"/job/update\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"notes\" : \"this is a test\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def parameter_update (): uri = \"/job/parameter/update\" data = { \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"max_iter\" : 10 }}}, \"job_parameters\" : { \"common\" : { \"auto_retries\" : 2 }}, \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def config (): uri = \"/job/config\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def log_download (): uri = \"/job/log/download\" data = { \"job_id\" : \"202204251958539401540a\" } download_tar_file_name = \"./test.tar.gz\" res = requests . post ( base_url + uri , json = data ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def log_path (): uri = \"/job/log/path\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def task_query (): uri = \"/job/task/query\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_task (): uri = \"/job/list/task\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def job_clean (): uri = \"/job/clean\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def clean_queue (): uri = \"/job/clean/queue\" res = requests . post ( base_url + uri ) print ( res . text ) 5. tracking \u00b6 import tarfile import requests base_url = \"http://127.0.0.1:9380/v1\" def job_data_view (): uri = \"/tracking/job/data_view\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_all (): uri = \"/tracking/component/metric/all\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"HeteroSecureBoost_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # {\"data\":{\"train\":{\"loss\":{\"data\":[[0,0.6076415445876732],[1,0.5374539452565573],[2,0.4778598986135903],[3,0.42733599866560723],[4,0.38433409799127843]],\"meta\":{\"Best\":0.38433409799127843,\"curve_name\":\"loss\",\"metric_type\":\"LOSS\",\"name\":\"train\",\"unit_name\":\"iters\"}}}},\"retcode\":0,\"retmsg\":\"success\"} def component_metric (): uri = \"/tracking/component/metrics\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_data (): uri = \"/tracking/component/metric_data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" , \"metric_name\" : \"intersection\" , \"metric_namespace\" : \"train\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_parameters (): uri = \"/tracking/component/parameters\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_model (): uri = \"/tracking/component/output/model\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data (): uri = \"/tracking/component/output/data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data_download (): uri = \"/tracking/component/output/data/download\" download_tar_file_name = \"data.tar.gz\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . get ( base_url + uri , json = data ) print ( res . text ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def component_output_data_table (): uri = \"/tracking/component/output/data/table\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0a\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_component_summary_download (): uri = \"/tracking/component/summary/download\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_list (): uri = \"/tracking/component/list\" data = { \"job_id\" : \"202203311009181495690\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) component_list () 6. resource \u00b6 import requests base_url = \"http://127.0.0.1:9380/v1\" def resource_query (): uri = \"/resource/query\" data = { \"engine_name\" : \"EGGROLL\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def resource_return (): uri = \"/resource/return\" data = { \"job_id\" : \"202204261616175720130\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) resource_return () 7. permission \u00b6 import requests base_url = \"http://127.0.0.1:9380/v1\" def grant_privilege (): uri = \"/permission/grant/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"all\" , \"privilege_component\" : \"all\" , \"privilege_command\" : \"all\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # grant_privilege() def delete_privilege (): uri = \"/permission/delete/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"guest\" , \"privilege_component\" : \"dataio\" , \"privilege_command\" : \"create\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # delete_privilege() def query_privilege (): uri = \"/permission/query/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) query_privilege ()","title":"REST API CLIENT"},{"location":"fate_flow_http_api_call_demo/#rest-api-client","text":"","title":"REST API CLIENT"},{"location":"fate_flow_http_api_call_demo/#1-description","text":"","title":"1. Description"},{"location":"fate_flow_http_api_call_demo/#use-python-request-fate-flow-api","text":"","title":"Use python request fate flow api"},{"location":"fate_flow_http_api_call_demo/#2-data-uploaddownload","text":"import json import os import requests from anaconda_project.internal.test.multipart import MultipartEncoder base_url = \"http://127.0.0.1:9380/v1\" def upload (): uri = \"/data/upload\" file_name = \"./data/breast_hetero_guest.csv\" with open ( file_name , 'rb' ) as fp : data = MultipartEncoder ( fields = { 'file' : ( os . path . basename ( file_name ), fp , 'application/octet-stream' )} ) config_data = { \"file\" : file_name , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , data = data , params = json . dumps ( config_data ), headers = { 'Content-Type' : data . content_type } ) print ( response . text ) def download (): uri = \"/data/download\" config_data = { \"output_path\" : \"./download_breast_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text ) def upload_history (): uri = \"/data/upload/history\" config_data = { \"limit\" : 5 } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text )","title":"2. data upload/download"},{"location":"fate_flow_http_api_call_demo/#3-table","text":"import requests base_url = \"http://127.0.0.1:9380/v1\" def table_bind (): uri = \"/table/bind\" data = { \"head\" : 1 , \"partition\" : 8 , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"xxx\" , \"name\" : \"xxx\" }, \"id_name\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12\" , \"engine\" : \"MYSQL\" , \"id_delimiter\" : \",\" , \"namespace\" : \"wzh\" , \"name\" : \"wzh\" , } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_delete (): uri = \"/table/delete\" data = { \"table_name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_info (): uri = \"/table/table_info\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_list (): uri = \"/table/list\" data = { \"job_id\" : \"202204221515021092240\" , \"role\" : \"guest\" , \"party_id\" : \"20001\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_source (): uri = \"/table/tracking/source\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_job (): uri = \"/table/tracking/job\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text )","title":"3. table"},{"location":"fate_flow_http_api_call_demo/#4-job","text":"import tarfile import requests base_url = \"http:/127.0.0.1:9380/v1\" def submit (): uri = \"/job/submit\" data = { \"dsl\" : { \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"table\" ] } }, \"dataio_0\" : { \"module\" : \"DataIO\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.table\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"dataio\" ] }, \"need_deploy\" : True }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"dataio_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ] } }, \"hetero_feature_binning_0\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"intersection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_feature_binning\" ] } }, \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.hetero_feature_binning\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"selected\" ] } }, \"hetero_lr_0\" : { \"module\" : \"HeteroLR\" , \"input\" : { \"data\" : { \"train_data\" : [ \"hetero_feature_selection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_lr\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_lr_0.train\" ] } }, \"output\" : { \"data\" : [ \"evaluate\" ] } } } }, \"runtime_conf\" : { \"dsl_version\" : \"2\" , \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 20001 }, \"role\" : { \"guest\" : [ 20001 ], \"host\" : [ 10001 ], \"arbiter\" : [ 10001 ] }, \"job_parameters\" : { \"common\" : { \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"task_cores\" : 4 , \"auto_retries\" : 1 } }, \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : True , \"only_output_key\" : False }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : True , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : False , \"output_format\" : \"dense\" }, \"evaluation_0\" : { \"need_run\" : False } } } } } } } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def stop (): uri = \"/job/stop\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def rerun (): uri = \"/job/rerun\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def query (): uri = \"/job/query\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_job (): uri = \"/job/list/job\" data = { \"limit\" : 1 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def update (): uri = \"/job/update\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"notes\" : \"this is a test\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def parameter_update (): uri = \"/job/parameter/update\" data = { \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"max_iter\" : 10 }}}, \"job_parameters\" : { \"common\" : { \"auto_retries\" : 2 }}, \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def config (): uri = \"/job/config\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def log_download (): uri = \"/job/log/download\" data = { \"job_id\" : \"202204251958539401540a\" } download_tar_file_name = \"./test.tar.gz\" res = requests . post ( base_url + uri , json = data ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def log_path (): uri = \"/job/log/path\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def task_query (): uri = \"/job/task/query\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_task (): uri = \"/job/list/task\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def job_clean (): uri = \"/job/clean\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def clean_queue (): uri = \"/job/clean/queue\" res = requests . post ( base_url + uri ) print ( res . text )","title":"4. job"},{"location":"fate_flow_http_api_call_demo/#5-tracking","text":"import tarfile import requests base_url = \"http://127.0.0.1:9380/v1\" def job_data_view (): uri = \"/tracking/job/data_view\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_all (): uri = \"/tracking/component/metric/all\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"HeteroSecureBoost_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # {\"data\":{\"train\":{\"loss\":{\"data\":[[0,0.6076415445876732],[1,0.5374539452565573],[2,0.4778598986135903],[3,0.42733599866560723],[4,0.38433409799127843]],\"meta\":{\"Best\":0.38433409799127843,\"curve_name\":\"loss\",\"metric_type\":\"LOSS\",\"name\":\"train\",\"unit_name\":\"iters\"}}}},\"retcode\":0,\"retmsg\":\"success\"} def component_metric (): uri = \"/tracking/component/metrics\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_data (): uri = \"/tracking/component/metric_data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" , \"metric_name\" : \"intersection\" , \"metric_namespace\" : \"train\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_parameters (): uri = \"/tracking/component/parameters\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_model (): uri = \"/tracking/component/output/model\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data (): uri = \"/tracking/component/output/data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data_download (): uri = \"/tracking/component/output/data/download\" download_tar_file_name = \"data.tar.gz\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . get ( base_url + uri , json = data ) print ( res . text ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def component_output_data_table (): uri = \"/tracking/component/output/data/table\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0a\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_component_summary_download (): uri = \"/tracking/component/summary/download\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_list (): uri = \"/tracking/component/list\" data = { \"job_id\" : \"202203311009181495690\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) component_list ()","title":"5. tracking"},{"location":"fate_flow_http_api_call_demo/#6-resource","text":"import requests base_url = \"http://127.0.0.1:9380/v1\" def resource_query (): uri = \"/resource/query\" data = { \"engine_name\" : \"EGGROLL\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def resource_return (): uri = \"/resource/return\" data = { \"job_id\" : \"202204261616175720130\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) resource_return ()","title":"6. resource"},{"location":"fate_flow_http_api_call_demo/#7-permission","text":"import requests base_url = \"http://127.0.0.1:9380/v1\" def grant_privilege (): uri = \"/permission/grant/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"all\" , \"privilege_component\" : \"all\" , \"privilege_command\" : \"all\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # grant_privilege() def delete_privilege (): uri = \"/permission/delete/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"guest\" , \"privilege_component\" : \"dataio\" , \"privilege_command\" : \"create\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # delete_privilege() def query_privilege (): uri = \"/permission/query/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) query_privilege ()","title":"7. permission"},{"location":"fate_flow_job_scheduling/","text":"Multi-Party Job&Task Scheduling \u00b6 1. Description \u00b6 Mainly describes how to submit a federated learning job using FATE Flow and observe the use of 2. Job submission \u00b6 Build a federated learning job and submit it to the scheduling system for execution Two configuration files are required: job dsl and job conf job dsl configures the running components: list, input-output relationships job conf configures the component execution parameters, system operation parameters Build a federated learning job with two configuration files: job dsl and job conf, and submit it to the scheduler for execution flow job submit [ options ] Options parameter name required type description -d, --dsl-path yes string path to job dsl -c, --conf-path yes string job conf's path Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data data.dsl_path string The path to the actual running dsl configuration generated by the system based on the submitted dsl content data.runtime_conf_on_party_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.dsl_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.board_url string fateboard view address data.model_info dict Model identification information Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. Job DSL configuration description \u00b6 The configuration file of DSL is in json format, in fact, the whole configuration file is a json object (dict). 3.1 Component List \u00b6 Description The first level of this dict is components , which indicates the modules that will be used by this job. Example { \"components\" : { ... } } Each individual module is defined under \"components\", e.g. \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.train_data\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"model\" ] } } All data needs to be fetched from the data store via the Reader module, note that this module only has the output output \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"train\" ] } } 3.2 Modules \u00b6 Description Used to specify the components to be used, all optional module names refer to. Example \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , ... } 3.3 Inputs \u00b6 Implications Upstream inputs, divided into two input types, data and model. data input \u00b6 Description Upstream data input, divided into three input types. > 1. data: generally used in the data-transform module, feature_engineering module or > evaluation module. > 2. train_data: Generally used in homo_lr, hetero_lr and secure_boost > modules. If the train_data field is present, then the task will be recognized as a fit task > validate_data: If the train_data > field is present, then the field is optional. If you choose to keep this field, the data pointed to will be used as the > validation set > 4. test_data: Used as prediction data, if provided, along with model input. model_input \u00b6 Description Upstream model input, divided into two input types. 1. model: Used for model input of the same type of component. For example, hetero_binning_0 will fit the model, and then hetero_binning_1 will use the output of hetero_binning_0 for predict or transform. code example. \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_1.validate_data\" ] }, \"model\" : [ \"hetero_feature_binning_0.fit_model\" ] }, \"output\" : { \"data\" : [ \"validate_data\" ], \"model\" : [ \"eval_model\" ] } } 2. isometric_model: Used to specify the model input of the inherited upstream component. For example, the upstream component of feature selection is feature binning, it will use the information of feature binning as the feature Code example. \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.output_model\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"output_model\" ] } } 3.4 Output \u00b6 Description Output, like input, is divided into data and model output data output \u00b6 Description Data output, divided into four output types. data: General module data output train_data: only for Data Split validate_data: Only for Data Split test_data: Data Split only Model Output \u00b6 Description Model output, using model only 3.5 Component Providers \u00b6 Since FATE-Flow version 1.7.0, the same FATE-Flow system supports loading multiple component providers, i.e. providers, which provide several components, and the source provider of the component can be configured when submitting a job Since FATE-Flow version 1.9.0, the parameters of the provider need to be configured in job conf, as follows Description Specify the provider, support global specification and individual component specification; if not specified, the default provider: fate@$FATE_VERSION Format provider_name@$provider_version Advanced You can register a new provider through the component registration CLI, currently supported providers: fate and fate_sql, please refer to FATE Flow Component Center Example { \"dsl_version\" : \"2\" , \"initiator\" : {}, \"role\" : {}, \"job_parameters\" : {}, \"component_parameters\" : {}, \"provider\" : { \"common\" : { \"hetero_feature_binning_0\" : \"fate@1.8.0\" }, \"role\" : { \"guest\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } }, \"host\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } } } } } 4. Job Conf Configuration Description \u00b6 Job Conf is used to set the information of each participant, the parameters of the job and the parameters of each component. The contents include the following. 4.1 DSL Version \u00b6 Description Configure the version, the default is not 1, it is recommended to configure 2 Example \"dsl_version\" : \"2\" 4.2 Job participants \u00b6 initiating party \u00b6 Description The role and party_id of the assignment initiator. Example \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 9999 } All participants \u00b6 Description Information about each participant. Description In the role field, each element represents a role and the party_id that assumes that role. party_id for each role The party_id of each role is in the form of a list, since a task may involve multiple parties in the same role. Example \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ], \"arbiter\" : [ 10000 ] } 4.3 System operation parameters \u00b6 Description Configure the main system parameters for job runtime Parameter application scope policy setting \u00b6 **Apply to all participants, use the common scope identifier **Apply to only one participant, use the role scope identifier, use (role:)party_index to locate the specified participant, direct \"common\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } The parameters under common are applied to all participants, and the parameters under role-guest-0 configuration are applied to the participants under the subscript 0 of the guest role. Note that the current version of the system operation parameters are not strictly tested for application to only one participant, so it is recommended to use common as a preference. Supported system parameters \u00b6 Configuration Default Supported Description job_type train train, predict task_cores task_cores 4 positive_integer total_cpu_cores_applied_to_job task_parallelism 1 positive_integer task_parallelism computing_partitions number of cpu cores allocated to task positive integer number of partitions in the data table at computation time eggroll_run none processors_per_node, etc. eggroll computing engine related configuration parameters, generally do not need to be configured, from task_cores automatically calculated, if configured, task_cores parameters do not take effect spark_run none num-executors, executor-cores, etc. spark compute engine related configuration parameters, generally do not need to be configured, automatically calculated by task_cores, if configured, task_cores parameters do not take effect rabbitmq_run None queue, exchange, etc. Configuration parameters for rabbitmq to create queue, exchange, etc., which are generally not required and take the system defaults. pulsar_run none producer, consumer, etc. The configuration parameters for pulsar to create producer and consumer. federated_status_collect_type PUSH PUSH, PULL Multi-party run status collection mode, PUSH means that each participant actively reports to the initiator, PULL means that the initiator periodically pulls from each participant. timeout 259200 (3 days) positive integer task_timeout,unit_second audo_retries 3 positive integer maximum number of retries per task failure model_id - - The model id to be filled in for prediction tasks. model_version - - Model version, required for prediction tasks there is a certain support dependency between the computation engine and the storage engine developers can implement their own adapted engines, and configure the engines in runtime config reference configuration \u00b6 no need to pay attention to the compute engine, take the system default cpu allocation compute policy when the configuration \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } use eggroll as the computing engine, take the configuration when specifying cpu and other parameters directly \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"eggroll_run\" : { \"eggroll.session.processors.per.node\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , } } use spark as the computing engine, rabbitmq as the federation engine, take the configuration when specifying the cpu and other parameters directly \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , \"rabbitmq_run\" : { \"queue\" : { \"durable\" : true }, \"connection\" : { \"heartbeat\" : 10000 } } } } use spark as the computing engine and pulsar as the federation engine \"job_parameters\" : { \"common\" : { \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, } } For more advanced resource-related configuration, please refer to Resource Management 4.3 Component operation parameters \u00b6 Parameter application scope policy setting \u00b6 Apply to all participants, use common scope identifier Apply to only one participant, use the role scope identifier, use (role:)party_index to locate the specified participant, directly specified parameters have higher priority than common parameters \"commom\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } where the parameters under the common configuration are applied to all participants, and the parameters under the role-guest-0 configuration indicate that they are applied to the participants under the subscript 0 of the guest role Note that the current version of the component runtime parameter already supports two application scope policies Reference Configuration \u00b6 For the intersection_0 and hetero_lr_0 components, the runtime parameters are placed under the common scope and are applied to all participants The operational parameters of reader_0 and data_transform_0 components are configured specific to each participant, because usually the input parameters are not consistent across participants, so usually these two components are set by participant The above component names are defined in the DSL configuration file \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : true , \"only_output_key\" : false }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : true , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : false , \"output_format\" : \"dense\" } } } } } 5. Multi-Host Configuration \u00b6 Multi-Host task should list all host information under role Example : \"role\" : { \"guest\" : [ 10000 ], \"host\" : [ 10000 , 10001 , 10002 ], \"arbiter\" : [ 10000 ] } The different configurations for each host should be listed separately under their respective corresponding modules Example : \"component_parameters\" : { \"role\" : { \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_0\" , \"namespace\" : \"hetero_breast_host\" } } }, \"1\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_1\" , \"namespace\" : \"hetero_breast_host\" } } }, \"2\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_2\" , \"namespace\" : \"hetero_breast_host\" } } } } } } 6. Predictive Task Configuration \u00b6 6.1 Description \u00b6 DSL V2 does not automatically generate prediction dsl for the training task. Users need to deploy the modules in the required model using Flow Client first. For detailed command description, please refer to fate_flow_client flow model deploy --model-id $model_id --model-version $model_version --cpn-list ... Optionally, the user can add new modules to the prediction dsl, such as Evaluation 6.2 Sample \u00b6 Training dsl. \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } } } Prediction dsl: \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_nn_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ] } } } 7. Job reruns \u00b6 In 1.5.0 , we started to support re-running a job, but only failed jobs are supported. Version 1.7.0 supports rerunning of successful jobs, and you can specify which component to rerun from, the specified component and its downstream components will be rerun, but other components will not be rerun Rerun a job flow job rerun [ options ] Options | parameter name | required | type | description | | :------------- | :------- | :--- | ----------- |------- | | -j, --job-id | yes | string | job id path | | --cpn, --component-name | no | string | Specifies which component to rerun from, unspecified components will not be executed if they have no upstream dependencies on the specified component; if not specified, the entire job will be rerun | | --force | no | bool | The job will be rerun even if it succeeds; if not specified, the job will be skipped if it succeeds | Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data Example flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force 8. Job parameter update \u00b6 In the actual production modeling process, it is necessary to constantly debug the component parameters and rerun, but not all components need to be adjusted and rerun at this time, so after 1.7.0 version support to modify a component parameter update, and with the rerun command on-demand rerun Update the job parameters flow job parameter-update [ options ] Options parameter-name required type description -j, --job-id yes string job id path -c, --conf-path yes string The contents of the job conf that needs to be updated, no need to fill in parameters that don't need to be updated Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict Returns the updated job conf Example Assuming that the job is updated with some of the execution parameters of the hetero_lr_0 component, the configuration file is as follows. { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } Execution of the following command takes effect. flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json Execute the following command to rerun. flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force 9. Job scheduling policy \u00b6 Queuing by commit time Currently, only FIFO policy is supported, i.e. the scheduler will only scan the first job each time, if the first job is successful in requesting resources, it will start and get out of the queue, if the request fails, it will wait for the next round of scheduling. 10. dependency distribution \u00b6 Brief description: Support for distributing fate and python dependencies from client nodes; The work node does not need to deploy fate; Only fate on spark supports distribution mode in current version; Related parameters configuration : conf/service_conf.yaml: dependent_distribution : true fate_flow/settings.py FATE_FLOW_UPDATE_CHECK = False Description: dependent_distribution: dependent distribution switch;, off by default; when off, you need to deploy fate on each work node, and also fill in the configuration of spark in spark-env.sh to configure PYSPARK_DRIVER_PYTHON and PYSPARK_PYTHON. FATE_FLOW_UPDATE_CHECK: Dependency check switch, turned off by default; it will automatically check if the fate code has changed every time a task is submitted; if it has changed, the fate code dependency will be re-uploaded; 11. More commands \u00b6 Please refer to Job CLI and Task CLI","title":"Multi-Party Job&Task Scheduling"},{"location":"fate_flow_job_scheduling/#multi-party-jobtask-scheduling","text":"","title":"Multi-Party Job&amp;Task Scheduling"},{"location":"fate_flow_job_scheduling/#1-description","text":"Mainly describes how to submit a federated learning job using FATE Flow and observe the use of","title":"1. Description"},{"location":"fate_flow_job_scheduling/#2-job-submission","text":"Build a federated learning job and submit it to the scheduling system for execution Two configuration files are required: job dsl and job conf job dsl configures the running components: list, input-output relationships job conf configures the component execution parameters, system operation parameters Build a federated learning job with two configuration files: job dsl and job conf, and submit it to the scheduler for execution flow job submit [ options ] Options parameter name required type description -d, --dsl-path yes string path to job dsl -c, --conf-path yes string job conf's path Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data data.dsl_path string The path to the actual running dsl configuration generated by the system based on the submitted dsl content data.runtime_conf_on_party_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.dsl_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.board_url string fateboard view address data.model_info dict Model identification information Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2. Job submission"},{"location":"fate_flow_job_scheduling/#3-job-dsl-configuration-description","text":"The configuration file of DSL is in json format, in fact, the whole configuration file is a json object (dict).","title":"3. Job DSL configuration description"},{"location":"fate_flow_job_scheduling/#31-component-list","text":"Description The first level of this dict is components , which indicates the modules that will be used by this job. Example { \"components\" : { ... } } Each individual module is defined under \"components\", e.g. \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.train_data\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"model\" ] } } All data needs to be fetched from the data store via the Reader module, note that this module only has the output output \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"train\" ] } }","title":"3.1 Component List"},{"location":"fate_flow_job_scheduling/#32-modules","text":"Description Used to specify the components to be used, all optional module names refer to. Example \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , ... }","title":"3.2 Modules"},{"location":"fate_flow_job_scheduling/#33-inputs","text":"Implications Upstream inputs, divided into two input types, data and model.","title":"3.3 Inputs"},{"location":"fate_flow_job_scheduling/#data-input","text":"Description Upstream data input, divided into three input types. > 1. data: generally used in the data-transform module, feature_engineering module or > evaluation module. > 2. train_data: Generally used in homo_lr, hetero_lr and secure_boost > modules. If the train_data field is present, then the task will be recognized as a fit task > validate_data: If the train_data > field is present, then the field is optional. If you choose to keep this field, the data pointed to will be used as the > validation set > 4. test_data: Used as prediction data, if provided, along with model input.","title":"data input"},{"location":"fate_flow_job_scheduling/#model_input","text":"Description Upstream model input, divided into two input types. 1. model: Used for model input of the same type of component. For example, hetero_binning_0 will fit the model, and then hetero_binning_1 will use the output of hetero_binning_0 for predict or transform. code example. \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_1.validate_data\" ] }, \"model\" : [ \"hetero_feature_binning_0.fit_model\" ] }, \"output\" : { \"data\" : [ \"validate_data\" ], \"model\" : [ \"eval_model\" ] } } 2. isometric_model: Used to specify the model input of the inherited upstream component. For example, the upstream component of feature selection is feature binning, it will use the information of feature binning as the feature Code example. \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.output_model\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"output_model\" ] } }","title":"model_input"},{"location":"fate_flow_job_scheduling/#34-output","text":"Description Output, like input, is divided into data and model output","title":"3.4 Output"},{"location":"fate_flow_job_scheduling/#data-output","text":"Description Data output, divided into four output types. data: General module data output train_data: only for Data Split validate_data: Only for Data Split test_data: Data Split only","title":"data output"},{"location":"fate_flow_job_scheduling/#model-output","text":"Description Model output, using model only","title":"Model Output"},{"location":"fate_flow_job_scheduling/#35-component-providers","text":"Since FATE-Flow version 1.7.0, the same FATE-Flow system supports loading multiple component providers, i.e. providers, which provide several components, and the source provider of the component can be configured when submitting a job Since FATE-Flow version 1.9.0, the parameters of the provider need to be configured in job conf, as follows Description Specify the provider, support global specification and individual component specification; if not specified, the default provider: fate@$FATE_VERSION Format provider_name@$provider_version Advanced You can register a new provider through the component registration CLI, currently supported providers: fate and fate_sql, please refer to FATE Flow Component Center Example { \"dsl_version\" : \"2\" , \"initiator\" : {}, \"role\" : {}, \"job_parameters\" : {}, \"component_parameters\" : {}, \"provider\" : { \"common\" : { \"hetero_feature_binning_0\" : \"fate@1.8.0\" }, \"role\" : { \"guest\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } }, \"host\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } } } } }","title":"3.5 Component Providers"},{"location":"fate_flow_job_scheduling/#4-job-conf-configuration-description","text":"Job Conf is used to set the information of each participant, the parameters of the job and the parameters of each component. The contents include the following.","title":"4. Job Conf Configuration Description"},{"location":"fate_flow_job_scheduling/#41-dsl-version","text":"Description Configure the version, the default is not 1, it is recommended to configure 2 Example \"dsl_version\" : \"2\"","title":"4.1 DSL Version"},{"location":"fate_flow_job_scheduling/#42-job-participants","text":"","title":"4.2 Job participants"},{"location":"fate_flow_job_scheduling/#initiating-party","text":"Description The role and party_id of the assignment initiator. Example \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 9999 }","title":"initiating party"},{"location":"fate_flow_job_scheduling/#all-participants","text":"Description Information about each participant. Description In the role field, each element represents a role and the party_id that assumes that role. party_id for each role The party_id of each role is in the form of a list, since a task may involve multiple parties in the same role. Example \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ], \"arbiter\" : [ 10000 ] }","title":"All participants"},{"location":"fate_flow_job_scheduling/#43-system-operation-parameters","text":"Description Configure the main system parameters for job runtime","title":"4.3 System operation parameters"},{"location":"fate_flow_job_scheduling/#parameter-application-scope-policy-setting","text":"**Apply to all participants, use the common scope identifier **Apply to only one participant, use the role scope identifier, use (role:)party_index to locate the specified participant, direct \"common\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } The parameters under common are applied to all participants, and the parameters under role-guest-0 configuration are applied to the participants under the subscript 0 of the guest role. Note that the current version of the system operation parameters are not strictly tested for application to only one participant, so it is recommended to use common as a preference.","title":"Parameter application scope policy setting"},{"location":"fate_flow_job_scheduling/#supported-system-parameters","text":"Configuration Default Supported Description job_type train train, predict task_cores task_cores 4 positive_integer total_cpu_cores_applied_to_job task_parallelism 1 positive_integer task_parallelism computing_partitions number of cpu cores allocated to task positive integer number of partitions in the data table at computation time eggroll_run none processors_per_node, etc. eggroll computing engine related configuration parameters, generally do not need to be configured, from task_cores automatically calculated, if configured, task_cores parameters do not take effect spark_run none num-executors, executor-cores, etc. spark compute engine related configuration parameters, generally do not need to be configured, automatically calculated by task_cores, if configured, task_cores parameters do not take effect rabbitmq_run None queue, exchange, etc. Configuration parameters for rabbitmq to create queue, exchange, etc., which are generally not required and take the system defaults. pulsar_run none producer, consumer, etc. The configuration parameters for pulsar to create producer and consumer. federated_status_collect_type PUSH PUSH, PULL Multi-party run status collection mode, PUSH means that each participant actively reports to the initiator, PULL means that the initiator periodically pulls from each participant. timeout 259200 (3 days) positive integer task_timeout,unit_second audo_retries 3 positive integer maximum number of retries per task failure model_id - - The model id to be filled in for prediction tasks. model_version - - Model version, required for prediction tasks there is a certain support dependency between the computation engine and the storage engine developers can implement their own adapted engines, and configure the engines in runtime config","title":"Supported system parameters"},{"location":"fate_flow_job_scheduling/#reference-configuration","text":"no need to pay attention to the compute engine, take the system default cpu allocation compute policy when the configuration \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } use eggroll as the computing engine, take the configuration when specifying cpu and other parameters directly \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"eggroll_run\" : { \"eggroll.session.processors.per.node\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , } } use spark as the computing engine, rabbitmq as the federation engine, take the configuration when specifying the cpu and other parameters directly \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , \"rabbitmq_run\" : { \"queue\" : { \"durable\" : true }, \"connection\" : { \"heartbeat\" : 10000 } } } } use spark as the computing engine and pulsar as the federation engine \"job_parameters\" : { \"common\" : { \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, } } For more advanced resource-related configuration, please refer to Resource Management","title":"reference configuration"},{"location":"fate_flow_job_scheduling/#43-component-operation-parameters","text":"","title":"4.3 Component operation parameters"},{"location":"fate_flow_job_scheduling/#parameter-application-scope-policy-setting_1","text":"Apply to all participants, use common scope identifier Apply to only one participant, use the role scope identifier, use (role:)party_index to locate the specified participant, directly specified parameters have higher priority than common parameters \"commom\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } where the parameters under the common configuration are applied to all participants, and the parameters under the role-guest-0 configuration indicate that they are applied to the participants under the subscript 0 of the guest role Note that the current version of the component runtime parameter already supports two application scope policies","title":"Parameter application scope policy setting"},{"location":"fate_flow_job_scheduling/#reference-configuration_1","text":"For the intersection_0 and hetero_lr_0 components, the runtime parameters are placed under the common scope and are applied to all participants The operational parameters of reader_0 and data_transform_0 components are configured specific to each participant, because usually the input parameters are not consistent across participants, so usually these two components are set by participant The above component names are defined in the DSL configuration file \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : true , \"only_output_key\" : false }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : true , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : false , \"output_format\" : \"dense\" } } } } }","title":"Reference Configuration"},{"location":"fate_flow_job_scheduling/#5-multi-host-configuration","text":"Multi-Host task should list all host information under role Example : \"role\" : { \"guest\" : [ 10000 ], \"host\" : [ 10000 , 10001 , 10002 ], \"arbiter\" : [ 10000 ] } The different configurations for each host should be listed separately under their respective corresponding modules Example : \"component_parameters\" : { \"role\" : { \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_0\" , \"namespace\" : \"hetero_breast_host\" } } }, \"1\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_1\" , \"namespace\" : \"hetero_breast_host\" } } }, \"2\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_2\" , \"namespace\" : \"hetero_breast_host\" } } } } } }","title":"5. Multi-Host Configuration"},{"location":"fate_flow_job_scheduling/#6-predictive-task-configuration","text":"","title":"6. Predictive Task Configuration"},{"location":"fate_flow_job_scheduling/#61-description","text":"DSL V2 does not automatically generate prediction dsl for the training task. Users need to deploy the modules in the required model using Flow Client first. For detailed command description, please refer to fate_flow_client flow model deploy --model-id $model_id --model-version $model_version --cpn-list ... Optionally, the user can add new modules to the prediction dsl, such as Evaluation","title":"6.1 Description"},{"location":"fate_flow_job_scheduling/#62-sample","text":"Training dsl. \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } } } Prediction dsl: \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_nn_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ] } } }","title":"6.2 Sample"},{"location":"fate_flow_job_scheduling/#7-job-reruns","text":"In 1.5.0 , we started to support re-running a job, but only failed jobs are supported. Version 1.7.0 supports rerunning of successful jobs, and you can specify which component to rerun from, the specified component and its downstream components will be rerun, but other components will not be rerun Rerun a job flow job rerun [ options ] Options | parameter name | required | type | description | | :------------- | :------- | :--- | ----------- |------- | | -j, --job-id | yes | string | job id path | | --cpn, --component-name | no | string | Specifies which component to rerun from, unspecified components will not be executed if they have no upstream dependencies on the specified component; if not specified, the entire job will be rerun | | --force | no | bool | The job will be rerun even if it succeeds; if not specified, the job will be skipped if it succeeds | Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data Example flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force","title":"7. Job reruns"},{"location":"fate_flow_job_scheduling/#8-job-parameter-update","text":"In the actual production modeling process, it is necessary to constantly debug the component parameters and rerun, but not all components need to be adjusted and rerun at this time, so after 1.7.0 version support to modify a component parameter update, and with the rerun command on-demand rerun Update the job parameters flow job parameter-update [ options ] Options parameter-name required type description -j, --job-id yes string job id path -c, --conf-path yes string The contents of the job conf that needs to be updated, no need to fill in parameters that don't need to be updated Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict Returns the updated job conf Example Assuming that the job is updated with some of the execution parameters of the hetero_lr_0 component, the configuration file is as follows. { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } Execution of the following command takes effect. flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json Execute the following command to rerun. flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force","title":"8. Job parameter update"},{"location":"fate_flow_job_scheduling/#9-job-scheduling-policy","text":"Queuing by commit time Currently, only FIFO policy is supported, i.e. the scheduler will only scan the first job each time, if the first job is successful in requesting resources, it will start and get out of the queue, if the request fails, it will wait for the next round of scheduling.","title":"9. Job scheduling policy"},{"location":"fate_flow_job_scheduling/#10-dependency-distribution","text":"Brief description: Support for distributing fate and python dependencies from client nodes; The work node does not need to deploy fate; Only fate on spark supports distribution mode in current version; Related parameters configuration : conf/service_conf.yaml: dependent_distribution : true fate_flow/settings.py FATE_FLOW_UPDATE_CHECK = False Description: dependent_distribution: dependent distribution switch;, off by default; when off, you need to deploy fate on each work node, and also fill in the configuration of spark in spark-env.sh to configure PYSPARK_DRIVER_PYTHON and PYSPARK_PYTHON. FATE_FLOW_UPDATE_CHECK: Dependency check switch, turned off by default; it will automatically check if the fate code has changed every time a task is submitted; if it has changed, the fate code dependency will be re-uploaded;","title":"10. dependency distribution"},{"location":"fate_flow_job_scheduling/#11-more-commands","text":"Please refer to Job CLI and Task CLI","title":"11. More commands"},{"location":"fate_flow_model_migration/","text":"Inter-cluster Model Migration \u00b6 The model migration function makes it possible to copy the model file to a cluster with a different party_id and still have it available. the cluster of any of the model generation participants is redeployed and the party_id of the cluster is changed after the deployment, e.g. the source participant is arbiter-10000#guest-9999#host-10000 , changed to arbiter-10000#guest-99#host-10000 Any one or more of the participants will copy the model file from the source cluster to the target cluster, which needs to be used in the target cluster Basics. 1. In the above two scenarios, the participant party_id of the model changes, such as arbiter-10000#guest-9999#host-10000 -> arbiter-10000#guest-99#host-10000 , or arbiter-10000#guest -9999#host-10000 -> arbiter-100#guest-99#host-100 2. the model's participant party_id changes, so model_id and the model file involving party_id need to be changed 3. The overall process has three steps: copy and transfer the original model file, execute the model migration task on the original model file, and import the new model generated by the model migration task. 4. where execute model migration task on the original model file is actually a temporary copy of the original model file at the execution, and then modify model_id and the contents of the model file involving party_id according to the configuration, in order to adapt to the new participant party_id . 5. All the above steps need to be performed on all new participants, even if the party_id of one of the target participants has not changed. 6. the new participant cluster version needs to be greater than or equal to 1.5.1 . The migration process is as follows. Transfer the model file \u00b6 Please package and transfer the model files (including the directory named by model id) generated by the machine where the source participant fate flow service is located to the machine where the target participant fate flow is located, and please transfer the model files to a fixed directory as follows. $FATE_PROJECT_BASE /model_local_cache Instructions: 1. just transfer the folder, if you do the transfer by compressing and packing, please extract the model files to the directory where the model is located after the transfer. 2. Please transfer the model files one by one according to the source participants. Preparation work before migration \u00b6 Instructions \u00b6 refer to fate flow client to install the client fate-client which supports model migration, only fate 1.5.1 and above are supported. Execute the migration task \u00b6 Description \u00b6 Execute the migration task by replacing the source model file with model_id , model_version and the contents of the model involving role and party_id according to the migration task configuration file The cluster submitting the task must complete the above migration preparation 1. Modify the configuration file \u00b6 Modify the configuration file of the migration task in the new participant (machine) according to the actual situation, as follows for the migration task example configuration file migrate_model.json { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"arbiter\" : [ 100 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202006171904247702041\" , \"unify_model_version\" : \"202901_0001\" } Please save the above configuration content to a location in the server for modification. The following are explanatory notes for the parameters in this configuration. job_parameters : The federated_mode in this parameter has two optional parameters, which are MULTIPLE and SINGLE . If set to SINGLE , the migration job will be executed only in the party that submitted the migration job, then the job needs to be submitted in all new participants separately; if set to MULTIPLE , the job will be distributed to the participants specified in execute_party to execute the job, only the new The task will be distributed to the participant specified in execute_party , and only needs to be submitted in the new participant as migrate_initiator . role : This parameter fills in the role of the participant that generated the original model and its corresponding party_id information. migrate_initiator : This parameter is used to specify the task initiator information of the migrated model, and the initiator's role and party_id should be specified respectively. migrate_role : This parameter is used to specify the role and party_id information of the migrated model. execute_party : This parameter is used to specify the role and party_id information of the party_id that needs to execute the migration, which is the source cluster party_id . model_id : This parameter is used to specify the model_id of the original model to be migrated. model_version : This parameter is used to specify the model_version of the original model that needs to be migrated. unify_model_version : This parameter is not required, it is used to specify the model_version of the new model. If this parameter is not provided, the new model will take the job_id of the migrated job as its new model_version . Examples of the above configuration files are. 1. the source model has guest: 9999, host: 10000, arbiter: 10000, migrate the model to have guest: 99, host: 100, arbiter: 100 as participants, and guest: 99 as the new initiator 2. federated_mode: SINGLE means that each migration task will be executed only in the cluster where the task is submitted, then the task needs to be submitted in 99 and 100 respectively. 3. for example, if the task is executed at 99, then execute_party is configured as \"guest\": [9999] . 4. For example, if you execute at 100, then execute_party is configured as \"arbiter\": [10000], \"host\": [10000] 2. Submit migration tasks (separate operations in all target clusters) \u00b6 Migration tasks need to be committed using fate-client. A sample execution command is as follows. flow model migrate -c $FATE_FLOW_BASE /examples/model/migrate_model.json 3. Task execution results \u00b6 The following is the content of the configuration file for the actual migration task. { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"model_id\" : \"guest-9999#host-10000#model\" , \"model_version\" : \"202010291539339602784\" , \"unify_model_version\" : \"fate_migration\" } What this task achieves is to migrate the model with model_id of guest-9999#host-10000#model and model_version of 202010291539339602784 from a cluster with party_id of 9999 (guest) and 10000 (host) to a new model that fits the party_id of 99 (guest) and 100 (host) clusters The following is the result of a successful migration. { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. the configuration of model has been modified automatically. new model id is: guest-99#host-100#model, Model files can be found at '/data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip'.zip. migration.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically, Model files can be found at '/data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip'.zip. migration.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202010292152299793981\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } After the task is successfully executed, a copy of the migrated model zip file is generated in each of the executor's machines, and the path to this file can be obtained in the returned results. For example, the path of the post-migration model file for 9999 (guest) is: /data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip and for 10000 (host) The model file path is: /data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip . The new model_id can be obtained from the return as well as the model_version . 4. Transferring files and importing (separate operation in all target clusters) \u00b6 After the migration task is successful, please manually transfer the newly generated model zip file to the fate flow machine of the target cluster. For example, the new model zip file generated by 9999 (guest) in point 3 needs to be transferred to the 99 (guest) machine. The zip file can be placed anywhere on the corresponding machine. Next, you need to configure the model import task, see import_model.json for the configuration file examples/import_model.json) (this configuration file is included in the zip file, please modify it according to the actual situation, do not use it directly ). The following is an example of the configuration file for importing the migrated model in guest (99). { \"role\" : \"guest\" , \"party_id\" : 99 , \"model_id\" : \"guest-99#host-100#model\" , \"model_version\" : \"202010292152299793981\" , \"file\" : \"/data/projects/fate/python/temp/guest#99#guest-99#host-100#202010292152299793981.zip\" } Please fill in the role role , the current party party_id , the new model_id and model_version of the migrated model, and the path to the zip file of the migrated model according to the actual situation. The following is a sample command to submit an imported model using fate-client. flow model import -c $FATE_FLOW_BASE /examples/model/import_model.json The import is considered successful when it returns the following. { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } The migration task is now complete and the user can submit the task with the new model_id and model_version to perform prediction tasks with the migrated model.","title":"Inter-cluster Model Migration"},{"location":"fate_flow_model_migration/#inter-cluster-model-migration","text":"The model migration function makes it possible to copy the model file to a cluster with a different party_id and still have it available. the cluster of any of the model generation participants is redeployed and the party_id of the cluster is changed after the deployment, e.g. the source participant is arbiter-10000#guest-9999#host-10000 , changed to arbiter-10000#guest-99#host-10000 Any one or more of the participants will copy the model file from the source cluster to the target cluster, which needs to be used in the target cluster Basics. 1. In the above two scenarios, the participant party_id of the model changes, such as arbiter-10000#guest-9999#host-10000 -> arbiter-10000#guest-99#host-10000 , or arbiter-10000#guest -9999#host-10000 -> arbiter-100#guest-99#host-100 2. the model's participant party_id changes, so model_id and the model file involving party_id need to be changed 3. The overall process has three steps: copy and transfer the original model file, execute the model migration task on the original model file, and import the new model generated by the model migration task. 4. where execute model migration task on the original model file is actually a temporary copy of the original model file at the execution, and then modify model_id and the contents of the model file involving party_id according to the configuration, in order to adapt to the new participant party_id . 5. All the above steps need to be performed on all new participants, even if the party_id of one of the target participants has not changed. 6. the new participant cluster version needs to be greater than or equal to 1.5.1 . The migration process is as follows.","title":"Inter-cluster Model Migration"},{"location":"fate_flow_model_migration/#transfer-the-model-file","text":"Please package and transfer the model files (including the directory named by model id) generated by the machine where the source participant fate flow service is located to the machine where the target participant fate flow is located, and please transfer the model files to a fixed directory as follows. $FATE_PROJECT_BASE /model_local_cache Instructions: 1. just transfer the folder, if you do the transfer by compressing and packing, please extract the model files to the directory where the model is located after the transfer. 2. Please transfer the model files one by one according to the source participants.","title":"Transfer the model file"},{"location":"fate_flow_model_migration/#preparation-work-before-migration","text":"","title":"Preparation work before migration"},{"location":"fate_flow_model_migration/#instructions","text":"refer to fate flow client to install the client fate-client which supports model migration, only fate 1.5.1 and above are supported.","title":"Instructions"},{"location":"fate_flow_model_migration/#execute-the-migration-task","text":"","title":"Execute the migration task"},{"location":"fate_flow_model_migration/#description","text":"Execute the migration task by replacing the source model file with model_id , model_version and the contents of the model involving role and party_id according to the migration task configuration file The cluster submitting the task must complete the above migration preparation","title":"Description"},{"location":"fate_flow_model_migration/#1-modify-the-configuration-file","text":"Modify the configuration file of the migration task in the new participant (machine) according to the actual situation, as follows for the migration task example configuration file migrate_model.json { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"arbiter\" : [ 100 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202006171904247702041\" , \"unify_model_version\" : \"202901_0001\" } Please save the above configuration content to a location in the server for modification. The following are explanatory notes for the parameters in this configuration. job_parameters : The federated_mode in this parameter has two optional parameters, which are MULTIPLE and SINGLE . If set to SINGLE , the migration job will be executed only in the party that submitted the migration job, then the job needs to be submitted in all new participants separately; if set to MULTIPLE , the job will be distributed to the participants specified in execute_party to execute the job, only the new The task will be distributed to the participant specified in execute_party , and only needs to be submitted in the new participant as migrate_initiator . role : This parameter fills in the role of the participant that generated the original model and its corresponding party_id information. migrate_initiator : This parameter is used to specify the task initiator information of the migrated model, and the initiator's role and party_id should be specified respectively. migrate_role : This parameter is used to specify the role and party_id information of the migrated model. execute_party : This parameter is used to specify the role and party_id information of the party_id that needs to execute the migration, which is the source cluster party_id . model_id : This parameter is used to specify the model_id of the original model to be migrated. model_version : This parameter is used to specify the model_version of the original model that needs to be migrated. unify_model_version : This parameter is not required, it is used to specify the model_version of the new model. If this parameter is not provided, the new model will take the job_id of the migrated job as its new model_version . Examples of the above configuration files are. 1. the source model has guest: 9999, host: 10000, arbiter: 10000, migrate the model to have guest: 99, host: 100, arbiter: 100 as participants, and guest: 99 as the new initiator 2. federated_mode: SINGLE means that each migration task will be executed only in the cluster where the task is submitted, then the task needs to be submitted in 99 and 100 respectively. 3. for example, if the task is executed at 99, then execute_party is configured as \"guest\": [9999] . 4. For example, if you execute at 100, then execute_party is configured as \"arbiter\": [10000], \"host\": [10000]","title":"1. Modify the configuration file"},{"location":"fate_flow_model_migration/#2-submit-migration-tasks-separate-operations-in-all-target-clusters","text":"Migration tasks need to be committed using fate-client. A sample execution command is as follows. flow model migrate -c $FATE_FLOW_BASE /examples/model/migrate_model.json","title":"2. Submit migration tasks (separate operations in all target clusters)"},{"location":"fate_flow_model_migration/#3-task-execution-results","text":"The following is the content of the configuration file for the actual migration task. { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"model_id\" : \"guest-9999#host-10000#model\" , \"model_version\" : \"202010291539339602784\" , \"unify_model_version\" : \"fate_migration\" } What this task achieves is to migrate the model with model_id of guest-9999#host-10000#model and model_version of 202010291539339602784 from a cluster with party_id of 9999 (guest) and 10000 (host) to a new model that fits the party_id of 99 (guest) and 100 (host) clusters The following is the result of a successful migration. { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. the configuration of model has been modified automatically. new model id is: guest-99#host-100#model, Model files can be found at '/data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip'.zip. migration.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically, Model files can be found at '/data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip'.zip. migration.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202010292152299793981\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } After the task is successfully executed, a copy of the migrated model zip file is generated in each of the executor's machines, and the path to this file can be obtained in the returned results. For example, the path of the post-migration model file for 9999 (guest) is: /data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip and for 10000 (host) The model file path is: /data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip . The new model_id can be obtained from the return as well as the model_version .","title":"3. Task execution results"},{"location":"fate_flow_model_migration/#4-transferring-files-and-importing-separate-operation-in-all-target-clusters","text":"After the migration task is successful, please manually transfer the newly generated model zip file to the fate flow machine of the target cluster. For example, the new model zip file generated by 9999 (guest) in point 3 needs to be transferred to the 99 (guest) machine. The zip file can be placed anywhere on the corresponding machine. Next, you need to configure the model import task, see import_model.json for the configuration file examples/import_model.json) (this configuration file is included in the zip file, please modify it according to the actual situation, do not use it directly ). The following is an example of the configuration file for importing the migrated model in guest (99). { \"role\" : \"guest\" , \"party_id\" : 99 , \"model_id\" : \"guest-99#host-100#model\" , \"model_version\" : \"202010292152299793981\" , \"file\" : \"/data/projects/fate/python/temp/guest#99#guest-99#host-100#202010292152299793981.zip\" } Please fill in the role role , the current party party_id , the new model_id and model_version of the migrated model, and the path to the zip file of the migrated model according to the actual situation. The following is a sample command to submit an imported model using fate-client. flow model import -c $FATE_FLOW_BASE /examples/model/import_model.json The import is considered successful when it returns the following. { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } The migration task is now complete and the user can submit the task with the new model_id and model_version to perform prediction tasks with the migrated model.","title":"4. Transferring files and importing (separate operation in all target clusters)"},{"location":"fate_flow_model_registry/","text":"Federated Model Registry \u00b6 1. Description \u00b6 Models trained by FATE are automatically saved locally and recorded in the FATE-Flow database. models saved after each component run are called Pipeline models, and models saved at regular intervals while the component is running are called Checkpoint models. checkpoint models can also be used for retrying after a component run is unexpectedly interrupted The Checkpoint model can also be used for \"breakpoints\" when a component is retrying after an unexpected interruption. Checkpoint model support has been added since 1.7.0 and is not saved by default. To enable it, add the callback ModelCheckpoint to the DSL. Local disk storage \u00b6 Pipeline models are stored in model_local_cache/<party_model_id>/<model_version>/variables/data/<component_name>/<model_alias> . Checkpoint models are stored in model_local_cache/<party_model_id>/<model_version>/checkpoint/<component_name>/<step_index>#<step_name> . Remote storage engine \u00b6 Local disk is not reliable, so there is a risk of losing models. FATE-Flow supports exporting models to specified storage engines, importing from specified storage engines, and pushing models to engine storage when publishing models automatically. The storage engine supports Tencent Cloud Object Storage, MySQL and Redis, please refer to Storage Engine Configuration 2. Model \u00b6 load \u00b6 Load a model generated by deploy to Fate-Serving. flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path Yes Config file path job_id -j --job-id Yes Job ID Example { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 Bind a model generated by deploy to Fate-Serving. flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path job_id -j --job-id Yes Job ID Example { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" } import \u00b6 Import the model from a file or storage engine. flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path from_database --from-database Yes Import the model from storage engine Example { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } export \u00b6 Export the model to a file or storage engine. flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path to_database --to-database Yes Export the model to storage engine Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } migrate \u00b6 Migrate the model. flow model migrate -c examples/model/migrate_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path Example { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } tag-list \u00b6 List tags of the model. flow model tag-list -j <job_id> Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag-model \u00b6 Add or remove a tag from the model. flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag_name -t --tag-name No Tag name remove --remove Yes Remove the tag deploy \u00b6 Configure predict DSL. flow model deploy --model-id <model_id> --model-version <model_version> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version cpn_list --cpn-list Yes Components list cpn_path --cpn-path Yes Load components list from a file dsl_path --dsl-path Yes Predict DSL file path cpn_step_index --cpn-step-index Yes Specify a checkpoint model to replace the pipeline model Use : to separate component name and step index E.g. --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name Yes Specify a checkpoint model to replace the pipeline model. Use : to separate component name and step name E.g. --cpn-step-name cpn_b:foobar Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } } get-predict-dsl \u00b6 Get predict DSL of the model. flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path get-predict-conf \u00b6 Get the template of predict config. flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path get-model-info \u00b6 Get model information. flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role Yes Party role party_id -p --party-id Yes Party ID detail --detail Yes Display detailed information homo-convert \u00b6 Convert trained homogenous model to the format of another ML framework. flow model homo-convert -c examples/model/homo_convert_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path homo-deploy \u00b6 Deploy trained homogenous model to a target online serving system. Currently the supported target serving system is KFServing. flow model homo-deploy -c examples/model/homo_deploy_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path 3. Checkpoint \u00b6 list \u00b6 List checkpoints. flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] } get \u00b6 Get checkpoint information. flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> Example Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name step_index --step-index Yes Step index, cannot be used with step_name step_name --step-name Yes Step name, cannot be used with step_index Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } } 4. Storage engine configuration \u00b6 enable_model_store \u00b6 This option affects API /model/load . Automatic upload models to the model store if it exists locally but does not exist in the model storage, or download models from the model store if it does not exist locally but does not exist in the model storage. This option does not affect API /model/store or /model/restore . model_store_address \u00b6 This config defines which storage engine to use. Tencent Cloud Object Storage \u00b6 storage : tencent_cos # get these configs from Tencent Cloud console Region : SecretId : SecretKey : Bucket : MySQL \u00b6 storage : mysql database : fate_model user : fate password : fate host : 127.0.0.1 port : 3306 # other optional configs send to the engine max_connections : 10 stale_timeout : 10 Redis \u00b6 storage : redis host : 127.0.0.1 port : 6379 db : 0 password : # the expiry time of keys, in seconds. defaults None (no expiry time) ex :","title":"Federated Model Registry"},{"location":"fate_flow_model_registry/#federated-model-registry","text":"","title":"Federated Model Registry"},{"location":"fate_flow_model_registry/#1-description","text":"Models trained by FATE are automatically saved locally and recorded in the FATE-Flow database. models saved after each component run are called Pipeline models, and models saved at regular intervals while the component is running are called Checkpoint models. checkpoint models can also be used for retrying after a component run is unexpectedly interrupted The Checkpoint model can also be used for \"breakpoints\" when a component is retrying after an unexpected interruption. Checkpoint model support has been added since 1.7.0 and is not saved by default. To enable it, add the callback ModelCheckpoint to the DSL.","title":"1. Description"},{"location":"fate_flow_model_registry/#local-disk-storage","text":"Pipeline models are stored in model_local_cache/<party_model_id>/<model_version>/variables/data/<component_name>/<model_alias> . Checkpoint models are stored in model_local_cache/<party_model_id>/<model_version>/checkpoint/<component_name>/<step_index>#<step_name> .","title":"Local disk storage"},{"location":"fate_flow_model_registry/#remote-storage-engine","text":"Local disk is not reliable, so there is a risk of losing models. FATE-Flow supports exporting models to specified storage engines, importing from specified storage engines, and pushing models to engine storage when publishing models automatically. The storage engine supports Tencent Cloud Object Storage, MySQL and Redis, please refer to Storage Engine Configuration","title":"Remote storage engine"},{"location":"fate_flow_model_registry/#2-model","text":"","title":"2. Model"},{"location":"fate_flow_model_registry/#load","text":"Load a model generated by deploy to Fate-Serving. flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path Yes Config file path job_id -j --job-id Yes Job ID Example { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"load"},{"location":"fate_flow_model_registry/#bind","text":"Bind a model generated by deploy to Fate-Serving. flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path job_id -j --job-id Yes Job ID Example { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" }","title":"bind"},{"location":"fate_flow_model_registry/#import","text":"Import the model from a file or storage engine. flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path from_database --from-database Yes Import the model from storage engine Example { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"import"},{"location":"fate_flow_model_registry/#export","text":"Export the model to a file or storage engine. flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path to_database --to-database Yes Export the model to storage engine Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"export"},{"location":"fate_flow_model_registry/#migrate","text":"Migrate the model. flow model migrate -c examples/model/migrate_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path Example { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"migrate"},{"location":"fate_flow_model_registry/#tag-list","text":"List tags of the model. flow model tag-list -j <job_id> Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID","title":"tag-list"},{"location":"fate_flow_model_registry/#tag-model","text":"Add or remove a tag from the model. flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag_name -t --tag-name No Tag name remove --remove Yes Remove the tag","title":"tag-model"},{"location":"fate_flow_model_registry/#deploy","text":"Configure predict DSL. flow model deploy --model-id <model_id> --model-version <model_version> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version cpn_list --cpn-list Yes Components list cpn_path --cpn-path Yes Load components list from a file dsl_path --dsl-path Yes Predict DSL file path cpn_step_index --cpn-step-index Yes Specify a checkpoint model to replace the pipeline model Use : to separate component name and step index E.g. --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name Yes Specify a checkpoint model to replace the pipeline model. Use : to separate component name and step name E.g. --cpn-step-name cpn_b:foobar Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } }","title":"deploy"},{"location":"fate_flow_model_registry/#get-predict-dsl","text":"Get predict DSL of the model. flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path","title":"get-predict-dsl"},{"location":"fate_flow_model_registry/#get-predict-conf","text":"Get the template of predict config. flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path","title":"get-predict-conf"},{"location":"fate_flow_model_registry/#get-model-info","text":"Get model information. flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role Yes Party role party_id -p --party-id Yes Party ID detail --detail Yes Display detailed information","title":"get-model-info"},{"location":"fate_flow_model_registry/#homo-convert","text":"Convert trained homogenous model to the format of another ML framework. flow model homo-convert -c examples/model/homo_convert_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path","title":"homo-convert"},{"location":"fate_flow_model_registry/#homo-deploy","text":"Deploy trained homogenous model to a target online serving system. Currently the supported target serving system is KFServing. flow model homo-deploy -c examples/model/homo_deploy_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path","title":"homo-deploy"},{"location":"fate_flow_model_registry/#3-checkpoint","text":"","title":"3. Checkpoint"},{"location":"fate_flow_model_registry/#list","text":"List checkpoints. flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] }","title":"list"},{"location":"fate_flow_model_registry/#get","text":"Get checkpoint information. flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> Example Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name step_index --step-index Yes Step index, cannot be used with step_name step_name --step-name Yes Step name, cannot be used with step_index Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"get"},{"location":"fate_flow_model_registry/#4-storage-engine-configuration","text":"","title":"4. Storage engine configuration"},{"location":"fate_flow_model_registry/#enable_model_store","text":"This option affects API /model/load . Automatic upload models to the model store if it exists locally but does not exist in the model storage, or download models from the model store if it does not exist locally but does not exist in the model storage. This option does not affect API /model/store or /model/restore .","title":"enable_model_store"},{"location":"fate_flow_model_registry/#model_store_address","text":"This config defines which storage engine to use.","title":"model_store_address"},{"location":"fate_flow_model_registry/#tencent-cloud-object-storage","text":"storage : tencent_cos # get these configs from Tencent Cloud console Region : SecretId : SecretKey : Bucket :","title":"Tencent Cloud Object Storage"},{"location":"fate_flow_model_registry/#mysql","text":"storage : mysql database : fate_model user : fate password : fate host : 127.0.0.1 port : 3306 # other optional configs send to the engine max_connections : 10 stale_timeout : 10","title":"MySQL"},{"location":"fate_flow_model_registry/#redis","text":"storage : redis host : 127.0.0.1 port : 6379 db : 0 password : # the expiry time of keys, in seconds. defaults None (no expiry time) ex :","title":"Redis"},{"location":"fate_flow_monitoring/","text":"Real-Time Monitoring \u00b6 1. Description \u00b6 Mainly introduces FATE Flow to monitor job running status, Worker execution status, etc., in real time to ensure final consistency","title":"Real-Time Monitoring"},{"location":"fate_flow_monitoring/#real-time-monitoring","text":"","title":"Real-Time Monitoring"},{"location":"fate_flow_monitoring/#1-description","text":"Mainly introduces FATE Flow to monitor job running status, Worker execution status, etc., in real time to ensure final consistency","title":"1. Description"},{"location":"fate_flow_permission_management/","text":"Multi-party cooperation rights management \u00b6 1. Description \u00b6 fateflow permission authentication supports both flow's own authentication and third-party authentication Authentication configuration: $FATE_BASE/conf/service_conf.yaml . hook_module : permission : fate_flow.hook.flow.permission hook_server_name : permission : switch : false component : false dataset : false The permission hooks support both \"fate_flow.hook.flow.permission\" and \"fate_flow.hook.api.permission\". 2. Permission authentication \u00b6 2.1 flow permission authentication \u00b6 2.1.1 Authentication scheme \u00b6 The flow permission authentication scheme uses the casbin permission control framework and supports both component and dataset permissions. The configuration is as follows. hook_module : permission : fate_flow.hook.flow.permission permission : switch : true component : true dataset : true 2.1.2 Authorization \u00b6 Add privileges flow privilege grant -c fateflow/examples/permission/grant.json Options parameter name required type description party_id yes string site id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.1.3 Revoke privileges \u00b6 Delete permissions flow privilege delete -c fateflow/examples/permission/delete.json Options parameter name required type description party_id yes string site_id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets, \"*\" is all datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.1.4 Permission query \u00b6 Query permissions flow privilege query -p 10000 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string Return information data object return data Sample { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.2 Third-party interface privilege authentication \u00b6 Third party services need to authenticate to the flow privilege interface, refer to privilege authentication service registration If the authentication fails, flow will directly return the authentication failure to the partner.","title":"Fate flow permission management"},{"location":"fate_flow_permission_management/#multi-party-cooperation-rights-management","text":"","title":"Multi-party cooperation rights management"},{"location":"fate_flow_permission_management/#1-description","text":"fateflow permission authentication supports both flow's own authentication and third-party authentication Authentication configuration: $FATE_BASE/conf/service_conf.yaml . hook_module : permission : fate_flow.hook.flow.permission hook_server_name : permission : switch : false component : false dataset : false The permission hooks support both \"fate_flow.hook.flow.permission\" and \"fate_flow.hook.api.permission\".","title":"1. Description"},{"location":"fate_flow_permission_management/#2-permission-authentication","text":"","title":"2. Permission authentication"},{"location":"fate_flow_permission_management/#21-flow-permission-authentication","text":"","title":"2.1 flow permission authentication"},{"location":"fate_flow_permission_management/#211-authentication-scheme","text":"The flow permission authentication scheme uses the casbin permission control framework and supports both component and dataset permissions. The configuration is as follows. hook_module : permission : fate_flow.hook.flow.permission permission : switch : true component : true dataset : true","title":"2.1.1 Authentication scheme"},{"location":"fate_flow_permission_management/#212-authorization","text":"Add privileges flow privilege grant -c fateflow/examples/permission/grant.json Options parameter name required type description party_id yes string site id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1.2 Authorization"},{"location":"fate_flow_permission_management/#213-revoke-privileges","text":"Delete permissions flow privilege delete -c fateflow/examples/permission/delete.json Options parameter name required type description party_id yes string site_id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets, \"*\" is all datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1.3 Revoke privileges"},{"location":"fate_flow_permission_management/#214-permission-query","text":"Query permissions flow privilege query -p 10000 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string Return information data object return data Sample { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1.4 Permission query"},{"location":"fate_flow_permission_management/#22-third-party-interface-privilege-authentication","text":"Third party services need to authenticate to the flow privilege interface, refer to privilege authentication service registration If the authentication fails, flow will directly return the authentication failure to the partner.","title":"2.2 Third-party interface privilege authentication"},{"location":"fate_flow_resource_management/","text":"Multi-Party Resource Coordination \u00b6 1. Description \u00b6 Resources refer to the basic engine resources, mainly CPU resources and memory resources of the compute engine, CPU resources and network resources of the transport engine, currently only the management of CPU resources of the compute engine is supported 2. Total resource allocation \u00b6 The current version does not automatically get the resource size of the base engine, so you configure it through the configuration file $FATE_PROJECT_BASE/conf/service_conf.yaml , that is, the resource size of the current engine allocated to the FATE cluster FATE Flow Server gets all the base engine information from the configuration file and registers it in the database table t_engine_registry when it starts. FATE Flow Server has been started and the resource configuration can be modified by restarting FATE Flow Server or by reloading the configuration using the command: flow server reload . total_cores = nodes * cores_per_node Example fate_on_standalone: is for executing a standalone engine on the same machine as FATE Flow Server , generally used for fast experiments, nodes is generally set to 1, cores_per_node is generally the number of CPU cores of the machine, also can be moderately over-provisioned fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll: configured based on the actual deployment of EggRoll cluster, nodes denotes the number of node manager machines, cores_per_node denotes the average number of CPU cores per node manager machine fate_on_eggroll : clustermanager : cores_per_node : 16 nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark: configured based on the resources allocated to the FATE cluster in the Spark cluster, nodes indicates the number of Spark nodes, cores_per_node indicates the average number of CPU cores per node allocated to the FATE cluster fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 Note: Please make sure that the Spark cluster allocates the corresponding amount of resources to the FATE cluster, if the Spark cluster allocates less resources than the resources configured in FATE here, then it will be possible to submit the FATE job, but when FATE Flow submits the task to the Spark cluster, the task will not actually execute because the Spark cluster has insufficient resources. Insufficient resources, the task is not actually executed 3. Job request resource configuration \u00b6 We generally use task_cores`'' and task_parallelism`' to configure job request resources, such as { \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } } The total resources requested by the job are task_cores * task_parallelism . When creating a job, FATE Flow will distribute the job to each party based on the above configuration, running role, and the engine used by the party (via $FATE_PROJECT_BASE/conf/service_conf .yaml#default_engines ), the actual parameters will be calculated as follows 4. The process of calculating the actual parameter adaptation for resource requests \u00b6 Calculate request_task_cores : guest, host. request_task_cores = task_cores arbiter, considering that the actual operation consumes very few resources: `request_task_cores request_task_cores = 1 Further calculate task_cores_per_node . task_cores_per_node\" = max(1, request_task_cores / task_nodes ) If eggroll_run or spark_run configuration resource is used in the above job_parameters , then the task_cores configuration is invalid; calculate task_cores_per_node . task_cores_per_node\" = eggroll_run[\"eggroll.session.processors.per.node\"] task_cores_per_node\" = spark_run[\"executor-cores\"] The parameter to convert to the adaptation engine (which will be presented to the compute engine for recognition when running the task). fate_on_standalone/fate_on_eggroll: eggroll_run[\"eggroll.session.processors.per.node\"] = task_cores_per_node fate_on_spark: spark_run[\"num-executors\"] = task_nodes spark_run[\"executor-cores\"] = task_cores_per_node The final calculation can be seen in the job's job_runtime_conf_on_party.json , typically in $FATE_PROJECT_BASE/jobs/$job_id/$role/$party_id/job_runtime_on_party_conf.json 5. Resource Scheduling Policy \u00b6 total_cores see total_resource_allocation apply_cores see job_request_resource_configuration , apply_cores = task_nodes * task_cores_per_node * task_parallelism If all participants apply for resources successfully (total_cores - apply_cores) > 0, then the job applies for resources successfully If not all participants apply for resources successfully, then send a resource rollback command to the participants who have applied successfully, and the job fails to apply for resources 6. Related commands \u00b6 query \u00b6 For querying fate system resources flow resource query Options Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } return \u00b6 Resources for returning a job flow resource return [ options ] Options parameter name required type description job_id yes string job_id Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Multi-Party Resource Coordination"},{"location":"fate_flow_resource_management/#multi-party-resource-coordination","text":"","title":"Multi-Party Resource Coordination"},{"location":"fate_flow_resource_management/#1-description","text":"Resources refer to the basic engine resources, mainly CPU resources and memory resources of the compute engine, CPU resources and network resources of the transport engine, currently only the management of CPU resources of the compute engine is supported","title":"1. Description"},{"location":"fate_flow_resource_management/#2-total-resource-allocation","text":"The current version does not automatically get the resource size of the base engine, so you configure it through the configuration file $FATE_PROJECT_BASE/conf/service_conf.yaml , that is, the resource size of the current engine allocated to the FATE cluster FATE Flow Server gets all the base engine information from the configuration file and registers it in the database table t_engine_registry when it starts. FATE Flow Server has been started and the resource configuration can be modified by restarting FATE Flow Server or by reloading the configuration using the command: flow server reload . total_cores = nodes * cores_per_node Example fate_on_standalone: is for executing a standalone engine on the same machine as FATE Flow Server , generally used for fast experiments, nodes is generally set to 1, cores_per_node is generally the number of CPU cores of the machine, also can be moderately over-provisioned fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll: configured based on the actual deployment of EggRoll cluster, nodes denotes the number of node manager machines, cores_per_node denotes the average number of CPU cores per node manager machine fate_on_eggroll : clustermanager : cores_per_node : 16 nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark: configured based on the resources allocated to the FATE cluster in the Spark cluster, nodes indicates the number of Spark nodes, cores_per_node indicates the average number of CPU cores per node allocated to the FATE cluster fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 Note: Please make sure that the Spark cluster allocates the corresponding amount of resources to the FATE cluster, if the Spark cluster allocates less resources than the resources configured in FATE here, then it will be possible to submit the FATE job, but when FATE Flow submits the task to the Spark cluster, the task will not actually execute because the Spark cluster has insufficient resources. Insufficient resources, the task is not actually executed","title":"2. Total resource allocation"},{"location":"fate_flow_resource_management/#3-job-request-resource-configuration","text":"We generally use task_cores`'' and task_parallelism`' to configure job request resources, such as { \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } } The total resources requested by the job are task_cores * task_parallelism . When creating a job, FATE Flow will distribute the job to each party based on the above configuration, running role, and the engine used by the party (via $FATE_PROJECT_BASE/conf/service_conf .yaml#default_engines ), the actual parameters will be calculated as follows","title":"3. Job request resource configuration"},{"location":"fate_flow_resource_management/#4-the-process-of-calculating-the-actual-parameter-adaptation-for-resource-requests","text":"Calculate request_task_cores : guest, host. request_task_cores = task_cores arbiter, considering that the actual operation consumes very few resources: `request_task_cores request_task_cores = 1 Further calculate task_cores_per_node . task_cores_per_node\" = max(1, request_task_cores / task_nodes ) If eggroll_run or spark_run configuration resource is used in the above job_parameters , then the task_cores configuration is invalid; calculate task_cores_per_node . task_cores_per_node\" = eggroll_run[\"eggroll.session.processors.per.node\"] task_cores_per_node\" = spark_run[\"executor-cores\"] The parameter to convert to the adaptation engine (which will be presented to the compute engine for recognition when running the task). fate_on_standalone/fate_on_eggroll: eggroll_run[\"eggroll.session.processors.per.node\"] = task_cores_per_node fate_on_spark: spark_run[\"num-executors\"] = task_nodes spark_run[\"executor-cores\"] = task_cores_per_node The final calculation can be seen in the job's job_runtime_conf_on_party.json , typically in $FATE_PROJECT_BASE/jobs/$job_id/$role/$party_id/job_runtime_on_party_conf.json","title":"4. The process of calculating the actual parameter adaptation for resource requests"},{"location":"fate_flow_resource_management/#5-resource-scheduling-policy","text":"total_cores see total_resource_allocation apply_cores see job_request_resource_configuration , apply_cores = task_nodes * task_cores_per_node * task_parallelism If all participants apply for resources successfully (total_cores - apply_cores) > 0, then the job applies for resources successfully If not all participants apply for resources successfully, then send a resource rollback command to the participants who have applied successfully, and the job fails to apply for resources","title":"5. Resource Scheduling Policy"},{"location":"fate_flow_resource_management/#6-related-commands","text":"","title":"6. Related commands"},{"location":"fate_flow_resource_management/#query","text":"For querying fate system resources flow resource query Options Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"fate_flow_resource_management/#return","text":"Resources for returning a job flow resource return [ options ] Options parameter name required type description job_id yes string job_id Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"return"},{"location":"fate_flow_server_operation/","text":"Server Operation \u00b6 1. Description \u00b6 Starting from version 1.7.0 , we provide some maintenance functions for FATE Flow Server , which will be further enhanced in future versions. 2. View version information \u00b6 List all relevant system version numbers flow server versions Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server versions Output: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. Reload the configuration file \u00b6 The following configuration items will take effect again after reload All configurations after # engine services in $FATE_PROJECT_BASE/conf/service_conf.yaml All configurations in $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml flow server reload Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server reload Output: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Server Operation"},{"location":"fate_flow_server_operation/#server-operation","text":"","title":"Server Operation"},{"location":"fate_flow_server_operation/#1-description","text":"Starting from version 1.7.0 , we provide some maintenance functions for FATE Flow Server , which will be further enhanced in future versions.","title":"1. Description"},{"location":"fate_flow_server_operation/#2-view-version-information","text":"List all relevant system version numbers flow server versions Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server versions Output: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2. View version information"},{"location":"fate_flow_server_operation/#3-reload-the-configuration-file","text":"The following configuration items will take effect again after reload All configurations after # engine services in $FATE_PROJECT_BASE/conf/service_conf.yaml All configurations in $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml flow server reload Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server reload Output: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3. Reload the configuration file"},{"location":"fate_flow_service_registry/","text":"Service Registry \u00b6 1. Description \u00b6 1.1 Model Registry \u00b6 FATE-Flow interacts with FATE-Serving through Apache ZooKeeper. If use_registry is enabled in the configuration, Flow registers model download URLs with ZooKeeper when it starts, and Serving can get the models through these URLs. Likewise, Serving registers its own address with ZooKeeper, which Flow will fetch to communicate with. If use_registry is not enabled, Flow will try to communicate with the set servings address in the configuration file. 1.2 High Availability \u00b6 FATE-Flow implements automatic discovery of multiple nodes in the same party by registering its own IP and port with Apache ZooKeeper. 2. Configuring the ZooKeeper service \u00b6 zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate 3. ZNode \u00b6 FATE-Flow Model Registry: /FATE-SERVICES/flow/online/transfer/providers FATE-Flow High Availability: /FATE-COMPONENTS/fate-flow FATE-Serving: /FATE-SERVICES/serving/online/publishLoad/providers","title":"Service Registry"},{"location":"fate_flow_service_registry/#service-registry","text":"","title":"Service Registry"},{"location":"fate_flow_service_registry/#1-description","text":"","title":"1. Description"},{"location":"fate_flow_service_registry/#11-model-registry","text":"FATE-Flow interacts with FATE-Serving through Apache ZooKeeper. If use_registry is enabled in the configuration, Flow registers model download URLs with ZooKeeper when it starts, and Serving can get the models through these URLs. Likewise, Serving registers its own address with ZooKeeper, which Flow will fetch to communicate with. If use_registry is not enabled, Flow will try to communicate with the set servings address in the configuration file.","title":"1.1 Model Registry"},{"location":"fate_flow_service_registry/#12-high-availability","text":"FATE-Flow implements automatic discovery of multiple nodes in the same party by registering its own IP and port with Apache ZooKeeper.","title":"1.2 High Availability"},{"location":"fate_flow_service_registry/#2-configuring-the-zookeeper-service","text":"zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate","title":"2. Configuring the ZooKeeper service"},{"location":"fate_flow_service_registry/#3-znode","text":"FATE-Flow Model Registry: /FATE-SERVICES/flow/online/transfer/providers FATE-Flow High Availability: /FATE-COMPONENTS/fate-flow FATE-Serving: /FATE-SERVICES/serving/online/publishLoad/providers","title":"3. ZNode"},{"location":"fate_flow_tracking/","text":"Data Flow Tracking \u00b6 1. Description \u00b6 2. Task output indicators \u00b6 2.1 List of metrics \u00b6 Get a list of all metrics names generated by a component task flow tracking metrics [ options ] Options parameter name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data Example flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.2 All metrics \u00b6 Get all the output metrics for a component task flow tracking metric-all [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output (limited space, only some of the metric data is shown and some values are omitted in the middle of the array type data): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. Task run parameters \u00b6 After the job is submitted, the system resolves the actual component task parameters based on the component_parameters in the job conf combined with the system default component parameters flow tracking parameters [ options ] Options parameter_name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 4. Task output data \u00b6 4.1 Download output data \u00b6 Get the component output flow tracking output-data [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl -o, --output-path yes string Path to output data Returns parameter name type description retcode int Return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o . / Output : { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory \" } 4.2 Get the name of the data table where the output data is stored \u00b6 Get the output data table name of the component flow tracking output-data-table [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 output: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } 5. Task output model \u00b6 Get the output model of a component task flow tracking output-model [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 6. Task output summary \u00b6 Each component allows to set some summary information for easy observation and analysis flow tracking get-summary [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 7. Dataset usage tracking \u00b6 Tracing source datasets and their derived datasets, such as component task output datasets 7.1 Source table query \u00b6 For querying the parent and source tables of a table flow table tracking-source [ options ] Options parameter-name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero _lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } 7.2 Querying with table tasks \u00b6 For querying the usage of a particular table flow table tracking-job [ options ] Options parameter name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"count\" : 2 , \"jobs\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" } 8. Developing the API \u00b6","title":"Data Flow Tracking"},{"location":"fate_flow_tracking/#data-flow-tracking","text":"","title":"Data Flow Tracking"},{"location":"fate_flow_tracking/#1-description","text":"","title":"1. Description"},{"location":"fate_flow_tracking/#2-task-output-indicators","text":"","title":"2. Task output indicators"},{"location":"fate_flow_tracking/#21-list-of-metrics","text":"Get a list of all metrics names generated by a component task flow tracking metrics [ options ] Options parameter name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data Example flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1 List of metrics"},{"location":"fate_flow_tracking/#22-all-metrics","text":"Get all the output metrics for a component task flow tracking metric-all [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output (limited space, only some of the metric data is shown and some values are omitted in the middle of the array type data): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.2 All metrics"},{"location":"fate_flow_tracking/#3-task-run-parameters","text":"After the job is submitted, the system resolves the actual component task parameters based on the component_parameters in the job conf combined with the system default component parameters flow tracking parameters [ options ] Options parameter_name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3. Task run parameters"},{"location":"fate_flow_tracking/#4-task-output-data","text":"","title":"4. Task output data"},{"location":"fate_flow_tracking/#41-download-output-data","text":"Get the component output flow tracking output-data [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl -o, --output-path yes string Path to output data Returns parameter name type description retcode int Return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o . / Output : { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory \" }","title":"4.1 Download output data"},{"location":"fate_flow_tracking/#42-get-the-name-of-the-data-table-where-the-output-data-is-stored","text":"Get the output data table name of the component flow tracking output-data-table [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 output: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"4.2 Get the name of the data table where the output data is stored"},{"location":"fate_flow_tracking/#5-task-output-model","text":"Get the output model of a component task flow tracking output-model [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"5. Task output model"},{"location":"fate_flow_tracking/#6-task-output-summary","text":"Each component allows to set some summary information for easy observation and analysis flow tracking get-summary [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"6. Task output summary"},{"location":"fate_flow_tracking/#7-dataset-usage-tracking","text":"Tracing source datasets and their derived datasets, such as component task output datasets","title":"7. Dataset usage tracking"},{"location":"fate_flow_tracking/#71-source-table-query","text":"For querying the parent and source tables of a table flow table tracking-source [ options ] Options parameter-name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero _lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"7.1 Source table query"},{"location":"fate_flow_tracking/#72-querying-with-table-tasks","text":"For querying the usage of a particular table flow table tracking-job [ options ] Options parameter name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"count\" : 2 , \"jobs\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"7.2 Querying with table tasks"},{"location":"fate_flow_tracking/#8-developing-the-api","text":"","title":"8. Developing the API"},{"location":"system_operational/","text":"System Operation \u00b6 1. Description \u00b6 2. Log cleaning \u00b6 2.1 Job logs (N=14 days) \u00b6 Machine: the machine where fate flow is located Directory: ${FATE_PROJECT_BASE}/fateflow/logs/ Rule: directory starts with $jobid, clean up the data before $jobid is N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /fateflow/logs/20200417* 2.2 EggRoll Session logs (N=14 days) \u00b6 Machine: eggroll node Directory: ${FATE_PROJECT_BASE}/eggroll/logs/ Rule: directory starts with $jobid, clean up data before $jobid is N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/20200417* 2.3 fateflow system logs (N=14 days) \u00b6 Machine: fate flow machine Directory: ${FATE_PROJECT_BASE}/logs/fate_flow/ Rule: Log file ends with yyyy-dd-mm, clean up data before N days Archive: log file ends with yyyy-dd-mm, archive to keep 180 days of logs Reference command. rm -rf ${ FATE_PROJECT_BASE } /logs/fate_flow/fate_flow_stat.log.2020-12-15 2.4 EggRoll system logs (N=14 days) \u00b6 Machine: eggroll deployment machine Directory: ${FATE_PROJECT_BASE}/eggroll/logs/eggroll Rule: directory is yyyy/mm/dd, clean up data before N days Archive: directory is yyyy/mm/dd, archive the logs retained for 180 days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/2020/12/15/ 3. Data cleanup \u00b6 3.1 Calculate temporary data (N=2 days) \u00b6 Machine: eggroll node Directory: ${FATE_PROJECT_BASE}/eggroll/data/IN_MEMORY Rule: namespace starts with $jobid, clean up data before $jobid is N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/IN_MEMORY/20200417* 3.2 Component output data (N=14 days) \u00b6 Machine: eggroll node Directory: ${FATE_PROJECT_BASE}/eggroll/data/LMDB Rule: namespace starts with output_data_$jobid, clean up $jobid for data before N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/LMDB/output_data_20200417*","title":"System Operation"},{"location":"system_operational/#system-operation","text":"","title":"System Operation"},{"location":"system_operational/#1-description","text":"","title":"1. Description"},{"location":"system_operational/#2-log-cleaning","text":"","title":"2. Log cleaning"},{"location":"system_operational/#21-job-logs-n14-days","text":"Machine: the machine where fate flow is located Directory: ${FATE_PROJECT_BASE}/fateflow/logs/ Rule: directory starts with $jobid, clean up the data before $jobid is N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /fateflow/logs/20200417*","title":"2.1 Job logs (N=14 days)"},{"location":"system_operational/#22-eggroll-session-logs-n14-days","text":"Machine: eggroll node Directory: ${FATE_PROJECT_BASE}/eggroll/logs/ Rule: directory starts with $jobid, clean up data before $jobid is N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/20200417*","title":"2.2 EggRoll Session logs (N=14 days)"},{"location":"system_operational/#23-fateflow-system-logs-n14-days","text":"Machine: fate flow machine Directory: ${FATE_PROJECT_BASE}/logs/fate_flow/ Rule: Log file ends with yyyy-dd-mm, clean up data before N days Archive: log file ends with yyyy-dd-mm, archive to keep 180 days of logs Reference command. rm -rf ${ FATE_PROJECT_BASE } /logs/fate_flow/fate_flow_stat.log.2020-12-15","title":"2.3 fateflow system logs (N=14 days)"},{"location":"system_operational/#24-eggroll-system-logs-n14-days","text":"Machine: eggroll deployment machine Directory: ${FATE_PROJECT_BASE}/eggroll/logs/eggroll Rule: directory is yyyy/mm/dd, clean up data before N days Archive: directory is yyyy/mm/dd, archive the logs retained for 180 days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/2020/12/15/","title":"2.4 EggRoll system logs (N=14 days)"},{"location":"system_operational/#3-data-cleanup","text":"","title":"3. Data cleanup"},{"location":"system_operational/#31-calculate-temporary-data-n2-days","text":"Machine: eggroll node Directory: ${FATE_PROJECT_BASE}/eggroll/data/IN_MEMORY Rule: namespace starts with $jobid, clean up data before $jobid is N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/IN_MEMORY/20200417*","title":"3.1 Calculate temporary data (N=2 days)"},{"location":"system_operational/#32-component-output-data-n14-days","text":"Machine: eggroll node Directory: ${FATE_PROJECT_BASE}/eggroll/data/LMDB Rule: namespace starts with output_data_$jobid, clean up $jobid for data before N days Reference command. rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/LMDB/output_data_20200417*","title":"3.2 Component output data (N=14 days)"},{"location":"third_party_service_registry/","text":"Third party service registration center \u00b6 1. Description \u00b6 fateflow supports third-party services for registration for callback scenarios All interfaces need to register the service address first, then register the interface 2. Registration \u00b6 2.1 Server registration \u00b6 uri: /v1/server/<server_name>/register Method: POST Request Parameters parameter name required type description host yes string service ip address port yes int service port Return parameters parameter name type description retcode int return code retmsg string return message 2.2 Service Registration \u00b6 uri: /v1/service/registry Method: POST Request Parameters parameter name required type description server_name yes string The name of the registered server service_name yes string service name uri yes string service uri method no string Request method, default \"POST\" protocol no string default \"http\" Return parameters parameter name type description retcode int return code retmsg string Return information 3 Interface parameter details \u00b6 3.1 ApiReader \u00b6 The ApiReader component requires third-party services to register three interfaces: upload, query, download, which are used to request feature data for offline ids. 3.1.1 upload \u00b6 Description: upload interface passes the id to the third-party service Interface registration: refer to service registration , where the service_name parameter is \"upload\". Request parameters headers: {\"Content-Type\": \"application/octet-stream\"} params: parameter_name required type description requestBody yes string json string containing feature filtering parameters - body: data stream Example request (python). with open ( id_path , \"w\" ) as f : data = MultipartEncoder ( fields = { 'file' : ( id_path , f , 'application/octet-stream' )} ) upload_registry_info = service_info . get ( \"upload\" ) response = getattr ( requests , upload_registry_info . f_method . lower (), None )( url = upload_registry_info . f_url , params = { \"requestBody\" : json . dumps ({ \"stat_month\" : \"202201\" , \"version\" : \"v1\" })}, data = data , headers = { 'Content-Type' : \"application/octet-stream\" } ) - The interface returns: parameter name type description code int return code message string Returns the message data object Returns the jobId parameter for asynchronous status queries 3.1.2 query \u00b6 Description: query interface is used to query the progress of a task. Interface registration: refer to Service Registration , where the service_name parameter is \"query\". Request parameters body parameter_name mandatory type description jobId yes string The jobId returned by upload interface returns: parameter name type description code int Return code message string Return message status string Task status 3.1.3 download \u00b6 Description: query interface for querying the progress of the task Interface registration: refer to Service Registration , where the service_name parameter is \"download\". Request parameters params parameter_name mandatory type description requestBody is string json string containing \"jobId\" Interface Return: Feature data stream 3.2 Authentication \u00b6 3.2.1 Client authentication (client_authentication) \u00b6 Description: Client authentication is used to authenticate client requests Interface Registration: Refer to Service Registration , where the service_name parameter is \"client_authentication\". Request parameters. body parameter_name required type description full_path yes string request path headers yes string request headers form no object request body Interface Return: parameter name type description code int return code msg string return message 3.2.2 Site Authentication \u00b6 3.2.2.1 signature \u00b6 Description: Before requesting another site, fate flow will call the signature interface to get the signature and put it in the request header Interface registration: Refer to Service Registration , where the service_name parameter is \"signature\". Request parameters. body parameter_name mandatory type description party_id yes string site id body yes object request body Interface Return: parameter name type description code int return code site_signature string signature 3.2.2.2 site_authentication \u00b6 Description: Used to authenticate requests from other fate sites. Interface registration: refer to Service Registration , where the service_name parameter is \"site_authentication\". Request parameters. body parameter_name required type description src_party_id yes string Requesting party site id site_signature yes string signature body yes object request body Interface Return: parameter name type description code int return code msg string return message 3.3 permission \u00b6 Description: Authentication of requests from other sites Interface registration: refer to service registration , where the service_name parameter is \"permission\". Request parameters body parameter_name mandatory type description src_role yes string Requesting party role src_party_id yes string Requesting party partyid initiator no object initiator information roles no object All participant information component_list yes object Component list dataset_list yes object dataset_list run_time_conf no object job conf dsl no object job dsl component_parameters no object component_parameters interface returns: parameter_name type description code int return_code msg string return message","title":"Third party service registry"},{"location":"third_party_service_registry/#third-party-service-registration-center","text":"","title":"Third party service registration center"},{"location":"third_party_service_registry/#1-description","text":"fateflow supports third-party services for registration for callback scenarios All interfaces need to register the service address first, then register the interface","title":"1. Description"},{"location":"third_party_service_registry/#2-registration","text":"","title":"2. Registration"},{"location":"third_party_service_registry/#21-server-registration","text":"uri: /v1/server/<server_name>/register Method: POST Request Parameters parameter name required type description host yes string service ip address port yes int service port Return parameters parameter name type description retcode int return code retmsg string return message","title":"2.1 Server registration"},{"location":"third_party_service_registry/#22-service-registration","text":"uri: /v1/service/registry Method: POST Request Parameters parameter name required type description server_name yes string The name of the registered server service_name yes string service name uri yes string service uri method no string Request method, default \"POST\" protocol no string default \"http\" Return parameters parameter name type description retcode int return code retmsg string Return information","title":"2.2 Service Registration"},{"location":"third_party_service_registry/#3-interface-parameter-details","text":"","title":"3 Interface parameter details"},{"location":"third_party_service_registry/#31-apireader","text":"The ApiReader component requires third-party services to register three interfaces: upload, query, download, which are used to request feature data for offline ids.","title":"3.1 ApiReader"},{"location":"third_party_service_registry/#311-upload","text":"Description: upload interface passes the id to the third-party service Interface registration: refer to service registration , where the service_name parameter is \"upload\". Request parameters headers: {\"Content-Type\": \"application/octet-stream\"} params: parameter_name required type description requestBody yes string json string containing feature filtering parameters - body: data stream Example request (python). with open ( id_path , \"w\" ) as f : data = MultipartEncoder ( fields = { 'file' : ( id_path , f , 'application/octet-stream' )} ) upload_registry_info = service_info . get ( \"upload\" ) response = getattr ( requests , upload_registry_info . f_method . lower (), None )( url = upload_registry_info . f_url , params = { \"requestBody\" : json . dumps ({ \"stat_month\" : \"202201\" , \"version\" : \"v1\" })}, data = data , headers = { 'Content-Type' : \"application/octet-stream\" } ) - The interface returns: parameter name type description code int return code message string Returns the message data object Returns the jobId parameter for asynchronous status queries","title":"3.1.1 upload"},{"location":"third_party_service_registry/#312-query","text":"Description: query interface is used to query the progress of a task. Interface registration: refer to Service Registration , where the service_name parameter is \"query\". Request parameters body parameter_name mandatory type description jobId yes string The jobId returned by upload interface returns: parameter name type description code int Return code message string Return message status string Task status","title":"3.1.2 query"},{"location":"third_party_service_registry/#313-download","text":"Description: query interface for querying the progress of the task Interface registration: refer to Service Registration , where the service_name parameter is \"download\". Request parameters params parameter_name mandatory type description requestBody is string json string containing \"jobId\" Interface Return: Feature data stream","title":"3.1.3 download"},{"location":"third_party_service_registry/#32-authentication","text":"","title":"3.2 Authentication"},{"location":"third_party_service_registry/#321-client-authentication-client_authentication","text":"Description: Client authentication is used to authenticate client requests Interface Registration: Refer to Service Registration , where the service_name parameter is \"client_authentication\". Request parameters. body parameter_name required type description full_path yes string request path headers yes string request headers form no object request body Interface Return: parameter name type description code int return code msg string return message","title":"3.2.1 Client authentication (client_authentication)"},{"location":"third_party_service_registry/#322-site-authentication","text":"","title":"3.2.2 Site Authentication"},{"location":"third_party_service_registry/#3221-signature","text":"Description: Before requesting another site, fate flow will call the signature interface to get the signature and put it in the request header Interface registration: Refer to Service Registration , where the service_name parameter is \"signature\". Request parameters. body parameter_name mandatory type description party_id yes string site id body yes object request body Interface Return: parameter name type description code int return code site_signature string signature","title":"3.2.2.1 signature"},{"location":"third_party_service_registry/#3222-site_authentication","text":"Description: Used to authenticate requests from other fate sites. Interface registration: refer to Service Registration , where the service_name parameter is \"site_authentication\". Request parameters. body parameter_name required type description src_party_id yes string Requesting party site id site_signature yes string signature body yes object request body Interface Return: parameter name type description code int return code msg string return message","title":"3.2.2.2 site_authentication"},{"location":"third_party_service_registry/#33-permission","text":"Description: Authentication of requests from other sites Interface registration: refer to service registration , where the service_name parameter is \"permission\". Request parameters body parameter_name mandatory type description src_role yes string Requesting party role src_party_id yes string Requesting party partyid initiator no object initiator information roles no object All participant information component_list yes object Component list dataset_list yes object dataset_list run_time_conf no object job conf dsl no object job dsl component_parameters no object component_parameters interface returns: parameter_name type description code int return_code msg string return message","title":"3.3 permission"},{"location":"cli/checkpoint/","text":"Checkpoint \u00b6 list \u00b6 List checkpoints. flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] } get \u00b6 Get checkpoint information. flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> Example Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name step_index --step-index Yes Step index, cannot be used with step_name step_name --step-name Yes Step name, cannot be used with step_index Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"Checkpoint"},{"location":"cli/checkpoint/#checkpoint","text":"","title":"Checkpoint"},{"location":"cli/checkpoint/#list","text":"List checkpoints. flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] }","title":"list"},{"location":"cli/checkpoint/#get","text":"Get checkpoint information. flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> Example Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role No Party role party_id -p --party-id No Party ID component_name -cpn --component-name No Component name step_index --step-index Yes Step index, cannot be used with step_name step_name --step-name Yes Step name, cannot be used with step_index Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"get"},{"location":"cli/data/","text":"Data \u00b6 upload \u00b6 Used to upload the input data for the modeling task to the storage system supported by fate flow data upload -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description file yes string data storage path id_delimiter yes string Data separator, e.g. \",\" head no int Whether the data has a table header partition yes int Number of data partitions storage_engine no string storage engine type, default \"EGGROLL\", also support \"HDFS\", \"LOCALFS\", \"HIVE\", etc. namespace yes string table namespace table_name yes string table name storage_address no object The storage address of the corresponding storage engine is required use_local_data no int The default is 1, which means use the data from the client's machine; 0 means use the data from the fate flow service's machine. drop no int Whether to overwrite uploads extend_sid no bool Whether to add a new column for uuid id, default False auto_increasing_sid no bool Whether the new id column is self-increasing (will only work if extend_sid is True), default False mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, passing in the meta parameter will generate anonymous information about the feature. Example eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } upload-history \u00b6 Used to query upload table history. flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID Options parameter name required type description -l --limit no int Number of records to return. (default: 10) -j --job_id no string Job ID download \u00b6 Brief description: Used to download data from within the fate storage engine to file format data flow data download -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description output_path yes string download_path table_name yes string fate table name namespace yes int fate table namespace Example: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } writer \u00b6 Brief description: Used to download data from the fate storage engine to the external engine or to save data as a new table flow data writer -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description table_name yes string fate table name namespace yes int fate table namespace storage_engine no string Storage type, e.g., MYSQL address no object storage_address output_namespace no string Save as a table namespace for fate output_name no string Save as fate's table name **Note: storage_engine, address are combined parameters that provide storage to the specified engine. output_namespace, output_name are also combined parameters, providing the function to save as a new table of the same engine** Example: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } return parameter name type description jobId string job id retcode int return code retmsg string return information data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Data"},{"location":"cli/data/#data","text":"","title":"Data"},{"location":"cli/data/#upload","text":"Used to upload the input data for the modeling task to the storage system supported by fate flow data upload -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description file yes string data storage path id_delimiter yes string Data separator, e.g. \",\" head no int Whether the data has a table header partition yes int Number of data partitions storage_engine no string storage engine type, default \"EGGROLL\", also support \"HDFS\", \"LOCALFS\", \"HIVE\", etc. namespace yes string table namespace table_name yes string table name storage_address no object The storage address of the corresponding storage engine is required use_local_data no int The default is 1, which means use the data from the client's machine; 0 means use the data from the fate flow service's machine. drop no int Whether to overwrite uploads extend_sid no bool Whether to add a new column for uuid id, default False auto_increasing_sid no bool Whether the new id column is self-increasing (will only work if extend_sid is True), default False mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, passing in the meta parameter will generate anonymous information about the feature. Example eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"upload"},{"location":"cli/data/#upload-history","text":"Used to query upload table history. flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID Options parameter name required type description -l --limit no int Number of records to return. (default: 10) -j --job_id no string Job ID","title":"upload-history"},{"location":"cli/data/#download","text":"Brief description: Used to download data from within the fate storage engine to file format data flow data download -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description output_path yes string download_path table_name yes string fate table name namespace yes int fate table namespace Example: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } return parameters parameter name type description jobId string job id retcode int return code retmsg string return message data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"download"},{"location":"cli/data/#writer","text":"Brief description: Used to download data from the fate storage engine to the external engine or to save data as a new table flow data writer -c ${ conf_path } Note: conf_path is the parameter path, the specific parameters are as follows Options parameter name required type description table_name yes string fate table name namespace yes int fate table namespace storage_engine no string Storage type, e.g., MYSQL address no object storage_address output_namespace no string Save as a table namespace for fate output_name no string Save as fate's table name **Note: storage_engine, address are combined parameters that provide storage to the specified engine. output_namespace, output_name are also combined parameters, providing the function to save as a new table of the same engine** Example: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } return parameter name type description jobId string job id retcode int return code retmsg string return information data object return data Example { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"writer"},{"location":"cli/job/","text":"Job \u00b6 submit \u00b6 Build a federated learning job with two configuration files: job dsl and job conf, and submit it to the scheduler for execution flow job submit [ options ] Options parameter name required type description -d, --dsl-path yes string path to job dsl -c, --conf-path yes string job conf's path Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data data.dsl_path string The path to the actual running dsl configuration generated by the system based on the submitted dsl content data.runtime_conf_on_party_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.dsl_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.board_url string fateboard view address data.model_info dict Model identification information Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } rerun \u00b6 Rerun a job flow job rerun [ options ] Options | parameter name | required | type | description | | :------------- | :------- | :--- | ----------- |------- | | -j, --job-id | yes | string | job id path | | --cpn, --component-name | no | string | Specifies which component to rerun from, unspecified components will not be executed if they have no upstream dependencies on the specified component; if not specified, the entire job will be rerun | | --force | no | bool | The job will be rerun even if it succeeds; if not specified, the job will be skipped if it succeeds | Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data Example flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force parameter-update \u00b6 Update the job parameters flow job parameter-update [ options ] Options parameter-name required type description -j, --job-id yes string job id path -c, --conf-path yes string The contents of the job conf that needs to be updated, no need to fill in parameters that don't need to be updated Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict Returns the updated job conf Example Assuming that the job is updated with some of the execution parameters of the hetero_lr_0 component, the configuration file is as follows. { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } Execution of the following command takes effect. flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json Execute the following command to rerun. flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force stop \u00b6 Cancels or terminates the specified job Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id yes Job ID Example flow job stop -j $JOB_ID query \u00b6 Retrieve task information. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID view \u00b6 Retrieve the job data view. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job view -j $JOB_ID -s complete config \u00b6 Download the configuration file for the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role yes role 3 party_id -p --party_id yes Party ID 4 output_path -o --output-path yes output directory Example flow job config -j $JOB_ID -r host -p 10000 --output-path . /examples/ log \u00b6 Download the log file of the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 output_path -o --output-path yes output directory Example flow job log -j JOB_ID --output-path . /examples/ list \u00b6 Show the list of jobs. Options number parameters short-format long-format required parameters parameter description 1 limit -l -limit no Returns the number limit (default: 10) Example flow job list flow job list -l 30 dsl \u00b6 Predictive DSL file generator. Options number parameters short-format long-format required parameters parameter description 1 cpn_list -cpn-list No List of user-specified component names 2 cpn_path -cpn-path No User-specified path to a file with a list of component names 3 train_dsl_path -train-dsl-path yes path to the training dsl file 4 output_path -o --output-path no output directory path Example flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow /examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/","title":"Job"},{"location":"cli/job/#job","text":"","title":"Job"},{"location":"cli/job/#submit","text":"Build a federated learning job with two configuration files: job dsl and job conf, and submit it to the scheduler for execution flow job submit [ options ] Options parameter name required type description -d, --dsl-path yes string path to job dsl -c, --conf-path yes string job conf's path Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data data.dsl_path string The path to the actual running dsl configuration generated by the system based on the submitted dsl content data.runtime_conf_on_party_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.dsl_path string The system-generated path to the actual running conf configuration for each party based on the submitted conf content data.board_url string fateboard view address data.model_info dict Model identification information Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"submit"},{"location":"cli/job/#rerun","text":"Rerun a job flow job rerun [ options ] Options | parameter name | required | type | description | | :------------- | :------- | :--- | ----------- |------- | | -j, --job-id | yes | string | job id path | | --cpn, --component-name | no | string | Specifies which component to rerun from, unspecified components will not be executed if they have no upstream dependencies on the specified component; if not specified, the entire job will be rerun | | --force | no | bool | The job will be rerun even if it succeeds; if not specified, the job will be skipped if it succeeds | Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict return data Example flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force","title":"rerun"},{"location":"cli/job/#parameter-update","text":"Update the job parameters flow job parameter-update [ options ] Options parameter-name required type description -j, --job-id yes string job id path -c, --conf-path yes string The contents of the job conf that needs to be updated, no need to fill in parameters that don't need to be updated Returns parameter name type description retcode int return code retmsg string return message jobId string Job ID data dict Returns the updated job conf Example Assuming that the job is updated with some of the execution parameters of the hetero_lr_0 component, the configuration file is as follows. { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } Execution of the following command takes effect. flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json Execute the following command to rerun. flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force","title":"parameter-update"},{"location":"cli/job/#stop","text":"Cancels or terminates the specified job Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id yes Job ID Example flow job stop -j $JOB_ID","title":"stop"},{"location":"cli/job/#query","text":"Retrieve task information. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID","title":"query"},{"location":"cli/job/#view","text":"Retrieve the job data view. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 status -s --status No Task status Example flow job view -j $JOB_ID -s complete","title":"view"},{"location":"cli/job/#config","text":"Download the configuration file for the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 role -r --role yes role 3 party_id -p --party_id yes Party ID 4 output_path -o --output-path yes output directory Example flow job config -j $JOB_ID -r host -p 10000 --output-path . /examples/","title":"config"},{"location":"cli/job/#log","text":"Download the log file of the specified job to the specified directory. Options number parameters short-format long-format required parameters parameter description 1 job_id -j --job_id yes Job ID 2 output_path -o --output-path yes output directory Example flow job log -j JOB_ID --output-path . /examples/","title":"log"},{"location":"cli/job/#list","text":"Show the list of jobs. Options number parameters short-format long-format required parameters parameter description 1 limit -l -limit no Returns the number limit (default: 10) Example flow job list flow job list -l 30","title":"list"},{"location":"cli/job/#dsl","text":"Predictive DSL file generator. Options number parameters short-format long-format required parameters parameter description 1 cpn_list -cpn-list No List of user-specified component names 2 cpn_path -cpn-path No User-specified path to a file with a list of component names 3 train_dsl_path -train-dsl-path yes path to the training dsl file 4 output_path -o --output-path no output directory path Example flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow /examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/ test_hetero_lr_job_dsl.json -o fate_flow/examples/","title":"dsl"},{"location":"cli/key/","text":"Key \u00b6 query \u00b6 Query the public key information of our or partner's fate site flow key query -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\ nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+ VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/ gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n /wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } save \u00b6 Used to save other fate site public key information, that is, for cooperation with other sites flow key save -c fateflow/examples/key/save_public_key.json Options parameters short format long format required type description conf_path -c -conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter name required type description party_id yes string site id key yes string site public key return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 Delete the partner site public key, i.e. cancel the partnership flow key delete -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Key"},{"location":"cli/key/#key","text":"","title":"Key"},{"location":"cli/key/#query","text":"Query the public key information of our or partner's fate site flow key query -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\ nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+ VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/ gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n /wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"cli/key/#save","text":"Used to save other fate site public key information, that is, for cooperation with other sites flow key save -c fateflow/examples/key/save_public_key.json Options parameters short format long format required type description conf_path -c -conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter name required type description party_id yes string site id key yes string site public key return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"save"},{"location":"cli/key/#delete","text":"Delete the partner site public key, i.e. cancel the partnership flow key delete -p 9999 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"cli/model/","text":"Model \u00b6 load \u00b6 Load a model generated by deploy to Fate-Serving. flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path Yes Config file path job_id -j --job-id Yes Job ID Example { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 Bind a model generated by deploy to Fate-Serving. flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path job_id -j --job-id Yes Job ID Example { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" } import \u00b6 Import the model from a file or storage engine. flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path from_database --from-database Yes Import the model from storage engine Example { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } export \u00b6 Export the model to a file or storage engine. flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path to_database --to-database Yes Export the model to storage engine Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } migrate \u00b6 Migrate the model. flow model migrate -c examples/model/migrate_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path Example { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } tag-list \u00b6 List tags of the model. flow model tag-list -j <job_id> Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag-model \u00b6 Add or remove a tag from the model. flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag_name -t --tag-name No Tag name remove --remove Yes Remove the tag deploy \u00b6 Configure predict DSL. flow model deploy --model-id <model_id> --model-version <model_version> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version cpn_list --cpn-list Yes Components list cpn_path --cpn-path Yes Load components list from a file dsl_path --dsl-path Yes Predict DSL file path cpn_step_index --cpn-step-index Yes Specify a checkpoint model to replace the pipeline model Use : to separate component name and step index E.g. --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name Yes Specify a checkpoint model to replace the pipeline model. Use : to separate component name and step name E.g. --cpn-step-name cpn_b:foobar Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } } get-predict-dsl \u00b6 Get predict DSL of the model. flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path get-predict-conf \u00b6 Get the template of predict config. flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path get-model-info \u00b6 Get model information. flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role Yes Party role party_id -p --party-id Yes Party ID detail --detail Yes Display detailed information homo-convert \u00b6 Convert trained homogenous model to the format of another ML framework. flow model homo-convert -c examples/model/homo_convert_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path homo-deploy \u00b6 Deploy trained homogenous model to a target online serving system. Currently the supported target serving system is KFServing. flow model homo-deploy -c examples/model/homo_deploy_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path","title":"Model"},{"location":"cli/model/#model","text":"","title":"Model"},{"location":"cli/model/#load","text":"Load a model generated by deploy to Fate-Serving. flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path Yes Config file path job_id -j --job-id Yes Job ID Example { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"load"},{"location":"cli/model/#bind","text":"Bind a model generated by deploy to Fate-Serving. flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path job_id -j --job-id Yes Job ID Example { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" }","title":"bind"},{"location":"cli/model/#import","text":"Import the model from a file or storage engine. flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path from_database --from-database Yes Import the model from storage engine Example { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"import"},{"location":"cli/model/#export","text":"Export the model to a file or storage engine. flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path to_database --to-database Yes Export the model to storage engine Example { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"export"},{"location":"cli/model/#migrate","text":"Migrate the model. flow model migrate -c examples/model/migrate_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path Example { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The Config of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"migrate"},{"location":"cli/model/#tag-list","text":"List tags of the model. flow model tag-list -j <job_id> Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID","title":"tag-list"},{"location":"cli/model/#tag-model","text":"Add or remove a tag from the model. flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove Options Parameter Short Flag Long Flag Optional Description job_id -j --job_id No Job ID tag_name -t --tag-name No Tag name remove --remove Yes Remove the tag","title":"tag-model"},{"location":"cli/model/#deploy","text":"Configure predict DSL. flow model deploy --model-id <model_id> --model-version <model_version> Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version cpn_list --cpn-list Yes Components list cpn_path --cpn-path Yes Load components list from a file dsl_path --dsl-path Yes Predict DSL file path cpn_step_index --cpn-step-index Yes Specify a checkpoint model to replace the pipeline model Use : to separate component name and step index E.g. --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name Yes Specify a checkpoint model to replace the pipeline model. Use : to separate component name and step name E.g. --cpn-step-name cpn_b:foobar Example { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } }","title":"deploy"},{"location":"cli/model/#get-predict-dsl","text":"Get predict DSL of the model. flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path","title":"get-predict-dsl"},{"location":"cli/model/#get-predict-conf","text":"Get the template of predict config. flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version output_path -o --output-path No Output path","title":"get-predict-conf"},{"location":"cli/model/#get-model-info","text":"Get model information. flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail Options Parameter Short Flag Long Flag Optional Description model_id --model-id No Model ID model_version --model-version No Model version role -r --role Yes Party role party_id -p --party-id Yes Party ID detail --detail Yes Display detailed information","title":"get-model-info"},{"location":"cli/model/#homo-convert","text":"Convert trained homogenous model to the format of another ML framework. flow model homo-convert -c examples/model/homo_convert_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path","title":"homo-convert"},{"location":"cli/model/#homo-deploy","text":"Deploy trained homogenous model to a target online serving system. Currently the supported target serving system is KFServing. flow model homo-deploy -c examples/model/homo_deploy_model.json Options Parameter Short Flag Long Flag Optional Description conf_path -c --conf-path No Config file path","title":"homo-deploy"},{"location":"cli/privilege/","text":"Privilege \u00b6 grant \u00b6 Add privileges flow privilege grant -c fateflow/examples/permission/grant.json Options parameter name required type description party_id yes string site id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 Delete permissions flow privilege delete -c fateflow/examples/permission/delete.json Options parameter name required type description party_id yes string site_id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets, \"*\" is all datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" } query \u00b6 Query permissions flow privilege query -p 10000 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string Return information data object return data Sample { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Privilege"},{"location":"cli/privilege/#privilege","text":"","title":"Privilege"},{"location":"cli/privilege/#grant","text":"Add privileges flow privilege grant -c fateflow/examples/permission/grant.json Options parameter name required type description party_id yes string site id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"grant"},{"location":"cli/privilege/#delete","text":"Delete permissions flow privilege delete -c fateflow/examples/permission/delete.json Options parameter name required type description party_id yes string site_id component no string component name, can be split by \",\" for multiple components, \"*\" for all components dataset no object list of datasets, \"*\" is all datasets sample { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } return parameter name type description retcode int return code retmsg string return message Sample { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"cli/privilege/#query","text":"Query permissions flow privilege query -p 10000 Options parameters short-format long-format required type description party_id -p --party-id yes string site id returns parameter name type description retcode int return-code retmsg string Return information data object return data Sample { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"cli/provider/","text":"Provider \u00b6 list \u00b6 List all current component providers and information about the components they provide flow provider list [ options ] Options Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e Example output: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Contains the name , version number , codepath , list of provided components register \u00b6 Register a component provider flow provider register [ options ] Options \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f Example flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json conf: { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } output: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Provider"},{"location":"cli/provider/#provider","text":"","title":"Provider"},{"location":"cli/provider/#list","text":"List all current component providers and information about the components they provide flow provider list [ options ] Options Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e Example output: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Contains the name , version number , codepath , list of provided components","title":"list"},{"location":"cli/provider/#register","text":"Register a component provider flow provider register [ options ] Options \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 Returns \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f Example flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json conf: { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } output: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"register"},{"location":"cli/resource/","text":"Resource \u00b6 query \u00b6 For querying fate system resources flow resource query Options Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } return \u00b6 Resources for returning a job flow resource return [ options ] Options parameter name required type description job_id yes string job_id Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Resource"},{"location":"cli/resource/#resource","text":"","title":"Resource"},{"location":"cli/resource/#query","text":"For querying fate system resources flow resource query Options Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"cli/resource/#return","text":"Resources for returning a job flow resource return [ options ] Options parameter name required type description job_id yes string job_id Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"return"},{"location":"cli/server/","text":"Server \u00b6 versions \u00b6 List all relevant system version numbers flow server versions Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server versions Output: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } reload \u00b6 The following configuration items will take effect again after reload All configurations after # engine services in $FATE_PROJECT_BASE/conf/service_conf.yaml All configurations in $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml flow server reload Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server reload Output: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Server"},{"location":"cli/server/#server","text":"","title":"Server"},{"location":"cli/server/#versions","text":"List all relevant system version numbers flow server versions Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server versions Output: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"versions"},{"location":"cli/server/#reload","text":"The following configuration items will take effect again after reload All configurations after # engine services in $FATE_PROJECT_BASE/conf/service_conf.yaml All configurations in $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml flow server reload Options None Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow server reload Output: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"reload"},{"location":"cli/table/","text":"Table \u00b6 info \u00b6 Query information about the fate table (real storage address, number, schema, etc.) flow table info [ options ] options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns | parameter name | type | description | | :------ | :----- | -------- | | retcode | int | return code | | retmsg | string | return information | | data | object | return data | Sample { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exists\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 You can delete table data with table delete flow table delete [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return message data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 Real storage addresses can be mapped to fate storage tables via table bind flow table bind [ options ] options parameters short format long format required type description conf_path -c --conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter_name required type description name yes string fate table name namespace yes string fate table namespace engine yes string storage engine, supports \"HDFS\", \"MYSQL\", \"PATH\" yes object real storage address drop no int Overwrite previous information head no int Whether there is a data table header id_delimiter no string Data separator id_column no string id field feature_column no array feature_field mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, if the meta parameter is passed in during the table bind phase, no anonymous information about the feature is generated directly. The feature anonymization information of the original data will be updated after the data has passed through the reader component once Sample hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } return parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } disable \u00b6 Tables can be made unavailable by table disable flow table disable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } enable \u00b6 Tables can be made available with table enable flow table enable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } disable-delete \u00b6 Tables that are currently unavailable can be deleted with disable-delete flow table disable-delete return parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Table"},{"location":"cli/table/#table","text":"","title":"Table"},{"location":"cli/table/#info","text":"Query information about the fate table (real storage address, number, schema, etc.) flow table info [ options ] options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns | parameter name | type | description | | :------ | :----- | -------- | | retcode | int | return code | | retmsg | string | return information | | data | object | return data | Sample { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exists\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"info"},{"location":"cli/table/#delete","text":"You can delete table data with table delete flow table delete [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return message data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"cli/table/#bind","text":"Real storage addresses can be mapped to fate storage tables via table bind flow table bind [ options ] options parameters short format long format required type description conf_path -c --conf-path yes string configuration-path Note: conf_path is the parameter path, the specific parameters are as follows parameter_name required type description name yes string fate table name namespace yes string fate table namespace engine yes string storage engine, supports \"HDFS\", \"MYSQL\", \"PATH\" yes object real storage address drop no int Overwrite previous information head no int Whether there is a data table header id_delimiter no string Data separator id_column no string id field feature_column no array feature_field mete information parameter name required type description input_format no string The format of the data (danse, svmlight, tag:value), used to determine delimiter no string The data separator, default \",\" tag_with_value no bool Valid for tag data format, whether to carry value tag_value_delimiter no string tag:value data separator, default \":\" with_match_id no bool Whether or not to carry match id with_match_id no object The name of the id column, effective when extend_sid is enabled, e.g., [\"email\", \"phone\"] id_range no object For tag/svmlight format data, which columns are ids exclusive_data_type no string The format of the special type data columns data_type no string Column data type, default \"float64 with_label no bool Whether to have a label, default False label_name no string The name of the label, default \"y\" label_type no string Label type, default \"int\" In version 1.9.0 and later, if the meta parameter is passed in during the table bind phase, no anonymous information about the feature is generated directly. The feature anonymization information of the original data will be updated after the data has passed through the reader component once Sample hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } return parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"bind"},{"location":"cli/table/#disable","text":"Tables can be made unavailable by table disable flow table disable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable"},{"location":"cli/table/#enable","text":"Tables can be made available with table enable flow table enable [ options ] Options parameters short-format long-format required type description table_name -t --table-name yes string fate table name namespace -n --namespace yes string fate table namespace returns parameter name type description retcode int return code retmsg string return information data object return data Sample { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"enable"},{"location":"cli/table/#disable-delete","text":"Tables that are currently unavailable can be deleted with disable-delete flow table disable-delete return parameter name type description retcode int return-code retmsg string return information data object return data Sample { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable-delete"},{"location":"cli/tag/","text":"Tag \u00b6 create \u00b6 Creates a label. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 tag_parameter_introduction -d --tag-desc no tag_introduction Example flow tag create -t tag1 -d \"This is the parameter description of tag1.\" flow tag create -t tag2 update \u00b6 Update the tag information. Options number parameters short format long format required parameters parameter description 1 tag_name -t --tag-name yes tag_name 2 new_tag_name --new-tag-name no new-tag-name 3 new_tag_desc --new-tag-desc no new tag introduction Example flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the introduction of the new parameter.\" list \u00b6 Show the list of tags. options number parameters short-format long-format required-parameters parameter-introduction 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow tag list flow tag list -l 3 query \u00b6 Retrieve tags. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 with_model -with-model no If specified, information about models with this tag will be displayed Example flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model delete \u00b6 Delete the tag. Options number parameters short-format long-format required-parameters parameters introduction 1 tag_name -t ---tag-name yes tag_name Example flow tag delete -t tag1","title":"Tag"},{"location":"cli/tag/#tag","text":"","title":"Tag"},{"location":"cli/tag/#create","text":"Creates a label. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 tag_parameter_introduction -d --tag-desc no tag_introduction Example flow tag create -t tag1 -d \"This is the parameter description of tag1.\" flow tag create -t tag2","title":"create"},{"location":"cli/tag/#update","text":"Update the tag information. Options number parameters short format long format required parameters parameter description 1 tag_name -t --tag-name yes tag_name 2 new_tag_name --new-tag-name no new-tag-name 3 new_tag_desc --new-tag-desc no new tag introduction Example flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the introduction of the new parameter.\"","title":"update"},{"location":"cli/tag/#list","text":"Show the list of tags. options number parameters short-format long-format required-parameters parameter-introduction 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow tag list flow tag list -l 3","title":"list"},{"location":"cli/tag/#query","text":"Retrieve tags. Options number parameters short-format long-format required parameters parameter description 1 tag_name -t -tag-name yes tag_name 2 with_model -with-model no If specified, information about models with this tag will be displayed Example flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model","title":"query"},{"location":"cli/tag/#delete","text":"Delete the tag. Options number parameters short-format long-format required-parameters parameters introduction 1 tag_name -t ---tag-name yes tag_name Example flow tag delete -t tag1","title":"delete"},{"location":"cli/task/","text":"Task \u00b6 query \u00b6 Retrieve Task information Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 component_name -cpn --component_name no component_name 5 status -s --status No Task status Example flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete list \u00b6 Show the list of Tasks. Options number parameters short format long format required parameters parameter description 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow task list flow task list -l 25","title":"Task"},{"location":"cli/task/#task","text":"","title":"Task"},{"location":"cli/task/#query","text":"Retrieve Task information Options number parameters short format long format required parameters parameter description 1 job_id -j --job_id no Job ID 2 role -r --role no role 3 party_id -p --party_id no Party ID 4 component_name -cpn --component_name no component_name 5 status -s --status No Task status Example flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete","title":"query"},{"location":"cli/task/#list","text":"Show the list of Tasks. Options number parameters short format long format required parameters parameter description 1 limit -l -limit no Returns a limit on the number of results (default: 10) Example flow task list flow task list -l 25","title":"list"},{"location":"cli/tracking/","text":"Tracking \u00b6 metrics \u00b6 Get a list of all metrics names generated by a component task flow tracking metrics [ options ] Options parameter name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data Example flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } metric-all \u00b6 Get all the output metrics for a component task flow tracking metric-all [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output (limited space, only some of the metric data is shown and some values are omitted in the middle of the array type data): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } parameters \u00b6 After the job is submitted, the system resolves the actual component task parameters based on the component_parameters in the job conf combined with the system default component parameters flow tracking parameters [ options ] Options parameter_name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } output-data \u00b6 Get the component output flow tracking output-data [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl -o, --output-path yes string Path to output data Returns parameter name type description retcode int Return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o . / Output : { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory \" } output-data-table \u00b6 Get the output data table name of the component flow tracking output-data-table [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 output: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } output-model \u00b6 Get the output model of a component task flow tracking output-model [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } get-summary \u00b6 Each component allows to set some summary information for easy observation and analysis flow tracking get-summary [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-source \u00b6 For querying the parent and source tables of a table flow table tracking-source [ options ] Options parameter-name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero _lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-job \u00b6 For querying the usage of a particular table flow table tracking-job [ options ] Options parameter name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"count\" : 2 , \"jobs\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Tracking"},{"location":"cli/tracking/#tracking","text":"","title":"Tracking"},{"location":"cli/tracking/#metrics","text":"Get a list of all metrics names generated by a component task flow tracking metrics [ options ] Options parameter name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data Example flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metrics"},{"location":"cli/tracking/#metric-all","text":"Get all the output metrics for a component task flow tracking metric-all [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 Output (limited space, only some of the metric data is shown and some values are omitted in the middle of the array type data): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metric-all"},{"location":"cli/tracking/#parameters","text":"After the job is submitted, the system resolves the actual component task parameters based on the component_parameters in the job conf combined with the system default component parameters flow tracking parameters [ options ] Options parameter_name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"parameters"},{"location":"cli/tracking/#output-data","text":"Get the component output flow tracking output-data [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl -o, --output-path yes string Path to output data Returns parameter name type description retcode int Return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o . / Output : { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory \" }","title":"output-data"},{"location":"cli/tracking/#output-data-table","text":"Get the output data table name of the component flow tracking output-data-table [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 output: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-data-table"},{"location":"cli/tracking/#output-model","text":"Get the output model of a component task flow tracking output-model [ options ] options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter-name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-model"},{"location":"cli/tracking/#get-summary","text":"Each component allows to set some summary information for easy observation and analysis flow tracking get-summary [ options ] Options parameter-name required type description -j, --job-id yes string job-id -r, --role yes string participant-role -p, --partyid yes string participant-id -cpn, --component-name yes string Component name, consistent with that in job dsl Returns parameter name type description retcode int return code retmsg string return message data dict return data jobId string job id Example flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 Output: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"get-summary"},{"location":"cli/tracking/#tracking-source","text":"For querying the parent and source tables of a table flow table tracking-source [ options ] Options parameter-name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero _lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-source"},{"location":"cli/tracking/#tracking-job","text":"For querying the usage of a particular table flow table tracking-job [ options ] Options parameter name required type description name yes string fate table name namespace yes string fate table namespace Returns parameter name type description retcode int return code retmsg string return message data object return data Example { \"data\" : { \"count\" : 2 , \"jobs\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-job"},{"location":"mkdocs/","text":"Build \u00b6 use docker \u00b6 At repo root, execute docker run --rm -it -p 8000 :8000 -v ${ PWD } :/docs sagewei0/mkdocs to serve docs in http://localhost:8000 or docker run --rm -it -p 8000 :8000 -v ${ PWD } :/docs sagewei0/mkdocs build to build docs to site folder. manually \u00b6 mkdocs-material and servel plugins are needed to build this docs Fisrt, create an python virtual environment python3 -m venv \"fatedocs\" source fatedocs/bin/activate pip install -U pip And then install requirements pip install -r doc/mkdocs/requirements.txt Now, use mkdocs serve at repo root to serve docs or use mkdocs build at repo root to build docs to folder site Develop guide \u00b6 We use mkdocs-material to build our docs. Servel markdown extensions are really useful to write pretty documents such as admonitions and content-tabs . Servel plugins are introdused to makes mkdocs-material much powerful: mkdocstrings automatic documentation from sources code. We mostly use this to automatic generate params api for federatedml . awesome-pages for powerful nav rule i18n for multi-languege support mkdocs-jupyter for jupyter format support mkdocs-simple-hooks for simple plugin-in","title":"Build"},{"location":"mkdocs/#build","text":"","title":"Build"},{"location":"mkdocs/#use-docker","text":"At repo root, execute docker run --rm -it -p 8000 :8000 -v ${ PWD } :/docs sagewei0/mkdocs to serve docs in http://localhost:8000 or docker run --rm -it -p 8000 :8000 -v ${ PWD } :/docs sagewei0/mkdocs build to build docs to site folder.","title":"use docker"},{"location":"mkdocs/#manually","text":"mkdocs-material and servel plugins are needed to build this docs Fisrt, create an python virtual environment python3 -m venv \"fatedocs\" source fatedocs/bin/activate pip install -U pip And then install requirements pip install -r doc/mkdocs/requirements.txt Now, use mkdocs serve at repo root to serve docs or use mkdocs build at repo root to build docs to folder site","title":"manually"},{"location":"mkdocs/#develop-guide","text":"We use mkdocs-material to build our docs. Servel markdown extensions are really useful to write pretty documents such as admonitions and content-tabs . Servel plugins are introdused to makes mkdocs-material much powerful: mkdocstrings automatic documentation from sources code. We mostly use this to automatic generate params api for federatedml . awesome-pages for powerful nav rule i18n for multi-languege support mkdocs-jupyter for jupyter format support mkdocs-simple-hooks for simple plugin-in","title":"Develop guide"},{"location":"mkdocs/docker/","text":"Image for build FATE's documents \u00b6 This image is modified from mkdocs-meterial with some plugins embeded. Usage Mount the folder where your mkdocs.yml resides as a volume into /docs: Start development server on http://localhost:8000 docker run --rm -it -p 8000:8000 -v ${PWD}:/docs sagewei0/mkdocs Build documentation docker run --rm -it -v ${PWD}:/docs sagewei/mkdocs build Deploy documentation to GitHub Pages docker run --rm -it -v ~/.ssh:/root/.ssh -v ${PWD}:/docs sagewei0/mkdocs gh-deploy","title":"Image for build FATE's documents"},{"location":"mkdocs/docker/#image-for-build-fates-documents","text":"This image is modified from mkdocs-meterial with some plugins embeded. Usage Mount the folder where your mkdocs.yml resides as a volume into /docs: Start development server on http://localhost:8000 docker run --rm -it -p 8000:8000 -v ${PWD}:/docs sagewei0/mkdocs Build documentation docker run --rm -it -v ${PWD}:/docs sagewei/mkdocs build Deploy documentation to GitHub Pages docker run --rm -it -v ~/.ssh:/root/.ssh -v ${PWD}:/docs sagewei0/mkdocs gh-deploy","title":"Image for build FATE's documents"},{"location":"mkdocs/theme/","text":"Mostly copied from https://github.com/cirruslabs/cirrus-ci-docs/tree/master/theme","title":"Index"},{"location":"swagger/","text":"Swagger API \u00b6 SwaggerUIBundle({ url: 'swagger.yaml', dom_id: '#swagger-ui', })","title":"API"},{"location":"swagger/#swagger-api","text":"SwaggerUIBundle({ url: 'swagger.yaml', dom_id: '#swagger-ui', })","title":"Swagger API"},{"location":"template/cli_desc/","text":"\u8bf7\u6c42CLI flow \u53c2\u6570 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 -o, --output-path \u662f string \u8f93\u51fa\u6570\u636e\u7684\u5b58\u653e\u8def\u5f84 \u8fd4\u56de\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow \u8f93\u51fa:","title":"Cli desc"},{"location":"zh/configuration_instruction/","text":"\u914d\u7f6e\u8bf4\u660e \u00b6 1. \u8bf4\u660e \u00b6 \u5305\u542b FATE\u9879\u76ee \u603b\u914d\u7f6e\u4ee5\u53ca\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u914d\u7f6e 2. \u5168\u5c40\u914d\u7f6e \u00b6 \u8def\u5f84\uff1a ${FATE_PROJECT_BASE}/conf/server_conf.yaml \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 # FATEFlow\u662f\u5426\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\uff0c\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\u7684\u60c5\u51b5\u4e0b\uff0cFATEFlow\u4f1a\u6ce8\u518cFATEFlow Server\u5730\u5740\u4ee5\u53ca\u53d1\u5e03\u7684\u6a21\u578b\u4e0b\u8f7d\u5730\u5740\u5230\u6ce8\u518c\u4e2d\u5fc3\u4ee5\u4f9b\u5728\u7ebf\u7cfb\u7edfFATEServing\u4f7f\u7528\uff1b\u540c\u65f6\u4e5f\u4f1a\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6FATEServing\u5730\u5740 use_registry : false # \u662f\u5426\u542f\u7528\u66f4\u9ad8\u5b89\u5168\u7ea7\u522b\u7684\u5e8f\u5217\u5316\u6a21\u5f0f use_deserialize_safe_module : false # fate on spark\u6a21\u5f0f\u4e0b\u662f\u5426\u542f\u52a8\u4f9d\u8d56\u5206\u53d1 dependent_distribution : false # \u662f\u5426\u542f\u52a8\u5bc6\u7801\u52a0\u5bc6(\u6570\u636e\u5e93\u5bc6\u7801)\uff0c\u5f00\u542f\u540e\u914d\u7f6eencrypt_module\u548cprivate_key\u624d\u751f\u6548 encrypt_password : false # \u52a0\u5bc6\u5305\u53ca\u52a0\u5bc6\u51fd\u6570(\u201c#\u201d\u53f7\u62fc\u63a5) encrypt_module : fate_arch.common.encrypt_utils#pwdecrypt # \u52a0\u5bc6\u79c1\u94a5 private_key : # \u7ad9\u70b9id\uff0c\u7ad9\u70b9\u9274\u6743\u65f6\u9700\u8981\u914d\u7f6e party_id : # \u94a9\u5b50\u6a21\u5757\u914d\u7f6e hook_module : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u94a9\u5b50 client_authentication : fate_flow.hook.flow.client_authentication # \u7ad9\u70b9\u7aef\u8ba4\u8bc1\u94a9\u5b50 site_authentication : fate_flow.hook.flow.site_authentication # \u6743\u9650\u8ba4\u8bc1\u94a9\u5b50 permission : fate_flow.hook.flow.permission # \u9664\u4e86\u652f\u6301\u4f7f\u7528flow\u7684\u94a9\u5b50\u8fdb\u884c\u8ba4\u8bc1\u3001\u9274\u6743\uff0c\u4e5f\u652f\u6301\u4f7f\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\u6ce8\u518c\u7684\u8ba4\u8bc1\u548c\u9274\u6743\u63a5\u53e3 # \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u3001\u9274\u6743\u670d\u52a1\u6ce8\u518c\u7684\u670d\u52a1\u540d hook_server_name : # \u8ba4\u8bc1 authentication : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u914d\u7f6e client : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u5f00\u5173 switch : false http_app_key : http_secret_key : # \u7ad9\u70b9\u8ba4\u8bc1\u914d\u7f6e site : # \u8ba4\u8bc1\u5f00\u5173 switch : false # \u9274\u6743 permission : # \u9274\u6743\u5f00\u5173 switch : false # \u7ec4\u4ef6\u9274\u6743\u5f00\u5173 component : false # \u6570\u636e\u96c6\u9274\u6743\u5f00\u5173 dataset : false fateflow : # \u5fc5\u987b\u4f7f\u7528\u771f\u5b9e\u7ed1\u5b9a\u7684ip\u5730\u5740\uff0c\u907f\u514d\u56e0\u4e3a\u591a\u7f51\u5361/\u591aIP\u5f15\u53d1\u7684\u989d\u5916\u95ee\u9898 # you must set real ip address, 127.0.0.1 and 0.0.0.0 is not supported host : 127.0.0.1 http_port : 9380 grpc_port : 9360 # \u9ad8\u53ef\u7528\u6027\u65f6\u9700\u8981\u914d\u7f6enginx\u5730\u5740 nginx : host : http_port : grpc_port : # \u5b9e\u4f8bid\u9ed8\u8ba4\u4e3a{host}:{http_port}\uff0c\u53ef\u4ee5\u901a\u8fc7random_instance_id\u914d\u7f6e\u751f\u6210\u968f\u673aid random_instance_id : false # \u652f\u6301\u4f7f\u7528rollsite/nginx/fateflow\u4f5c\u4e3a\u591a\u65b9\u4efb\u52a1\u534f\u8c03\u901a\u4fe1\u4ee3\u7406 # rollsite\u652f\u6301fate on eggroll\u7684\u573a\u666f\uff0c\u4ec5\u652f\u6301grpc\u534f\u8bae\uff0c\u652f\u6301P2P\u7ec4\u7f51\u53ca\u661f\u578b\u7ec4\u7f51\u6a21\u5f0f # nginx\u652f\u6301\u6240\u6709\u5f15\u64ce\u573a\u666f\uff0c\u652f\u6301http\u4e0egrpc\u534f\u8bae\uff0c\u9ed8\u8ba4\u4e3ahttp\uff0c\u652f\u6301P2P\u7ec4\u7f51\u53ca\u661f\u578b\u7ec4\u7f51\u6a21\u5f0f # fateflow\u652f\u6301\u6240\u6709\u5f15\u64ce\u573a\u666f\uff0c\u652f\u6301http\u4e0egrpc\u534f\u8bae\uff0c\u9ed8\u8ba4\u4e3ahttp\uff0c\u4ec5\u652f\u6301P2P\u7ec4\u7f51\u6a21\u5f0f\uff0c\u4e5f\u5373\u53ea\u652f\u6301\u4e92\u76f8\u914d\u7f6e\u5bf9\u7aeffateflow\u5730\u5740 # \u683c\u5f0f(proxy: rollsite)\u8868\u793a\u4f7f\u7528rollsite\u5e76\u4f7f\u7528\u4e0b\u65b9fate_one_eggroll\u914d\u7f6e\u5927\u7c7b\u4e2d\u7684rollsite\u914d\u7f6e\uff1b\u914d\u7f6enginx\u8868\u793a\u4f7f\u7528\u4e0b\u65b9fate_one_spark\u914d\u7f6e\u5927\u7c7b\u4e2d\u7684nginx\u914d\u7f6e # \u4e5f\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u5bf9\u7aeffateflow\u7684\u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a # proxy: # name: fateflow # host: xx # http_port: xx # grpc_port: xx proxy : rollsite # support default/http/grpc protocol : default database : name : fate_flow user : fate passwd : fate host : 127.0.0.1 port : 3306 max_connections : 100 stale_timeout : 30 # \u6ce8\u518c\u4e2d\u5fc3\u5730\u5740\u53ca\u5176\u8eab\u4efd\u8ba4\u8bc1\u53c2\u6570 zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate # engine services default_engines : computing : standalone federation : standalone storage : standalone fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll : clustermanager : # eggroll nodemanager\u670d\u52a1\u6240\u5728\u673a\u5668\u7684CPU\u6838\u6570 cores_per_node : 16 # eggroll nodemanager\u670d\u52a1\u7684\u673a\u5668\u6570\u91cf nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 linkis_spark : cores_per_node : 20 nodes : 2 host : 127.0.0.1 port : 9001 token_code : MLSS python_path : /data/projects/fate/python hive : host : 127.0.0.1 port : 10000 auth_mechanism : username : password : linkis_hive : host : 127.0.0.1 port : 9001 hdfs : name_node : hdfs://fate-cluster # default / path_prefix : rabbitmq : host : 192.168.0.4 mng_port : 12345 port : 5672 user : fate password : fate # default conf/rabbitmq_route_table.yaml route_table : pulsar : host : 192.168.0.5 port : 6650 mng_port : 8080 cluster : standalone # all parties should use a same tenant tenant : fl-tenant # message ttl in minutes topic_ttl : 5 # default conf/pulsar_route_table.yaml route_table : nginx : host : 127.0.0.1 http_port : 9300 grpc_port : 9310 # external services fateboard : host : 127.0.0.1 port : 8080 # on API `/model/load` and `/model/load/do` # automatic upload models to the model store if it exists locally but does not exist in the model storage # or download models from the model store if it does not exist locally but exists in the model storage # this config will not affect API `/model/store` or `/model/restore` enable_model_store : false # \u6a21\u578b\u5bfc\u51fa(export model)\u64cd\u4f5c\u9ed8\u8ba4\u7684\u5bfc\u51fa\u5730\u5740 model_store_address : # use mysql as the model store engine # storage: mysql # database: fate_model # user: fate # password: fate # host: 127.0.0.1 # port: 3306 # other optional configs send to the engine # max_connections: 10 # stale_timeout: 10 # use redis as the model store engine # storage: redis # host: 127.0.0.1 # port: 6379 # db: 0 # password: # the expiry time of keys, in seconds. defaults None (no expiry time) # ex: # use tencent cos as model store engine storage : tencent_cos Region : SecretId : SecretKey : Bucket : # \u4e0d\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u914d\u7f6eFATE Serving Server\u7684\u5730\u5740 servings : hosts : - 127.0.0.1:8000 fatemanager : host : 127.0.0.1 port : 8001 federatedId : 0 3. FATE Flow\u914d\u7f6e \u00b6 3.1 FATE Flow Server\u914d\u7f6e \u00b6 \u8def\u5f84\uff1a ${FATE_FLOW_BASE}/python/fate_flow/settings.py \u8bf4\u660e\uff1a\u9ad8\u7ea7\u914d\u7f6e\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u505a\u6539\u52a8 \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 # FATE Flow Server\u7528\u4e8e\u591a\u65b9FATE Flow Server\u901a\u4fe1\u7684grpc server\u7684\u7ebf\u7a0b\u6c60\u5927\u5c0f\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u7b49\u4e8e\u673a\u5668CPU\u6838\u6570 GRPC_SERVER_MAX_WORKERS = None # Switch # \u4e0a\u4f20\u6570\u636e\u63a5\u53e3\u9ed8\u8ba4\u4ece\u5ba2\u6237\u7aef\u83b7\u53d6\u6570\u636e\uff0c\u8be5\u503c\u53ef\u4ee5\u5728\u63a5\u53e3\u8c03\u7528\u65f6\u4f7f\u7528use_local_data\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c UPLOAD_DATA_FROM_CLIENT = True # \u662f\u5426\u5f00\u542f\u591a\u65b9\u901a\u4fe1\u8eab\u4efd\u8ba4\u8bc1\u529f\u80fd\uff0c\u9700\u8981\u914d\u5408FATE Cloud\u4f7f\u7528 CHECK_NODES_IDENTITY = False # \u662f\u5426\u5f00\u542f\u8d44\u6e90\u9274\u6743\u529f\u80fd\uff0c\u9700\u8981\u914d\u5408FATE Cloud\u4f7f\u7528 USE_AUTHENTICATION = False # \u9ed8\u8ba4\u6388\u4e88\u7684\u8d44\u6e90\u6743\u9650 PRIVILEGE_COMMAND_WHITELIST = [] 3.2 FATE Flow \u9ed8\u8ba4\u4f5c\u4e1a\u914d\u7f6e \u00b6 \u8def\u5f84\uff1a ${FATE_FLOW_BASE}/conf/job_default_config.yaml \u8bf4\u660e\uff1a\u9ad8\u7ea7\u914d\u7f6e\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u505a\u6539\u52a8 \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 \u751f\u6548\uff1a\u4f7f\u7528flow server reload\u6216\u8005\u91cd\u542ffate flow server # component provider, relative path to get_fate_python_directory default_component_provider_path : federatedml # resource # \u603b\u8d44\u6e90\u8d85\u914d\u767e\u5206\u6bd4 total_cores_overweight_percent : 1 # 1 means no overweight total_memory_overweight_percent : 1 # 1 means no overweight # \u9ed8\u8ba4\u7684\u6bcf\u4e2a\u4f5c\u4e1a\u7684\u4efb\u52a1\u5e76\u884c\u5ea6\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:task_parallelism\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c task_parallelism : 1 # \u9ed8\u8ba4\u7684\u6bcf\u4e2a\u4f5c\u4e1a\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u4f7f\u7528\u7684CPU\u6838\u6570\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:task_cores\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c task_cores : 4 # \u6682\u65f6\u4e0d\u652f\u6301\u5185\u5b58\u8d44\u6e90\u7684\u8c03\u5ea6\uff0c\u8be5\u914d\u7f6e\u4e0d\u751f\u6548 task_memory : 0 # mb # \u4e00\u4e2a\u4f5c\u4e1a\u6700\u5927\u5141\u8bb8\u7533\u8bf7\u7684CPU\u6838\u6570\u5360\u603b\u8d44\u6e90\u6570\u91cf\u7684\u6bd4\u4f8b\uff0c\u5982\u603b\u8d44\u6e90\u4e3a10\uff0c\u6b64\u503c\u4e3a0.5\uff0c\u5219\u8868\u793a\u4e00\u4e2a\u4f5c\u4e1a\u6700\u591a\u5141\u8bb8\u7533\u8bf75\u4e2aCPU\uff0c\u4e5f\u5373task_cores * task_parallelism <= 10 * 0.5 max_cores_percent_per_job : 1 # 1 means total # scheduling # \u9ed8\u8ba4\u7684\u4f5c\u4e1a\u6267\u884c\u8d85\u65f6\u65f6\u95f4\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:timeout\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c job_timeout : 259200 # s # \u53d1\u9001\u8de8\u53c2\u4e0e\u65b9\u8c03\u5ea6\u547d\u4ee4\u6216\u8005\u72b6\u6001\u65f6\uff0c\u901a\u4fe1\u7684\u8d85\u65f6\u65f6\u95f4 remote_request_timeout : 30000 # ms # \u53d1\u9001\u8de8\u53c2\u4e0e\u65b9\u8c03\u5ea6\u547d\u4ee4\u6216\u8005\u72b6\u6001\u65f6\uff0c\u901a\u4fe1\u7684\u91cd\u8bd5\u6b21\u6570 federated_command_trys : 3 end_status_job_scheduling_time_limit : 300000 # ms end_status_job_scheduling_updates : 1 # \u9ed8\u8ba4\u81ea\u52a8\u91cd\u8bd5\u6b21\u6570, \u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:auto_retries\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c auto_retries : 0 # \u9ed8\u8ba4\u91cd\u8bd5\u6b21\u6570\u95f4\u9694 auto_retry_delay : 1 #seconds # \u9ed8\u8ba4\u7684\u591a\u65b9\u72b6\u6001\u6536\u96c6\u65b9\u5f0f\uff0c\u652f\u6301PULL\u548cPUSH\uff1b\u4e5f\u53ef\u5728\u4f5c\u4e1a\u914d\u7f6e\u6307\u5b9a\u5f53\u524d\u4f5c\u4e1a\u7684\u6536\u96c6\u6a21\u5f0f federated_status_collect_type : PUSH # upload upload_max_bytes : 104857600 # bytes #component output output_data_summary_count_limit : 100 4. FATE Board\u914d\u7f6e \u00b6 \u8def\u5f84\uff1a ${FATE_BOARD_BASE}/conf/application.properties \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 # \u670d\u52a1\u76d1\u542c\u7aef\u53e3 server.port = 8080 # fateflow\u5730\u5740\uff0c\u6307fateflow\u7684http\u7aef\u53e3\u5730\u5740 fateflow.url == http://127.0.0.1:9380 # db\u5730\u5740\uff0c\u540c\u4e0a\u8ff0\u5168\u5c40\u914d\u7f6eservice_conf.yaml\u91cc\u9762\u7684database\u914d\u7f6e fateboard.datasource.jdbc-url = jdbc:mysql://localhost:3306/fate_flow?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8 # db\u914d\u7f6e\uff0c\u540c\u4e0a\u8ff0\u5168\u5c40\u914d\u7f6eservice_conf.yaml\u91cc\u9762\u7684database\u914d\u7f6e fateboard.datasource.username = # db\u914d\u7f6e\uff0c\u540c\u4e0a\u8ff0\u5168\u5c40\u914d\u7f6eservice_conf.yaml\u91cc\u9762\u7684database\u914d\u7f6e fateboard.datasource.password = server.tomcat.max-threads = 1000 server.tomcat.max-connections = 20000 spring.servlet.multipart.max-file-size = 10MB spring.servlet.multipart.max-request-size = 100MB # \u7ba1\u7406\u5458\u8d26\u53f7\u914d\u7f6e server.board.login.username = admin server.board.login.password = admin server.ssl.key-store = classpath: server.ssl.key-store-password = server.ssl.key-password = server.ssl.key-alias = # \u5f53fateflo server\u5f00\u542fapi\u8bbf\u95ee\u9274\u6743\u65f6\uff0c\u9700\u8981\u914d\u7f6e HTTP_APP_KEY = HTTP_SECRET_KEY = 5. EggRoll \u00b6 5.1 \u7cfb\u7edf\u914d\u7f6e \u00b6 \u8def\u5f84\uff1a ${EGGROLL_HOME}/conf/eggroll.properties \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 [eggroll] # core # \u8fde\u63a5MySQL\u914d\u7f6e\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.driver.class.name = com.mysql.cj.jdbc.Driver # \u8fde\u63a5MySQL\u914d\u7f6e\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.url = jdbc:mysql://localhost:3306/eggroll_meta?useSSL=false&serverTimezone=UTC&characterEncoding=utf8&allowPublicKeyRetrieval=true # \u8fde\u63a5MySQL\u8d26\u6237\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.username = # \u8fde\u63a5MySQL\u5bc6\u7801\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.password = # \u6570\u636e\u5b58\u50a8\u76ee\u5f55 eggroll.data.dir = data/ # \u65e5\u5fd7\u5b58\u50a8\u76ee\u5f55 eggroll.logs.dir = logs/ eggroll.resourcemanager.clustermanager.host = 127.0.0.1 eggroll.resourcemanager.clustermanager.port = 4670 eggroll.resourcemanager.nodemanager.port = 4670 # python\u8def\u5f84 eggroll.resourcemanager.bootstrap.egg_pair.venv = # pythonpath, \u4e00\u822c\u9700\u8981\u6307\u5b9aeggroll\u7684python\u76ee\u5f55\u4ee5\u53cafate\u7684python\u76ee\u5f55 eggroll.resourcemanager.bootstrap.egg_pair.pythonpath = python # java\u8def\u5f84 eggroll.resourcemanager.bootstrap.egg_frame.javahome = # java\u670d\u52a1\u542f\u52a8\u53c2\u6570\uff0c\u65e0\u7279\u522b\u9700\u8981\uff0c\u65e0\u9700\u914d\u7f6e eggroll.resourcemanager.bootstrap.egg_frame.jvm.options = # \u591a\u65b9\u901a\u4fe1\u65f6\uff0cgrpc\u8fde\u63a5\u4fdd\u6301\u65f6\u95f4 eggroll.core.grpc.channel.keepalive.timeout.sec = 20 # session # \u4e00\u4e2aeggroll\u4f1a\u8bdd\u4e2d\uff0c\u6bcf\u4e2anodemanager\u542f\u52a8\u7684\u8ba1\u7b97\u8fdb\u7a0b\u6570\u91cf;\u82e5\u4f7f\u7528fate\u8fdb\u884c\u63d0\u4ea4\u4efb\u52a1\uff0c\u5219\u4f1a\u88abfate flow\u7684\u9ed8\u8ba4\u53c2\u6570\u6240\u4ee3\u66ff eggroll.session.processors.per.node = 4 # rollsite eggroll.rollsite.coordinator = webank eggroll.rollsite.host = 127.0.0.1 eggroll.rollsite.port = 9370 eggroll.rollsite.party.id = 10001 eggroll.rollsite.route.table.path = conf/route_table.json eggroll.rollsite.push.max.retry = 3 eggroll.rollsite.push.long.retry = 2 eggroll.rollsite.push.batches.per.stream = 10 eggroll.rollsite.adapter.sendbuf.size = 100000 5.2 \u8def\u7531\u8868\u914d\u7f6e \u00b6 \u8def\u5f84\uff1a ${EGGROLL_HOME}/conf/route_table.json \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u8def\u7531\u8868\u4e3b\u8981\u5206\u4e24\u4e2a\u5c42\u7ea7\u8868\u793a \u7b2c\u4e00\u7ea7\u8868\u793a\u7ad9\u70b9\uff0c\u82e5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u76ee\u6807\u7ad9\u70b9\u914d\u7f6e\uff0c\u5219\u4f7f\u7528**default** \u7b2c\u4e8c\u7ea7\u8868\u793a\u670d\u52a1\uff0c\u82e5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u76ee\u6807\u670d\u52a1\uff0c\u5219\u4f7f\u7528**default** \u7b2c\u4e8c\u7ea7\uff0c\u901a\u5e38\u5c06**default**\u8bbe\u4e3a\u672c\u65b9**rollsite**\u670d\u52a1\u5730\u5740\uff0c\u5c06**fateflow**\u8bbe\u4e3a\u672c\u65b9**fate flow server**\u670d\u52a1\u7684grpc\u5730\u5740 { \"route_table\" : { \"10001\" : { \"default\" :[ { \"port\" : 9370 , \"ip\" : \"127.0.0.1\" } ], \"fateflow\" :[ { \"port\" : 9360 , \"ip\" : \"127.0.0.1\" } ] }, \"10002\" : { \"default\" :[ { \"port\" : 9470 , \"ip\" : \"127.0.0.1\" } ] } }, \"permission\" : { \"default_allow\" : true } }","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"zh/configuration_instruction/#_1","text":"","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"zh/configuration_instruction/#1","text":"\u5305\u542b FATE\u9879\u76ee \u603b\u914d\u7f6e\u4ee5\u53ca\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u914d\u7f6e","title":"1. \u8bf4\u660e"},{"location":"zh/configuration_instruction/#2","text":"\u8def\u5f84\uff1a ${FATE_PROJECT_BASE}/conf/server_conf.yaml \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 # FATEFlow\u662f\u5426\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\uff0c\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\u7684\u60c5\u51b5\u4e0b\uff0cFATEFlow\u4f1a\u6ce8\u518cFATEFlow Server\u5730\u5740\u4ee5\u53ca\u53d1\u5e03\u7684\u6a21\u578b\u4e0b\u8f7d\u5730\u5740\u5230\u6ce8\u518c\u4e2d\u5fc3\u4ee5\u4f9b\u5728\u7ebf\u7cfb\u7edfFATEServing\u4f7f\u7528\uff1b\u540c\u65f6\u4e5f\u4f1a\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6FATEServing\u5730\u5740 use_registry : false # \u662f\u5426\u542f\u7528\u66f4\u9ad8\u5b89\u5168\u7ea7\u522b\u7684\u5e8f\u5217\u5316\u6a21\u5f0f use_deserialize_safe_module : false # fate on spark\u6a21\u5f0f\u4e0b\u662f\u5426\u542f\u52a8\u4f9d\u8d56\u5206\u53d1 dependent_distribution : false # \u662f\u5426\u542f\u52a8\u5bc6\u7801\u52a0\u5bc6(\u6570\u636e\u5e93\u5bc6\u7801)\uff0c\u5f00\u542f\u540e\u914d\u7f6eencrypt_module\u548cprivate_key\u624d\u751f\u6548 encrypt_password : false # \u52a0\u5bc6\u5305\u53ca\u52a0\u5bc6\u51fd\u6570(\u201c#\u201d\u53f7\u62fc\u63a5) encrypt_module : fate_arch.common.encrypt_utils#pwdecrypt # \u52a0\u5bc6\u79c1\u94a5 private_key : # \u7ad9\u70b9id\uff0c\u7ad9\u70b9\u9274\u6743\u65f6\u9700\u8981\u914d\u7f6e party_id : # \u94a9\u5b50\u6a21\u5757\u914d\u7f6e hook_module : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u94a9\u5b50 client_authentication : fate_flow.hook.flow.client_authentication # \u7ad9\u70b9\u7aef\u8ba4\u8bc1\u94a9\u5b50 site_authentication : fate_flow.hook.flow.site_authentication # \u6743\u9650\u8ba4\u8bc1\u94a9\u5b50 permission : fate_flow.hook.flow.permission # \u9664\u4e86\u652f\u6301\u4f7f\u7528flow\u7684\u94a9\u5b50\u8fdb\u884c\u8ba4\u8bc1\u3001\u9274\u6743\uff0c\u4e5f\u652f\u6301\u4f7f\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\u6ce8\u518c\u7684\u8ba4\u8bc1\u548c\u9274\u6743\u63a5\u53e3 # \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u3001\u9274\u6743\u670d\u52a1\u6ce8\u518c\u7684\u670d\u52a1\u540d hook_server_name : # \u8ba4\u8bc1 authentication : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u914d\u7f6e client : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u5f00\u5173 switch : false http_app_key : http_secret_key : # \u7ad9\u70b9\u8ba4\u8bc1\u914d\u7f6e site : # \u8ba4\u8bc1\u5f00\u5173 switch : false # \u9274\u6743 permission : # \u9274\u6743\u5f00\u5173 switch : false # \u7ec4\u4ef6\u9274\u6743\u5f00\u5173 component : false # \u6570\u636e\u96c6\u9274\u6743\u5f00\u5173 dataset : false fateflow : # \u5fc5\u987b\u4f7f\u7528\u771f\u5b9e\u7ed1\u5b9a\u7684ip\u5730\u5740\uff0c\u907f\u514d\u56e0\u4e3a\u591a\u7f51\u5361/\u591aIP\u5f15\u53d1\u7684\u989d\u5916\u95ee\u9898 # you must set real ip address, 127.0.0.1 and 0.0.0.0 is not supported host : 127.0.0.1 http_port : 9380 grpc_port : 9360 # \u9ad8\u53ef\u7528\u6027\u65f6\u9700\u8981\u914d\u7f6enginx\u5730\u5740 nginx : host : http_port : grpc_port : # \u5b9e\u4f8bid\u9ed8\u8ba4\u4e3a{host}:{http_port}\uff0c\u53ef\u4ee5\u901a\u8fc7random_instance_id\u914d\u7f6e\u751f\u6210\u968f\u673aid random_instance_id : false # \u652f\u6301\u4f7f\u7528rollsite/nginx/fateflow\u4f5c\u4e3a\u591a\u65b9\u4efb\u52a1\u534f\u8c03\u901a\u4fe1\u4ee3\u7406 # rollsite\u652f\u6301fate on eggroll\u7684\u573a\u666f\uff0c\u4ec5\u652f\u6301grpc\u534f\u8bae\uff0c\u652f\u6301P2P\u7ec4\u7f51\u53ca\u661f\u578b\u7ec4\u7f51\u6a21\u5f0f # nginx\u652f\u6301\u6240\u6709\u5f15\u64ce\u573a\u666f\uff0c\u652f\u6301http\u4e0egrpc\u534f\u8bae\uff0c\u9ed8\u8ba4\u4e3ahttp\uff0c\u652f\u6301P2P\u7ec4\u7f51\u53ca\u661f\u578b\u7ec4\u7f51\u6a21\u5f0f # fateflow\u652f\u6301\u6240\u6709\u5f15\u64ce\u573a\u666f\uff0c\u652f\u6301http\u4e0egrpc\u534f\u8bae\uff0c\u9ed8\u8ba4\u4e3ahttp\uff0c\u4ec5\u652f\u6301P2P\u7ec4\u7f51\u6a21\u5f0f\uff0c\u4e5f\u5373\u53ea\u652f\u6301\u4e92\u76f8\u914d\u7f6e\u5bf9\u7aeffateflow\u5730\u5740 # \u683c\u5f0f(proxy: rollsite)\u8868\u793a\u4f7f\u7528rollsite\u5e76\u4f7f\u7528\u4e0b\u65b9fate_one_eggroll\u914d\u7f6e\u5927\u7c7b\u4e2d\u7684rollsite\u914d\u7f6e\uff1b\u914d\u7f6enginx\u8868\u793a\u4f7f\u7528\u4e0b\u65b9fate_one_spark\u914d\u7f6e\u5927\u7c7b\u4e2d\u7684nginx\u914d\u7f6e # \u4e5f\u53ef\u4ee5\u76f4\u63a5\u914d\u7f6e\u5bf9\u7aeffateflow\u7684\u5730\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a # proxy: # name: fateflow # host: xx # http_port: xx # grpc_port: xx proxy : rollsite # support default/http/grpc protocol : default database : name : fate_flow user : fate passwd : fate host : 127.0.0.1 port : 3306 max_connections : 100 stale_timeout : 30 # \u6ce8\u518c\u4e2d\u5fc3\u5730\u5740\u53ca\u5176\u8eab\u4efd\u8ba4\u8bc1\u53c2\u6570 zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate # engine services default_engines : computing : standalone federation : standalone storage : standalone fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll : clustermanager : # eggroll nodemanager\u670d\u52a1\u6240\u5728\u673a\u5668\u7684CPU\u6838\u6570 cores_per_node : 16 # eggroll nodemanager\u670d\u52a1\u7684\u673a\u5668\u6570\u91cf nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 linkis_spark : cores_per_node : 20 nodes : 2 host : 127.0.0.1 port : 9001 token_code : MLSS python_path : /data/projects/fate/python hive : host : 127.0.0.1 port : 10000 auth_mechanism : username : password : linkis_hive : host : 127.0.0.1 port : 9001 hdfs : name_node : hdfs://fate-cluster # default / path_prefix : rabbitmq : host : 192.168.0.4 mng_port : 12345 port : 5672 user : fate password : fate # default conf/rabbitmq_route_table.yaml route_table : pulsar : host : 192.168.0.5 port : 6650 mng_port : 8080 cluster : standalone # all parties should use a same tenant tenant : fl-tenant # message ttl in minutes topic_ttl : 5 # default conf/pulsar_route_table.yaml route_table : nginx : host : 127.0.0.1 http_port : 9300 grpc_port : 9310 # external services fateboard : host : 127.0.0.1 port : 8080 # on API `/model/load` and `/model/load/do` # automatic upload models to the model store if it exists locally but does not exist in the model storage # or download models from the model store if it does not exist locally but exists in the model storage # this config will not affect API `/model/store` or `/model/restore` enable_model_store : false # \u6a21\u578b\u5bfc\u51fa(export model)\u64cd\u4f5c\u9ed8\u8ba4\u7684\u5bfc\u51fa\u5730\u5740 model_store_address : # use mysql as the model store engine # storage: mysql # database: fate_model # user: fate # password: fate # host: 127.0.0.1 # port: 3306 # other optional configs send to the engine # max_connections: 10 # stale_timeout: 10 # use redis as the model store engine # storage: redis # host: 127.0.0.1 # port: 6379 # db: 0 # password: # the expiry time of keys, in seconds. defaults None (no expiry time) # ex: # use tencent cos as model store engine storage : tencent_cos Region : SecretId : SecretKey : Bucket : # \u4e0d\u4f7f\u7528\u6ce8\u518c\u4e2d\u5fc3\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u914d\u7f6eFATE Serving Server\u7684\u5730\u5740 servings : hosts : - 127.0.0.1:8000 fatemanager : host : 127.0.0.1 port : 8001 federatedId : 0","title":"2. \u5168\u5c40\u914d\u7f6e"},{"location":"zh/configuration_instruction/#3-fate-flow","text":"","title":"3. FATE Flow\u914d\u7f6e"},{"location":"zh/configuration_instruction/#31-fate-flow-server","text":"\u8def\u5f84\uff1a ${FATE_FLOW_BASE}/python/fate_flow/settings.py \u8bf4\u660e\uff1a\u9ad8\u7ea7\u914d\u7f6e\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u505a\u6539\u52a8 \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 # FATE Flow Server\u7528\u4e8e\u591a\u65b9FATE Flow Server\u901a\u4fe1\u7684grpc server\u7684\u7ebf\u7a0b\u6c60\u5927\u5c0f\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u7b49\u4e8e\u673a\u5668CPU\u6838\u6570 GRPC_SERVER_MAX_WORKERS = None # Switch # \u4e0a\u4f20\u6570\u636e\u63a5\u53e3\u9ed8\u8ba4\u4ece\u5ba2\u6237\u7aef\u83b7\u53d6\u6570\u636e\uff0c\u8be5\u503c\u53ef\u4ee5\u5728\u63a5\u53e3\u8c03\u7528\u65f6\u4f7f\u7528use_local_data\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c UPLOAD_DATA_FROM_CLIENT = True # \u662f\u5426\u5f00\u542f\u591a\u65b9\u901a\u4fe1\u8eab\u4efd\u8ba4\u8bc1\u529f\u80fd\uff0c\u9700\u8981\u914d\u5408FATE Cloud\u4f7f\u7528 CHECK_NODES_IDENTITY = False # \u662f\u5426\u5f00\u542f\u8d44\u6e90\u9274\u6743\u529f\u80fd\uff0c\u9700\u8981\u914d\u5408FATE Cloud\u4f7f\u7528 USE_AUTHENTICATION = False # \u9ed8\u8ba4\u6388\u4e88\u7684\u8d44\u6e90\u6743\u9650 PRIVILEGE_COMMAND_WHITELIST = []","title":"3.1 FATE Flow Server\u914d\u7f6e"},{"location":"zh/configuration_instruction/#32-fate-flow","text":"\u8def\u5f84\uff1a ${FATE_FLOW_BASE}/conf/job_default_config.yaml \u8bf4\u660e\uff1a\u9ad8\u7ea7\u914d\u7f6e\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u505a\u6539\u52a8 \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 \u751f\u6548\uff1a\u4f7f\u7528flow server reload\u6216\u8005\u91cd\u542ffate flow server # component provider, relative path to get_fate_python_directory default_component_provider_path : federatedml # resource # \u603b\u8d44\u6e90\u8d85\u914d\u767e\u5206\u6bd4 total_cores_overweight_percent : 1 # 1 means no overweight total_memory_overweight_percent : 1 # 1 means no overweight # \u9ed8\u8ba4\u7684\u6bcf\u4e2a\u4f5c\u4e1a\u7684\u4efb\u52a1\u5e76\u884c\u5ea6\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:task_parallelism\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c task_parallelism : 1 # \u9ed8\u8ba4\u7684\u6bcf\u4e2a\u4f5c\u4e1a\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u4f7f\u7528\u7684CPU\u6838\u6570\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:task_cores\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c task_cores : 4 # \u6682\u65f6\u4e0d\u652f\u6301\u5185\u5b58\u8d44\u6e90\u7684\u8c03\u5ea6\uff0c\u8be5\u914d\u7f6e\u4e0d\u751f\u6548 task_memory : 0 # mb # \u4e00\u4e2a\u4f5c\u4e1a\u6700\u5927\u5141\u8bb8\u7533\u8bf7\u7684CPU\u6838\u6570\u5360\u603b\u8d44\u6e90\u6570\u91cf\u7684\u6bd4\u4f8b\uff0c\u5982\u603b\u8d44\u6e90\u4e3a10\uff0c\u6b64\u503c\u4e3a0.5\uff0c\u5219\u8868\u793a\u4e00\u4e2a\u4f5c\u4e1a\u6700\u591a\u5141\u8bb8\u7533\u8bf75\u4e2aCPU\uff0c\u4e5f\u5373task_cores * task_parallelism <= 10 * 0.5 max_cores_percent_per_job : 1 # 1 means total # scheduling # \u9ed8\u8ba4\u7684\u4f5c\u4e1a\u6267\u884c\u8d85\u65f6\u65f6\u95f4\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:timeout\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c job_timeout : 259200 # s # \u53d1\u9001\u8de8\u53c2\u4e0e\u65b9\u8c03\u5ea6\u547d\u4ee4\u6216\u8005\u72b6\u6001\u65f6\uff0c\u901a\u4fe1\u7684\u8d85\u65f6\u65f6\u95f4 remote_request_timeout : 30000 # ms # \u53d1\u9001\u8de8\u53c2\u4e0e\u65b9\u8c03\u5ea6\u547d\u4ee4\u6216\u8005\u72b6\u6001\u65f6\uff0c\u901a\u4fe1\u7684\u91cd\u8bd5\u6b21\u6570 federated_command_trys : 3 end_status_job_scheduling_time_limit : 300000 # ms end_status_job_scheduling_updates : 1 # \u9ed8\u8ba4\u81ea\u52a8\u91cd\u8bd5\u6b21\u6570, \u53ef\u4ee5\u5728\u63d0\u4ea4\u4f5c\u4e1a\u914d\u7f6e\u65f6\u4f7f\u7528job_parameters:auto_retries\u914d\u7f6e\u81ea\u5b9a\u4e49\u503c auto_retries : 0 # \u9ed8\u8ba4\u91cd\u8bd5\u6b21\u6570\u95f4\u9694 auto_retry_delay : 1 #seconds # \u9ed8\u8ba4\u7684\u591a\u65b9\u72b6\u6001\u6536\u96c6\u65b9\u5f0f\uff0c\u652f\u6301PULL\u548cPUSH\uff1b\u4e5f\u53ef\u5728\u4f5c\u4e1a\u914d\u7f6e\u6307\u5b9a\u5f53\u524d\u4f5c\u4e1a\u7684\u6536\u96c6\u6a21\u5f0f federated_status_collect_type : PUSH # upload upload_max_bytes : 104857600 # bytes #component output output_data_summary_count_limit : 100","title":"3.2 FATE Flow \u9ed8\u8ba4\u4f5c\u4e1a\u914d\u7f6e"},{"location":"zh/configuration_instruction/#4-fate-board","text":"\u8def\u5f84\uff1a ${FATE_BOARD_BASE}/conf/application.properties \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 # \u670d\u52a1\u76d1\u542c\u7aef\u53e3 server.port = 8080 # fateflow\u5730\u5740\uff0c\u6307fateflow\u7684http\u7aef\u53e3\u5730\u5740 fateflow.url == http://127.0.0.1:9380 # db\u5730\u5740\uff0c\u540c\u4e0a\u8ff0\u5168\u5c40\u914d\u7f6eservice_conf.yaml\u91cc\u9762\u7684database\u914d\u7f6e fateboard.datasource.jdbc-url = jdbc:mysql://localhost:3306/fate_flow?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8 # db\u914d\u7f6e\uff0c\u540c\u4e0a\u8ff0\u5168\u5c40\u914d\u7f6eservice_conf.yaml\u91cc\u9762\u7684database\u914d\u7f6e fateboard.datasource.username = # db\u914d\u7f6e\uff0c\u540c\u4e0a\u8ff0\u5168\u5c40\u914d\u7f6eservice_conf.yaml\u91cc\u9762\u7684database\u914d\u7f6e fateboard.datasource.password = server.tomcat.max-threads = 1000 server.tomcat.max-connections = 20000 spring.servlet.multipart.max-file-size = 10MB spring.servlet.multipart.max-request-size = 100MB # \u7ba1\u7406\u5458\u8d26\u53f7\u914d\u7f6e server.board.login.username = admin server.board.login.password = admin server.ssl.key-store = classpath: server.ssl.key-store-password = server.ssl.key-password = server.ssl.key-alias = # \u5f53fateflo server\u5f00\u542fapi\u8bbf\u95ee\u9274\u6743\u65f6\uff0c\u9700\u8981\u914d\u7f6e HTTP_APP_KEY = HTTP_SECRET_KEY =","title":"4. FATE Board\u914d\u7f6e"},{"location":"zh/configuration_instruction/#51","text":"\u8def\u5f84\uff1a ${EGGROLL_HOME}/conf/eggroll.properties \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u6ce8\u610f\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u672a\u88ab\u5217\u4e3e\u5982\u4e0b\u7684\u914d\u7f6e\u9879\u5c5e\u4e8e\u7cfb\u7edf\u5185\u90e8\u53c2\u6570\uff0c\u4e0d\u5efa\u8bae\u4fee\u6539 [eggroll] # core # \u8fde\u63a5MySQL\u914d\u7f6e\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.driver.class.name = com.mysql.cj.jdbc.Driver # \u8fde\u63a5MySQL\u914d\u7f6e\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.url = jdbc:mysql://localhost:3306/eggroll_meta?useSSL=false&serverTimezone=UTC&characterEncoding=utf8&allowPublicKeyRetrieval=true # \u8fde\u63a5MySQL\u8d26\u6237\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.username = # \u8fde\u63a5MySQL\u5bc6\u7801\uff0c\u4e00\u822c\u751f\u4ea7\u5e94\u7528\u9700\u8981\u6b64\u914d\u7f6e eggroll.resourcemanager.clustermanager.jdbc.password = # \u6570\u636e\u5b58\u50a8\u76ee\u5f55 eggroll.data.dir = data/ # \u65e5\u5fd7\u5b58\u50a8\u76ee\u5f55 eggroll.logs.dir = logs/ eggroll.resourcemanager.clustermanager.host = 127.0.0.1 eggroll.resourcemanager.clustermanager.port = 4670 eggroll.resourcemanager.nodemanager.port = 4670 # python\u8def\u5f84 eggroll.resourcemanager.bootstrap.egg_pair.venv = # pythonpath, \u4e00\u822c\u9700\u8981\u6307\u5b9aeggroll\u7684python\u76ee\u5f55\u4ee5\u53cafate\u7684python\u76ee\u5f55 eggroll.resourcemanager.bootstrap.egg_pair.pythonpath = python # java\u8def\u5f84 eggroll.resourcemanager.bootstrap.egg_frame.javahome = # java\u670d\u52a1\u542f\u52a8\u53c2\u6570\uff0c\u65e0\u7279\u522b\u9700\u8981\uff0c\u65e0\u9700\u914d\u7f6e eggroll.resourcemanager.bootstrap.egg_frame.jvm.options = # \u591a\u65b9\u901a\u4fe1\u65f6\uff0cgrpc\u8fde\u63a5\u4fdd\u6301\u65f6\u95f4 eggroll.core.grpc.channel.keepalive.timeout.sec = 20 # session # \u4e00\u4e2aeggroll\u4f1a\u8bdd\u4e2d\uff0c\u6bcf\u4e2anodemanager\u542f\u52a8\u7684\u8ba1\u7b97\u8fdb\u7a0b\u6570\u91cf;\u82e5\u4f7f\u7528fate\u8fdb\u884c\u63d0\u4ea4\u4efb\u52a1\uff0c\u5219\u4f1a\u88abfate flow\u7684\u9ed8\u8ba4\u53c2\u6570\u6240\u4ee3\u66ff eggroll.session.processors.per.node = 4 # rollsite eggroll.rollsite.coordinator = webank eggroll.rollsite.host = 127.0.0.1 eggroll.rollsite.port = 9370 eggroll.rollsite.party.id = 10001 eggroll.rollsite.route.table.path = conf/route_table.json eggroll.rollsite.push.max.retry = 3 eggroll.rollsite.push.long.retry = 2 eggroll.rollsite.push.batches.per.stream = 10 eggroll.rollsite.adapter.sendbuf.size = 100000","title":"5.1 \u7cfb\u7edf\u914d\u7f6e"},{"location":"zh/configuration_instruction/#52","text":"\u8def\u5f84\uff1a ${EGGROLL_HOME}/conf/route_table.json \u8bf4\u660e\uff1a\u5e38\u7528\u914d\u7f6e\uff0c\u4e00\u822c\u90e8\u7f72\u65f6\u9700\u8981\u786e\u5b9a \u8def\u7531\u8868\u4e3b\u8981\u5206\u4e24\u4e2a\u5c42\u7ea7\u8868\u793a \u7b2c\u4e00\u7ea7\u8868\u793a\u7ad9\u70b9\uff0c\u82e5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u76ee\u6807\u7ad9\u70b9\u914d\u7f6e\uff0c\u5219\u4f7f\u7528**default** \u7b2c\u4e8c\u7ea7\u8868\u793a\u670d\u52a1\uff0c\u82e5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u76ee\u6807\u670d\u52a1\uff0c\u5219\u4f7f\u7528**default** \u7b2c\u4e8c\u7ea7\uff0c\u901a\u5e38\u5c06**default**\u8bbe\u4e3a\u672c\u65b9**rollsite**\u670d\u52a1\u5730\u5740\uff0c\u5c06**fateflow**\u8bbe\u4e3a\u672c\u65b9**fate flow server**\u670d\u52a1\u7684grpc\u5730\u5740 { \"route_table\" : { \"10001\" : { \"default\" :[ { \"port\" : 9370 , \"ip\" : \"127.0.0.1\" } ], \"fateflow\" :[ { \"port\" : 9360 , \"ip\" : \"127.0.0.1\" } ] }, \"10002\" : { \"default\" :[ { \"port\" : 9470 , \"ip\" : \"127.0.0.1\" } ] } }, \"permission\" : { \"default_allow\" : true } }","title":"5.2 \u8def\u7531\u8868\u914d\u7f6e"},{"location":"zh/document_navigation/","text":"\u6587\u6863\u5bfc\u822a \u00b6 1. \u901a\u7528\u6587\u6863\u53d8\u91cf \u00b6 \u60a8\u4f1a\u5728\u6240\u6709 FATE Flow \u7684\u6587\u6863\u770b\u5230\u5982\u4e0b \u6587\u6863\u53d8\u91cf \uff0c\u5176\u542b\u4e49\u5982\u4e0b\uff1a FATE_PROJECT_BASE\uff1a\u8868\u793a FATE\u9879\u76ee \u90e8\u7f72\u76ee\u5f55\uff0c\u5305\u542b\u914d\u7f6e\u3001fate\u7b97\u6cd5\u5305\u3001fate\u5ba2\u6237\u7aef\u4ee5\u53ca\u5b50\u7cfb\u7edf: bin , conf , examples , fate , fateflow , fateboard , eggroll \u7b49 FATE_BASE\uff1a\u8868\u793a FATE \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 fate \uff0c\u5305\u542b\u7b97\u6cd5\u5305\u3001\u5ba2\u6237\u7aef: federatedml , fate arch , fate client , \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/fate FATE_FLOW_BASE\uff1a\u8868\u793a FATE Flow \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 fateflow \uff0c\u5305\u542b fate flow server \u7b49, \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/fateflow FATE_BOARD_BASE\uff1a\u8868\u793a FATE Board \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 fateboard \uff0c\u5305\u542b fateboard , \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/fateboard EGGROLL_HOME\uff1a\u8868\u793a EggRoll \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 eggroll \uff0c\u5305\u542b rollsite , clustermanager , nodemanager \u7b49, \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/eggroll \u53c2\u8003 FATE\u9879\u76ee \u4e3b\u4ed3\u5e93 FederatedAI/FATE \u90e8\u7f72 FATE\u9879\u76ee \uff0c\u4e3b\u8981\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a FATE_VERSION\uff1a\u8868\u793a FATE \u7684\u7248\u672c\u53f7\uff0c\u59821.7.0 FATE_FLOW_VERSION\uff1a\u8868\u793a FATE Flow \u7684\u7248\u672c\u53f7\uff0c\u59821.7.0 version\uff1a\u4e00\u822c\u5728\u90e8\u7f72\u6587\u6863\u4e2d\uff0c\u8868\u793a FATE\u9879\u76ee \u7248\u672c\u53f7\uff0c\u5982 1.7.0 , 1.6.0 version_tag\uff1a\u4e00\u822c\u5728\u90e8\u7f72\u6587\u6863\u4e2d\uff0c\u8868\u793a FATE\u9879\u76ee \u7248\u672c\u6807\u7b7e\uff0c\u5982 release , rc1 , rc10 2. \u672f\u8bed\u8868 \u00b6 party , \u7ad9\u70b9\uff0c\u4e00\u822c\u7269\u7406\u4e0a\u6307\u4e00\u4e2aFATE\u5355\u673a\u6216\u8005FATE\u96c6\u7fa4 job , \u4f5c\u4e1a task , \u4efb\u52a1, \u4e00\u4e2a\u4f5c\u4e1a\u7531\u591a\u4e2a\u4efb\u52a1\u6784\u6210 component , \u7ec4\u4ef6\uff0c\u9759\u6001\u540d\u79f0\uff0c\u63d0\u4ea4\u4f5c\u4e1a\u65f6\u9700\u8981\u4e24\u4e2a\u63cf\u8ff0\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u522b\u63cf\u8ff0\u8be5\u4f5c\u4e1a\u9700\u8981\u6267\u884c\u7684\u7ec4\u4ef6\u5217\u8868\u3001\u7ec4\u4ef6\u4f9d\u8d56\u5173\u7cfb\u3001\u7ec4\u4ef6\u8fd0\u884c\u53c2\u6570 dsl , \u6307\u7528\u6765\u63cf\u8ff0\u4f5c\u4e1a\u4e2d\u7ec4\u4ef6\u5173\u7cfb\u7684\u8bed\u8a00, \u53ef\u4ee5\u63cf\u8ff0\u7ec4\u4ef6\u5217\u8868\u4ee5\u53ca\u7ec4\u4ef6\u4f9d\u8d56\u5173\u7cfb component_name : \u63d0\u4ea4\u4f5c\u4e1a\u65f6\u7ec4\u4ef6\u7684\u540d\u79f0\uff0c\u4e00\u4e2a\u4f5c\u4e1a\u53ef\u4ee5\u6709\u591a\u4e2a\u540c\u6837\u7684\u7ec4\u4ef6\u7684\uff0c\u4f46\u662f component_name \u662f\u4e0d\u4e00\u6837\u7684\uff0c\u76f8\u5f53\u4e8e\u7c7b\u7684\u5b9e\u4f8b, \u4e00\u4e2a component_name \u5bf9\u5e94\u7684\u7ec4\u4ef6\u4f1a\u751f\u6210\u4e00\u4e2a task \u8fd0\u884c componet_module_name : \u7ec4\u4ef6\u7684\u7c7b\u540d model_alias : \u8ddf component_name \u7c7b\u4f3c\uff0c\u5c31\u662f\u7528\u6237\u5728 dsl \u91cc\u9762\u662f\u53ef\u4ee5\u914d\u7f6e\u8f93\u51fa\u7684 model \u540d\u79f0\u7684 \u793a\u4f8b\uff1a \u56fe\u4e2d dataio_0 \u662f component_name \uff0c DataIO \u662f componet_module_name \uff0c dataio \u662f model_alias party status , \u6307\u4efb\u52a1\u4e2d\u6bcf\u65b9\u7684\u6267\u884c\u72b6\u6001\uff0c status \u662f\u7531\u6240\u6709\u65b9\u7684 party status \u63a8\u65ad\u51fa\uff0c\u5982\u6240\u6709 party status \u4e3a success \uff0c status \u624d\u4e3asuccess 3. \u9605\u8bfb\u6307\u5f15 \u00b6 \u53ef\u4ee5\u5148\u9605\u8bfb \u6574\u4f53\u8bbe\u8ba1 \u53c2\u8003\u4e3b\u4ed3\u5e93 FATE \u90e8\u7f72, \u53ef\u9009\u5355\u673a\u7248(\u5b89\u88c5\u7248, Docker, \u6e90\u7801\u7f16\u8bd1)\u6216\u96c6\u7fa4\u7248(Ansible, Docker, Kuberneters) \u53ef\u4f9d\u636e\u5bfc\u822a\u76ee\u5f55\u987a\u5e8f\u8fdb\u884c\u53c2\u8003","title":"\u6587\u6863\u5bfc\u822a"},{"location":"zh/document_navigation/#_1","text":"","title":"\u6587\u6863\u5bfc\u822a"},{"location":"zh/document_navigation/#1","text":"\u60a8\u4f1a\u5728\u6240\u6709 FATE Flow \u7684\u6587\u6863\u770b\u5230\u5982\u4e0b \u6587\u6863\u53d8\u91cf \uff0c\u5176\u542b\u4e49\u5982\u4e0b\uff1a FATE_PROJECT_BASE\uff1a\u8868\u793a FATE\u9879\u76ee \u90e8\u7f72\u76ee\u5f55\uff0c\u5305\u542b\u914d\u7f6e\u3001fate\u7b97\u6cd5\u5305\u3001fate\u5ba2\u6237\u7aef\u4ee5\u53ca\u5b50\u7cfb\u7edf: bin , conf , examples , fate , fateflow , fateboard , eggroll \u7b49 FATE_BASE\uff1a\u8868\u793a FATE \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 fate \uff0c\u5305\u542b\u7b97\u6cd5\u5305\u3001\u5ba2\u6237\u7aef: federatedml , fate arch , fate client , \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/fate FATE_FLOW_BASE\uff1a\u8868\u793a FATE Flow \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 fateflow \uff0c\u5305\u542b fate flow server \u7b49, \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/fateflow FATE_BOARD_BASE\uff1a\u8868\u793a FATE Board \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 fateboard \uff0c\u5305\u542b fateboard , \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/fateboard EGGROLL_HOME\uff1a\u8868\u793a EggRoll \u7684\u90e8\u7f72\u76ee\u5f55\uff0c\u540d\u79f0 eggroll \uff0c\u5305\u542b rollsite , clustermanager , nodemanager \u7b49, \u901a\u5e38\u8def\u5f84\u4e3a ${FATE_PROJECT_BASE}/eggroll \u53c2\u8003 FATE\u9879\u76ee \u4e3b\u4ed3\u5e93 FederatedAI/FATE \u90e8\u7f72 FATE\u9879\u76ee \uff0c\u4e3b\u8981\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a FATE_VERSION\uff1a\u8868\u793a FATE \u7684\u7248\u672c\u53f7\uff0c\u59821.7.0 FATE_FLOW_VERSION\uff1a\u8868\u793a FATE Flow \u7684\u7248\u672c\u53f7\uff0c\u59821.7.0 version\uff1a\u4e00\u822c\u5728\u90e8\u7f72\u6587\u6863\u4e2d\uff0c\u8868\u793a FATE\u9879\u76ee \u7248\u672c\u53f7\uff0c\u5982 1.7.0 , 1.6.0 version_tag\uff1a\u4e00\u822c\u5728\u90e8\u7f72\u6587\u6863\u4e2d\uff0c\u8868\u793a FATE\u9879\u76ee \u7248\u672c\u6807\u7b7e\uff0c\u5982 release , rc1 , rc10","title":"1. \u901a\u7528\u6587\u6863\u53d8\u91cf"},{"location":"zh/document_navigation/#2","text":"party , \u7ad9\u70b9\uff0c\u4e00\u822c\u7269\u7406\u4e0a\u6307\u4e00\u4e2aFATE\u5355\u673a\u6216\u8005FATE\u96c6\u7fa4 job , \u4f5c\u4e1a task , \u4efb\u52a1, \u4e00\u4e2a\u4f5c\u4e1a\u7531\u591a\u4e2a\u4efb\u52a1\u6784\u6210 component , \u7ec4\u4ef6\uff0c\u9759\u6001\u540d\u79f0\uff0c\u63d0\u4ea4\u4f5c\u4e1a\u65f6\u9700\u8981\u4e24\u4e2a\u63cf\u8ff0\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u522b\u63cf\u8ff0\u8be5\u4f5c\u4e1a\u9700\u8981\u6267\u884c\u7684\u7ec4\u4ef6\u5217\u8868\u3001\u7ec4\u4ef6\u4f9d\u8d56\u5173\u7cfb\u3001\u7ec4\u4ef6\u8fd0\u884c\u53c2\u6570 dsl , \u6307\u7528\u6765\u63cf\u8ff0\u4f5c\u4e1a\u4e2d\u7ec4\u4ef6\u5173\u7cfb\u7684\u8bed\u8a00, \u53ef\u4ee5\u63cf\u8ff0\u7ec4\u4ef6\u5217\u8868\u4ee5\u53ca\u7ec4\u4ef6\u4f9d\u8d56\u5173\u7cfb component_name : \u63d0\u4ea4\u4f5c\u4e1a\u65f6\u7ec4\u4ef6\u7684\u540d\u79f0\uff0c\u4e00\u4e2a\u4f5c\u4e1a\u53ef\u4ee5\u6709\u591a\u4e2a\u540c\u6837\u7684\u7ec4\u4ef6\u7684\uff0c\u4f46\u662f component_name \u662f\u4e0d\u4e00\u6837\u7684\uff0c\u76f8\u5f53\u4e8e\u7c7b\u7684\u5b9e\u4f8b, \u4e00\u4e2a component_name \u5bf9\u5e94\u7684\u7ec4\u4ef6\u4f1a\u751f\u6210\u4e00\u4e2a task \u8fd0\u884c componet_module_name : \u7ec4\u4ef6\u7684\u7c7b\u540d model_alias : \u8ddf component_name \u7c7b\u4f3c\uff0c\u5c31\u662f\u7528\u6237\u5728 dsl \u91cc\u9762\u662f\u53ef\u4ee5\u914d\u7f6e\u8f93\u51fa\u7684 model \u540d\u79f0\u7684 \u793a\u4f8b\uff1a \u56fe\u4e2d dataio_0 \u662f component_name \uff0c DataIO \u662f componet_module_name \uff0c dataio \u662f model_alias party status , \u6307\u4efb\u52a1\u4e2d\u6bcf\u65b9\u7684\u6267\u884c\u72b6\u6001\uff0c status \u662f\u7531\u6240\u6709\u65b9\u7684 party status \u63a8\u65ad\u51fa\uff0c\u5982\u6240\u6709 party status \u4e3a success \uff0c status \u624d\u4e3asuccess","title":"2. \u672f\u8bed\u8868"},{"location":"zh/document_navigation/#3","text":"\u53ef\u4ee5\u5148\u9605\u8bfb \u6574\u4f53\u8bbe\u8ba1 \u53c2\u8003\u4e3b\u4ed3\u5e93 FATE \u90e8\u7f72, \u53ef\u9009\u5355\u673a\u7248(\u5b89\u88c5\u7248, Docker, \u6e90\u7801\u7f16\u8bd1)\u6216\u96c6\u7fa4\u7248(Ansible, Docker, Kuberneters) \u53ef\u4f9d\u636e\u5bfc\u822a\u76ee\u5f55\u987a\u5e8f\u8fdb\u884c\u53c2\u8003","title":"3. \u9605\u8bfb\u6307\u5f15"},{"location":"zh/faq/","text":"\u5e38\u89c1\u95ee\u9898 \u00b6 1. \u8bf4\u660e \u00b6 2. \u65e5\u5fd7\u8bf4\u660e \u00b6 \u4e00\u822c\u6765\u8bf4\uff0c\u6392\u67e5\u95ee\u9898\uff0c\u9700\u8981\u5982\u4e0b\u51e0\u4e2a\u65e5\u5fd7\uff1a v1.7+ \u00b6 ${FATE_PROJECT_BASE}/fateflow/logs/$job_id/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u5185\u90e8\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/$job_id/* \u8fd9\u4e9b\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u6240\u6709\u6267\u884c\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_stat.log \uff0c\u8fd9\u4e2a\u662f\u4e0e\u4efb\u52a1\u65e0\u5173\u7684\u4e00\u4e9b\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_detect.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u5f02\u5e38\u63a2\u6d4b\u65e5\u5fd7 v1.7- \u00b6 ${FATE_PROJECT_BASE}/logs/$job_id/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u5185\u90e8\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/$job_id/* \u8fd9\u4e9b\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u6240\u6709\u6267\u884c\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_stat.log \uff0c\u8fd9\u4e2a\u662f\u4e0e\u4efb\u52a1\u65e0\u5173\u7684\u4e00\u4e9b\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_detect.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u5f02\u5e38\u63a2\u6d4b\u65e5\u5fd7 3. \u79bb\u7ebf\u90e8\u5206 \u00b6 upload\u5931\u8d25 \u00b6 \u68c0\u67e5eggroll\u76f8\u5173\u670d\u52a1\u662f\u5426\u5f02\u5e38\uff1b \u63d0\u4ea4\u4efb\u52a1(submit_job)\u5361\u4f4f \u00b6 \u68c0\u67e5\u53cc\u65b9rollsite\u670d\u52a1\u662f\u5426\u88abkill\u4e86 \u63d0\u4ea4\u4efb\u52a1(submit_job)\u8fd4\u56degrpc\u5f02\u5e38 \u00b6 \u63d0\u4ea4\u4efb\u52a1\u7684\u94fe\u8def\uff1a guest fate_flow -> guest rollsite -> host rollsite -> host fate_flow \u68c0\u67e5\u4e0a\u9762\u7684\u94fe\u8def\u4e2d\u7684\u6bcf\u4e2a\u670d\u52a1\u662f\u5426\u6302\u4e86\uff0c\u5fc5\u987b\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u6b63\u5e38\u8fd0\u884c\uff1b \u68c0\u67e5\u8def\u7531\u8868\u7684\u914d\u7f6e\u662f\u5426\u6b63\u786e\uff1b dataio\u7ec4\u4ef6\u5f02\u5e38: not enough values to unpack (expected 2, got 1) \u00b6 \u6570\u636e\u7684\u5206\u9694\u7b26\u548c\u914d\u7f6e\u4e2d\u7684\u5206\u5272\u7b26\u4e0d\u4e00\u81f4 \u4efb\u52a1\u8fd0\u884c\u65f6\u629b\u51fa\u5f02\u5e38:\"Count of data_instance is 0\" \u00b6 \u4efb\u52a1\u4e2d\u6709\u4ea4\u96c6\u7ec4\u4ef6\u5e76\u4e14\u4ea4\u96c6\u5339\u914d\u7387\u4e3a0\uff0c\u9700\u8981\u68c0\u67e5guest\u548chost\u7684\u8f93\u51fa\u6570\u636eid\u662f\u5426\u80fd\u5339\u914d\u4e0a\uff1b 4. \u5728\u7ebf\u90e8\u5206 \u00b6 \u63a8\u6a21\u578b(load)retcode\u8fd4\u56de100\uff0c\u53ef\u80fd\u7684\u539f\u56e0\u6709\u54ea\u4e9b\uff1f \u00b6 \u6ca1\u6709\u90e8\u7f72fate-servings flow\u6ca1\u6709\u83b7\u53d6\u5230fate-servings\u7684\u5730\u5740 flow\u8bfb\u53d6fate-servings\u7684\u5730\u5740\u7684\u4f18\u5148\u7ea7\u6392\u5e8f: \u4ecezk\u8bfb\u53d6 \u6ca1\u6709\u6253\u5f00zk\u7684\u8bdd\uff0c\u4f1a\u4ecefate\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\uff0c\u914d\u7f6e\u8def\u5f84\u5728 1.5+: ${FATE_PROJECT_BASE}/conf/service_conf.yaml 1.5-: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json \u63a8\u6a21\u578b(load)retcode\u8fd4\u56de123\uff0c\u53ef\u80fd\u539f\u56e0\u6709\u54ea\u4e9b\uff1f \u00b6 \u6a21\u578b\u4fe1\u606f\u6709\u8bef\uff1b \u6b64\u9519\u8bef\u7801\u662ffate-servings\u6ca1\u6709\u627e\u5230\u6a21\u578b\u800c\u629b\u51fa\u7684\uff1b \u7ed1\u5b9a\u6a21\u578b(bind)\u64cd\u4f5c\u65f6\u63d0\u793a\"no service id\"? \u00b6 \u5728bind\u914d\u7f6e\u4e2d\u81ea\u5b9a\u4e49service_id servings\u7684\u914d\u7f6e\u5728\u54ea?\u600e\u4e48\u914d\uff1f \u00b6 1.5+ \u914d\u7f6e\u8def\u5f84: ${FATE_PROJECT_BASE}/conf/service_conf.yaml servings : hosts : - 127.0.0.1:8000 1.5- \u914d\u7f6e\u8def\u5f84: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json { \"servers\" : { \"servings\" : [ \"127.0.0.1:8000\" ] } }","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"zh/faq/#_1","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"zh/faq/#1","text":"","title":"1. \u8bf4\u660e"},{"location":"zh/faq/#2","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u6392\u67e5\u95ee\u9898\uff0c\u9700\u8981\u5982\u4e0b\u51e0\u4e2a\u65e5\u5fd7\uff1a","title":"2. \u65e5\u5fd7\u8bf4\u660e"},{"location":"zh/faq/#v17","text":"${FATE_PROJECT_BASE}/fateflow/logs/$job_id/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u5185\u90e8\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/$job_id/* \u8fd9\u4e9b\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u6240\u6709\u6267\u884c\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_stat.log \uff0c\u8fd9\u4e2a\u662f\u4e0e\u4efb\u52a1\u65e0\u5173\u7684\u4e00\u4e9b\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/fateflow/logs/fate_flow/fate_flow_detect.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u5f02\u5e38\u63a2\u6d4b\u65e5\u5fd7","title":"v1.7+"},{"location":"zh/faq/#v17-","text":"${FATE_PROJECT_BASE}/logs/$job_id/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u5185\u90e8\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/$job_id/* \u8fd9\u4e9b\u662f\u67d0\u4e2a\u4efb\u52a1\u7684\u6240\u6709\u6267\u884c\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_stat.log \uff0c\u8fd9\u4e2a\u662f\u4e0e\u4efb\u52a1\u65e0\u5173\u7684\u4e00\u4e9b\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_schedule.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u8c03\u5ea6\u65e5\u5fd7 ${FATE_PROJECT_BASE}/logs/fate_flow/fate_flow_detect.log \uff0c\u8fd9\u4e2a\u662f\u6240\u6709\u4efb\u52a1\u7684\u6574\u4f53\u5f02\u5e38\u63a2\u6d4b\u65e5\u5fd7","title":"v1.7-"},{"location":"zh/faq/#3","text":"","title":"3. \u79bb\u7ebf\u90e8\u5206"},{"location":"zh/faq/#upload","text":"\u68c0\u67e5eggroll\u76f8\u5173\u670d\u52a1\u662f\u5426\u5f02\u5e38\uff1b","title":"upload\u5931\u8d25"},{"location":"zh/faq/#submit_job","text":"\u68c0\u67e5\u53cc\u65b9rollsite\u670d\u52a1\u662f\u5426\u88abkill\u4e86","title":"\u63d0\u4ea4\u4efb\u52a1(submit_job)\u5361\u4f4f"},{"location":"zh/faq/#submit_jobgrpc","text":"\u63d0\u4ea4\u4efb\u52a1\u7684\u94fe\u8def\uff1a guest fate_flow -> guest rollsite -> host rollsite -> host fate_flow \u68c0\u67e5\u4e0a\u9762\u7684\u94fe\u8def\u4e2d\u7684\u6bcf\u4e2a\u670d\u52a1\u662f\u5426\u6302\u4e86\uff0c\u5fc5\u987b\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u6b63\u5e38\u8fd0\u884c\uff1b \u68c0\u67e5\u8def\u7531\u8868\u7684\u914d\u7f6e\u662f\u5426\u6b63\u786e\uff1b","title":"\u63d0\u4ea4\u4efb\u52a1(submit_job)\u8fd4\u56degrpc\u5f02\u5e38"},{"location":"zh/faq/#dataio-not-enough-values-to-unpack-expected-2-got-1","text":"\u6570\u636e\u7684\u5206\u9694\u7b26\u548c\u914d\u7f6e\u4e2d\u7684\u5206\u5272\u7b26\u4e0d\u4e00\u81f4","title":"dataio\u7ec4\u4ef6\u5f02\u5e38: not enough values to unpack (expected 2, got 1)"},{"location":"zh/faq/#count-of-data_instance-is-0","text":"\u4efb\u52a1\u4e2d\u6709\u4ea4\u96c6\u7ec4\u4ef6\u5e76\u4e14\u4ea4\u96c6\u5339\u914d\u7387\u4e3a0\uff0c\u9700\u8981\u68c0\u67e5guest\u548chost\u7684\u8f93\u51fa\u6570\u636eid\u662f\u5426\u80fd\u5339\u914d\u4e0a\uff1b","title":"\u4efb\u52a1\u8fd0\u884c\u65f6\u629b\u51fa\u5f02\u5e38:\"Count of data_instance is 0\""},{"location":"zh/faq/#4","text":"","title":"4. \u5728\u7ebf\u90e8\u5206"},{"location":"zh/faq/#loadretcode100","text":"\u6ca1\u6709\u90e8\u7f72fate-servings flow\u6ca1\u6709\u83b7\u53d6\u5230fate-servings\u7684\u5730\u5740 flow\u8bfb\u53d6fate-servings\u7684\u5730\u5740\u7684\u4f18\u5148\u7ea7\u6392\u5e8f: \u4ecezk\u8bfb\u53d6 \u6ca1\u6709\u6253\u5f00zk\u7684\u8bdd\uff0c\u4f1a\u4ecefate\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\uff0c\u914d\u7f6e\u8def\u5f84\u5728 1.5+: ${FATE_PROJECT_BASE}/conf/service_conf.yaml 1.5-: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json","title":"\u63a8\u6a21\u578b(load)retcode\u8fd4\u56de100\uff0c\u53ef\u80fd\u7684\u539f\u56e0\u6709\u54ea\u4e9b\uff1f"},{"location":"zh/faq/#loadretcode123","text":"\u6a21\u578b\u4fe1\u606f\u6709\u8bef\uff1b \u6b64\u9519\u8bef\u7801\u662ffate-servings\u6ca1\u6709\u627e\u5230\u6a21\u578b\u800c\u629b\u51fa\u7684\uff1b","title":"\u63a8\u6a21\u578b(load)retcode\u8fd4\u56de123\uff0c\u53ef\u80fd\u539f\u56e0\u6709\u54ea\u4e9b\uff1f"},{"location":"zh/faq/#bindno-service-id","text":"\u5728bind\u914d\u7f6e\u4e2d\u81ea\u5b9a\u4e49service_id","title":"\u7ed1\u5b9a\u6a21\u578b(bind)\u64cd\u4f5c\u65f6\u63d0\u793a\"no service id\"?"},{"location":"zh/faq/#servings","text":"1.5+ \u914d\u7f6e\u8def\u5f84: ${FATE_PROJECT_BASE}/conf/service_conf.yaml servings : hosts : - 127.0.0.1:8000 1.5- \u914d\u7f6e\u8def\u5f84: ${FATE_PROJECT_BASE}/arch/conf/server_conf.json { \"servers\" : { \"servings\" : [ \"127.0.0.1:8000\" ] } }","title":"servings\u7684\u914d\u7f6e\u5728\u54ea?\u600e\u4e48\u914d\uff1f"},{"location":"zh/fate_flow/","text":"\u6574\u4f53\u8bbe\u8ba1 \u00b6 1. \u903b\u8f91\u67b6\u6784 \u00b6 DSL\u5b9a\u4e49\u4f5c\u4e1a \u81ea\u9876\u5411\u4e0b\u7684\u7eb5\u5411\u5b50\u4efb\u52a1\u6d41\u8c03\u5ea6\u3001\u591a\u53c2\u4e0e\u65b9\u8054\u5408\u5b50\u4efb\u52a1\u534f\u8c03 \u72ec\u7acb\u9694\u79bb\u7684\u4efb\u52a1\u6267\u884c\u5de5\u4f5c\u8fdb\u7a0b \u652f\u6301\u591a\u7c7b\u578b\u591a\u7248\u672c\u7ec4\u4ef6 \u8ba1\u7b97\u62bd\u8c61API \u5b58\u50a8\u62bd\u8c61API \u8de8\u65b9\u4f20\u8f93\u62bd\u8c61API 2. \u6574\u4f53\u67b6\u6784 \u00b6 2.1 FATE\u6574\u4f53\u67b6\u6784 \u00b6 2.2 FATE Flow\u6574\u4f53\u67b6\u6784 \u00b6 3. \u8c03\u5ea6\u67b6\u6784 \u00b6 3.1 \u57fa\u4e8e\u5171\u4eab\u72b6\u6001\u7684\u5168\u65b0\u8c03\u5ea6\u67b6\u6784 \u00b6 \u5265\u79bb\u72b6\u6001(\u8d44\u6e90\u3001\u4f5c\u4e1a)\u4e0e\u7ba1\u7406\u5668(\u8c03\u5ea6\u5668\u3001\u8d44\u6e90\u7ba1\u7406\u5668) \u8d44\u6e90\u72b6\u6001\u4e0e\u4f5c\u4e1a\u72b6\u6001\u6301\u4e45\u5316\u5b58\u4e8eMySQL\uff0c\u5168\u5c40\u5171\u4eab\uff0c\u63d0\u4f9b\u53ef\u9760\u4e8b\u52a1\u6027\u64cd\u4f5c \u63d0\u9ad8\u7ba1\u7406\u670d\u52a1\u7684\u9ad8\u53ef\u7528\u4e0e\u6269\u5c55\u6027 \u4f5c\u4e1a\u53ef\u4ecb\u5165\uff0c\u652f\u6301\u5b9e\u73b0\u5982\u91cd\u542f\u3001\u91cd\u8dd1\u3001\u5e76\u884c\u63a7\u5236\u3001\u8d44\u6e90\u9694\u79bb\u7b49 3.2 \u72b6\u6001\u9a71\u52a8\u8c03\u5ea6 \u00b6 \u8d44\u6e90\u534f\u8c03 \u62c9\u8d77\u5b50\u8fdb\u7a0bExecutor\u8fd0\u884c\u7ec4\u4ef6 Executor\u4e0a\u62a5\u72b6\u6001\u5230\u672c\u65b9Server\uff0c\u5e76\u4e14\u540c\u65f6\u4e0a\u62a5\u5230\u8c03\u5ea6\u65b9 \u591a\u65b9\u4efb\u52a1\u72b6\u6001\u8ba1\u7b97\u8054\u90a6\u4efb\u52a1\u72b6\u6001 \u4e0a\u4e0b\u6e38\u4efb\u52a1\u72b6\u6001\u8ba1\u7b97\u4f5c\u4e1a\u4f5c\u6001 4. \u591a\u65b9\u8d44\u6e90\u534f\u8c03 \u00b6 \u6bcf\u4e2a\u5f15\u64ce\u603b\u8d44\u6e90\u5927\u5c0f\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\uff0c\u540e\u7eed\u5b9e\u73b0\u7cfb\u7edf\u5bf9\u63a5 \u603b\u8d44\u6e90\u5927\u5c0f\u4e2d\u7684cores_per_node\u8868\u793a\u6bcf\u4e2a\u8ba1\u7b97\u8282\u70b9cpu\u6838\u6570\uff0cnodes\u8868\u793a\u8ba1\u7b97\u8282\u70b9\u4e2a\u6570 FATEFlow server\u542f\u52a8\u65f6\u4ece\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u8d44\u6e90\u5927\u5c0f\u914d\u7f6e\uff0c\u5e76\u6ce8\u518c\u66f4\u65b0\u5230\u6570\u636e\u5e93 \u4ee5Job\u7ef4\u5ea6\u7533\u8bf7\u8d44\u6e90\uff0cJob Conf\u63d0\u4ea4\u65f6\u751f\u6548\uff0c\u516c\u5f0f\uff1atask_parallelism*task_cores \u8be6\u7ec6\u8bf7\u770b\u6587\u6863\u5355\u72ec\u7ae0\u8282 5. \u6570\u636e\u6d41\u52a8\u8ffd\u8e2a \u00b6 \u5b9a\u4e49 metric type: \u6307\u6807\u7c7b\u578b\uff0c\u5982auc, loss, ks\u7b49\u7b49 metric namespace: \u81ea\u5b9a\u4e49\u6307\u6807\u547d\u540d\u7a7a\u95f4\uff0c\u5982train, predict metric name: \u81ea\u5b9a\u4e49\u6307\u6807\u540d\u79f0\uff0c\u5982auc0\uff0chetero_lr_auc0 metric data: key-value\u5f62\u5f0f\u7684\u6307\u6807\u6570\u636e metric meta: key-value\u5f62\u5f0f\u7684\u6307\u6807\u5143\u4fe1\u606f\uff0c\u652f\u6301\u7075\u6d3b\u753b\u56fe API log_metric_data(metric_namespace, metric_name, metrics) set_metric_meta(metric_namespace, metric_name, metric_meta) get_metric_data(metric_namespace, metric_name) get_metric_meta(metric_namespace, metric_name) 6. \u4f5c\u4e1a\u5b9e\u65f6\u76d1\u6d4b \u00b6 \u5de5\u4f5c\u8fdb\u7a0b\u5b58\u6d3b\u6027\u68c0\u6d4b \u4f5c\u4e1a\u8d85\u65f6\u68c0\u6d4b \u8d44\u6e90\u56de\u6536\u68c0\u6d4b \u57fa\u7840\u5f15\u64ce\u4f1a\u8bdd\u8d85\u65f6\u68c0\u6d4b 7. \u4efb\u52a1\u7ec4\u4ef6\u4e2d\u5fc3 \u00b6 8. \u591a\u65b9\u8054\u5408\u6a21\u578b\u6ce8\u518c\u4e2d\u5fc3 \u00b6 \u4f7f\u7528Google Protocol Buffer\u4f5c\u4e3a\u6a21\u578b\u5b58\u50a8\u534f\u8bae\uff0c\u5229\u7528\u8de8\u8bed\u8a00\u5171\u4eab\uff0c\u6bcf\u4e2a\u7b97\u6cd5\u6a21\u578b\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1aModelParam & ModelMeta \u4e00\u4e2aPipeline\u4ea7\u751f\u4e00\u7cfb\u5217\u7b97\u6cd5\u6a21\u578b \u547d\u540d\u4e3aPipeline\u7684\u6a21\u578b\u5b58\u50a8Pipeline\u5efa\u6a21DSL\u53ca\u5728\u7ebf\u63a8\u7406DSL \u8054\u90a6\u5b66\u4e60\u4e0b\uff0c\u9700\u8981\u4fdd\u8bc1\u6240\u6709\u53c2\u4e0e\u65b9\u6a21\u578b\u4e00\u81f4\u6027\uff0c\u5373\u6a21\u578b\u7ed1\u5b9a model_key\u4e3a\u7528\u6237\u63d0\u4ea4\u4efb\u52a1\u65f6\u5b9a\u4e49\u7684\u6a21\u578b\u6807\u8bc6 \u8054\u90a6\u5404\u65b9\u7684\u6a21\u578bID\u7531\u672c\u65b9\u6807\u8bc6\u4fe1\u606frole\u3001party_id\uff0c\u52a0model_key \u8054\u90a6\u5404\u65b9\u7684\u6a21\u578b\u7248\u672c\u5fc5\u987b\u552f\u4e00\u4e14\u4fdd\u6301\u4e00\u81f4\uff0cFATE-Flow\u76f4\u63a5\u8bbe\u7f6e\u4e3ajob_id 9. \u6570\u636e\u63a5\u5165 \u00b6 Upload\uff1a \u5916\u90e8\u5b58\u50a8\u76f4\u63a5\u5bfc\u5165\u5230FATE Storage\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684DTable \u4f5c\u4e1a\u8fd0\u884c\u65f6\uff0cReader\u76f4\u63a5\u4eceStorage\u8bfb\u53d6 Table Bind\uff1a \u5916\u90e8\u5b58\u50a8\u5730\u5740\u5173\u952e\u5230FATE\u4e00\u4e2a\u65b0\u7684DTable \u4f5c\u4e1a\u8fd0\u884c\u65f6\uff0cReader\u901a\u8fc7Meta\u4ece\u5916\u90e8\u5b58\u50a8\u8bfb\u53d6\u6570\u636e\u5e76\u8f6c\u5b58\u5230FATE Storage \u6253\u901a\u5927\u6570\u636e\u751f\u6001\uff1aHDFS\uff0cHive/MySQL 10. \u591a\u65b9\u5408\u4f5c\u6743\u9650\u7ba1\u7406 \u00b6","title":"\u6574\u4f53\u8bbe\u8ba1"},{"location":"zh/fate_flow/#_1","text":"","title":"\u6574\u4f53\u8bbe\u8ba1"},{"location":"zh/fate_flow/#1","text":"DSL\u5b9a\u4e49\u4f5c\u4e1a \u81ea\u9876\u5411\u4e0b\u7684\u7eb5\u5411\u5b50\u4efb\u52a1\u6d41\u8c03\u5ea6\u3001\u591a\u53c2\u4e0e\u65b9\u8054\u5408\u5b50\u4efb\u52a1\u534f\u8c03 \u72ec\u7acb\u9694\u79bb\u7684\u4efb\u52a1\u6267\u884c\u5de5\u4f5c\u8fdb\u7a0b \u652f\u6301\u591a\u7c7b\u578b\u591a\u7248\u672c\u7ec4\u4ef6 \u8ba1\u7b97\u62bd\u8c61API \u5b58\u50a8\u62bd\u8c61API \u8de8\u65b9\u4f20\u8f93\u62bd\u8c61API","title":"1. \u903b\u8f91\u67b6\u6784"},{"location":"zh/fate_flow/#2","text":"","title":"2. \u6574\u4f53\u67b6\u6784"},{"location":"zh/fate_flow/#21-fate","text":"","title":"2.1 FATE\u6574\u4f53\u67b6\u6784"},{"location":"zh/fate_flow/#22-fate-flow","text":"","title":"2.2 FATE Flow\u6574\u4f53\u67b6\u6784"},{"location":"zh/fate_flow/#3","text":"","title":"3. \u8c03\u5ea6\u67b6\u6784"},{"location":"zh/fate_flow/#31","text":"\u5265\u79bb\u72b6\u6001(\u8d44\u6e90\u3001\u4f5c\u4e1a)\u4e0e\u7ba1\u7406\u5668(\u8c03\u5ea6\u5668\u3001\u8d44\u6e90\u7ba1\u7406\u5668) \u8d44\u6e90\u72b6\u6001\u4e0e\u4f5c\u4e1a\u72b6\u6001\u6301\u4e45\u5316\u5b58\u4e8eMySQL\uff0c\u5168\u5c40\u5171\u4eab\uff0c\u63d0\u4f9b\u53ef\u9760\u4e8b\u52a1\u6027\u64cd\u4f5c \u63d0\u9ad8\u7ba1\u7406\u670d\u52a1\u7684\u9ad8\u53ef\u7528\u4e0e\u6269\u5c55\u6027 \u4f5c\u4e1a\u53ef\u4ecb\u5165\uff0c\u652f\u6301\u5b9e\u73b0\u5982\u91cd\u542f\u3001\u91cd\u8dd1\u3001\u5e76\u884c\u63a7\u5236\u3001\u8d44\u6e90\u9694\u79bb\u7b49","title":"3.1 \u57fa\u4e8e\u5171\u4eab\u72b6\u6001\u7684\u5168\u65b0\u8c03\u5ea6\u67b6\u6784"},{"location":"zh/fate_flow/#32","text":"\u8d44\u6e90\u534f\u8c03 \u62c9\u8d77\u5b50\u8fdb\u7a0bExecutor\u8fd0\u884c\u7ec4\u4ef6 Executor\u4e0a\u62a5\u72b6\u6001\u5230\u672c\u65b9Server\uff0c\u5e76\u4e14\u540c\u65f6\u4e0a\u62a5\u5230\u8c03\u5ea6\u65b9 \u591a\u65b9\u4efb\u52a1\u72b6\u6001\u8ba1\u7b97\u8054\u90a6\u4efb\u52a1\u72b6\u6001 \u4e0a\u4e0b\u6e38\u4efb\u52a1\u72b6\u6001\u8ba1\u7b97\u4f5c\u4e1a\u4f5c\u6001","title":"3.2 \u72b6\u6001\u9a71\u52a8\u8c03\u5ea6"},{"location":"zh/fate_flow/#4","text":"\u6bcf\u4e2a\u5f15\u64ce\u603b\u8d44\u6e90\u5927\u5c0f\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\uff0c\u540e\u7eed\u5b9e\u73b0\u7cfb\u7edf\u5bf9\u63a5 \u603b\u8d44\u6e90\u5927\u5c0f\u4e2d\u7684cores_per_node\u8868\u793a\u6bcf\u4e2a\u8ba1\u7b97\u8282\u70b9cpu\u6838\u6570\uff0cnodes\u8868\u793a\u8ba1\u7b97\u8282\u70b9\u4e2a\u6570 FATEFlow server\u542f\u52a8\u65f6\u4ece\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u8d44\u6e90\u5927\u5c0f\u914d\u7f6e\uff0c\u5e76\u6ce8\u518c\u66f4\u65b0\u5230\u6570\u636e\u5e93 \u4ee5Job\u7ef4\u5ea6\u7533\u8bf7\u8d44\u6e90\uff0cJob Conf\u63d0\u4ea4\u65f6\u751f\u6548\uff0c\u516c\u5f0f\uff1atask_parallelism*task_cores \u8be6\u7ec6\u8bf7\u770b\u6587\u6863\u5355\u72ec\u7ae0\u8282","title":"4. \u591a\u65b9\u8d44\u6e90\u534f\u8c03"},{"location":"zh/fate_flow/#5","text":"\u5b9a\u4e49 metric type: \u6307\u6807\u7c7b\u578b\uff0c\u5982auc, loss, ks\u7b49\u7b49 metric namespace: \u81ea\u5b9a\u4e49\u6307\u6807\u547d\u540d\u7a7a\u95f4\uff0c\u5982train, predict metric name: \u81ea\u5b9a\u4e49\u6307\u6807\u540d\u79f0\uff0c\u5982auc0\uff0chetero_lr_auc0 metric data: key-value\u5f62\u5f0f\u7684\u6307\u6807\u6570\u636e metric meta: key-value\u5f62\u5f0f\u7684\u6307\u6807\u5143\u4fe1\u606f\uff0c\u652f\u6301\u7075\u6d3b\u753b\u56fe API log_metric_data(metric_namespace, metric_name, metrics) set_metric_meta(metric_namespace, metric_name, metric_meta) get_metric_data(metric_namespace, metric_name) get_metric_meta(metric_namespace, metric_name)","title":"5. \u6570\u636e\u6d41\u52a8\u8ffd\u8e2a"},{"location":"zh/fate_flow/#6","text":"\u5de5\u4f5c\u8fdb\u7a0b\u5b58\u6d3b\u6027\u68c0\u6d4b \u4f5c\u4e1a\u8d85\u65f6\u68c0\u6d4b \u8d44\u6e90\u56de\u6536\u68c0\u6d4b \u57fa\u7840\u5f15\u64ce\u4f1a\u8bdd\u8d85\u65f6\u68c0\u6d4b","title":"6. \u4f5c\u4e1a\u5b9e\u65f6\u76d1\u6d4b"},{"location":"zh/fate_flow/#7","text":"","title":"7. \u4efb\u52a1\u7ec4\u4ef6\u4e2d\u5fc3"},{"location":"zh/fate_flow/#8","text":"\u4f7f\u7528Google Protocol Buffer\u4f5c\u4e3a\u6a21\u578b\u5b58\u50a8\u534f\u8bae\uff0c\u5229\u7528\u8de8\u8bed\u8a00\u5171\u4eab\uff0c\u6bcf\u4e2a\u7b97\u6cd5\u6a21\u578b\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1aModelParam & ModelMeta \u4e00\u4e2aPipeline\u4ea7\u751f\u4e00\u7cfb\u5217\u7b97\u6cd5\u6a21\u578b \u547d\u540d\u4e3aPipeline\u7684\u6a21\u578b\u5b58\u50a8Pipeline\u5efa\u6a21DSL\u53ca\u5728\u7ebf\u63a8\u7406DSL \u8054\u90a6\u5b66\u4e60\u4e0b\uff0c\u9700\u8981\u4fdd\u8bc1\u6240\u6709\u53c2\u4e0e\u65b9\u6a21\u578b\u4e00\u81f4\u6027\uff0c\u5373\u6a21\u578b\u7ed1\u5b9a model_key\u4e3a\u7528\u6237\u63d0\u4ea4\u4efb\u52a1\u65f6\u5b9a\u4e49\u7684\u6a21\u578b\u6807\u8bc6 \u8054\u90a6\u5404\u65b9\u7684\u6a21\u578bID\u7531\u672c\u65b9\u6807\u8bc6\u4fe1\u606frole\u3001party_id\uff0c\u52a0model_key \u8054\u90a6\u5404\u65b9\u7684\u6a21\u578b\u7248\u672c\u5fc5\u987b\u552f\u4e00\u4e14\u4fdd\u6301\u4e00\u81f4\uff0cFATE-Flow\u76f4\u63a5\u8bbe\u7f6e\u4e3ajob_id","title":"8. \u591a\u65b9\u8054\u5408\u6a21\u578b\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/fate_flow/#9","text":"Upload\uff1a \u5916\u90e8\u5b58\u50a8\u76f4\u63a5\u5bfc\u5165\u5230FATE Storage\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684DTable \u4f5c\u4e1a\u8fd0\u884c\u65f6\uff0cReader\u76f4\u63a5\u4eceStorage\u8bfb\u53d6 Table Bind\uff1a \u5916\u90e8\u5b58\u50a8\u5730\u5740\u5173\u952e\u5230FATE\u4e00\u4e2a\u65b0\u7684DTable \u4f5c\u4e1a\u8fd0\u884c\u65f6\uff0cReader\u901a\u8fc7Meta\u4ece\u5916\u90e8\u5b58\u50a8\u8bfb\u53d6\u6570\u636e\u5e76\u8f6c\u5b58\u5230FATE Storage \u6253\u901a\u5927\u6570\u636e\u751f\u6001\uff1aHDFS\uff0cHive/MySQL","title":"9. \u6570\u636e\u63a5\u5165"},{"location":"zh/fate_flow/#10","text":"","title":"10. \u591a\u65b9\u5408\u4f5c\u6743\u9650\u7ba1\u7406"},{"location":"zh/fate_flow_authority_management/","text":"\u8ba4\u8bc1\u65b9\u6848 \u00b6 1. \u8bf4\u660e \u00b6 \u8ba4\u8bc1\u5305\u542b\uff1a\u5ba2\u6237\u7aef\u8ba4\u8bc1\u548c\u7ad9\u70b9\u8ba4\u8bc1 \u8ba4\u8bc1\u914d\u7f6e: $FATE_BASE/conf/service_conf.yaml \uff1a # \u7ad9\u70b9\u9274\u6743\u65f6\u9700\u8981\u914d\u7f6e\u672c\u65b9\u7ad9\u70b9id party_id : # \u94a9\u5b50\u6a21\u5757\uff0c\u9700\u8981\u6839\u636e\u4e0d\u540c\u573a\u666f\u914d\u7f6e\u4e0d\u540c\u7684\u94a9\u5b50 hook_module : client_authentication : fate_flow.hook.flow.client_authentication site_authentication : fate_flow.hook.flow.site_authentication # \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u670d\u52a1\u540d hook_server_name : authentication : client : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u5f00\u5173 switch : false http_app_key : http_secret_key : site : # \u7ad9\u70b9\u8ba4\u8bc1\u5f00\u5173 switch : false \u8ba4\u8bc1\u65b9\u5f0f\uff1a\u652f\u6301flow\u81ea\u5e26\u7684\u8ba4\u8bc1\u6a21\u5757\u8ba4\u8bc1\u548c\u7b2c\u4e09\u65b9\u670d\u52a1\u8ba4\u8bc1\u3002\u53ef\u901a\u8fc7hook_module\u4fee\u6539\u8ba4\u8bc1\u94a9\u5b50\uff0c\u5f53\u524d\u652f\u6301\u5982\u4e0b\u94a9\u5b50\uff1a client_authentication\u652f\u6301\"fate_flow.hook.flow.client_authentication\"\u548c\"fate_flow.hook.api.client_authentication\", \u5176\u4e2d\u524d\u8005\u662fflow\u7684\u5ba2\u6237\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u540e\u8005\u662f\u7b2c\u4e09\u65b9\u670d\u52a1\u5ba2\u6237\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff1b site_authentication\u652f\u6301\"fate_flow.hook.flow.site_authentication\"\u548c\"fate_flow.hook.api.site_authentication\",\u5176\u4e2d\u524d\u8005\u662fflow\u7684\u7ad9\u70b9\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u540e\u8005\u662f\u7b2c\u4e09\u65b9\u670d\u52a1\u7ad9\u70b9\u8ba4\u8bc1\u65b9\u5f0f\u3002 2. \u5ba2\u6237\u7aef\u8ba4\u8bc1 \u00b6 2.1 flow\u8ba4\u8bc1 \u00b6 2.1.1 \u914d\u7f6e \u00b6 hook_module : client_authentication : fate_flow.hook.flow.client_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\" 2.2.2 \u63a5\u53e3\u9274\u6743\u65b9\u5f0f \u00b6 \u5219\u6240\u6709\u5ba2\u6237\u7aef\u53d1\u9001\u5230 Flow \u7684\u8bf7\u6c42\u90fd\u9700\u8981\u589e\u52a0\u4ee5\u4e0b header TIMESTAMP \uff1aUnix timestamp\uff0c\u5355\u4f4d\u6beb\u79d2\uff0c\u5982 1634890066095 \u8868\u793a 2021-10-22 16:07:46 GMT+0800 \uff0c\u6ce8\u610f\u8be5\u65f6\u95f4\u4e0e\u670d\u52a1\u5668\u5f53\u524d\u65f6\u95f4\u7684\u5dee\u8ddd\u4e0d\u80fd\u8d85\u8fc7 60 \u79d2 NONCE \uff1a\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 UUID\uff0c\u5982 782d733e-330f-11ec-8be9-a0369fa972af APP_KEY \uff1a\u9700\u4e0e Flow \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 http_app_key \u4e00\u81f4 SIGNATURE \uff1a\u57fa\u4e8e Flow \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 http_secret_key \u548c\u8bf7\u6c42\u53c2\u6570\u751f\u6210\u7684\u7b7e\u540d 2.2.3 \u7b7e\u540d\u751f\u6210\u65b9\u6cd5 \u00b6 \u6309\u7167\u987a\u5e8f\u7ec4\u5408\u4e0b\u5217\u5185\u5bb9 TIMESTAMP NONCE APP_KEY \u8bf7\u6c42\u8def\u5f84+\u67e5\u8be2\u53c2\u6570\uff0c\u5982\u6ca1\u6709\u67e5\u8be2\u53c2\u6570\u5219\u4e0d\u9700\u8981\u672b\u5c3e\u7684 ? \uff0c\u5982 /v1/job/submit \u6216 /v1/data/upload?table_name=dvisits_hetero_guest&namespace=experiment \u5982\u679c Content-Type \u4e3a application/json \uff0c\u5219\u4e3a\u539f\u59cb JSON\uff0c\u5373 request body\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u6b64\u9879\u4f7f\u7528\u7a7a\u5b57\u7b26\u4e32\u586b\u5145 \u5982\u679c Content-Type \u4e3a application/x-www-form-urlencoded \u6216 multipart/form-data \uff0c\u5219\u9700\u8981\u628a\u6240\u6709\u53c2\u6570\u4ee5\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u5e76 urlencode \uff0c\u8f6c\u7801\u65b9\u5f0f\u53c2\u7167 RFC 3986\uff08\u5373\u9664 a-zA-Z0-9-._~ \u4ee5\u5916\u7684\u5b57\u7b26\u90fd\u8981\u8f6c\u7801\uff09\uff0c\u6ce8\u610f\u6587\u4ef6\u4e0d\u53c2\u4e0e\u7b7e\u540d\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u6b64\u9879\u4f7f\u7528\u7a7a\u5b57\u7b26\u4e32\u586b\u5145 \u628a\u6240\u6709\u53c2\u6570\u7528\u6362\u884c\u7b26 \\n \u8fde\u63a5\u7136\u540e\u4ee5 ASCII \u7f16\u7801 \u4f7f\u7528 HMAC-SHA1 \u7b97\u6cd5\uff0c\u4ee5 Flow \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 http_secret_key \u4e3a\u5bc6\u94a5\uff0c\u7b97\u51fa\u4e8c\u8fdb\u5236\u6458\u8981 \u4f7f\u7528 base64 \u7f16\u7801\u4e8c\u8fdb\u5236\u6458\u8981 2.2.4 \u793a\u4f8b \u00b6 \u53ef\u4ee5\u53c2\u8003 Fate SDK 2.2 \u7b2c\u4e09\u65b9\u670d\u52a1\u8ba4\u8bc1 \u00b6 2.2.1 \u914d\u7f6e \u00b6 hook_module : client_authentication : fate_flow.hook.api.client_authentication authentication : client : switch : true hook_server_name : \"xxx\" 2.2.2 \u63a5\u53e3\u9274\u6743\u65b9\u5f0f \u00b6 \u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5411flow\u6ce8\u518c\u5ba2\u6237\u7aef\u8ba4\u8bc1\u63a5\u53e3\uff0c\u5177\u4f53\u53c2\u8003 \u5ba2\u6237\u7aef\u8ba4\u8bc1\u670d\u52a1\u6ce8\u518c \u82e5\u8ba4\u8bc1\u5931\u8d25\uff0cflow\u4f1a\u76f4\u63a5\u8fd4\u56de\u8ba4\u8bc1\u5931\u8d25\u7ed9\u5ba2\u6237\u7aef\u3002 3. \u7ad9\u70b9\u8ba4\u8bc1 \u00b6 3.1 flow\u8ba4\u8bc1 \u00b6 3.1.1 \u914d\u7f6e \u00b6 party_id : 9999 hook_module : site_authentication : fate_flow.hook.flow.site_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\" 3.1.2 \u8ba4\u8bc1\u65b9\u6848 \u00b6 flow\u542f\u52a8\u65f6\u4f1a\u751f\u6210\u4e00\u5bf9\u516c\u94a5\u548c\u79c1\u94a5\uff0c\u9700\u8981\u548c\u5408\u4f5c\u65b9\u4ea4\u6362\u5f7c\u6b64\u7684\u516c\u94a5\uff0c\u53d1\u9001\u8bf7\u6c42\u65f6\u901a\u8fc7RSA\u7b97\u6cd5\u4f7f\u7528\u516c\u94a5\u751f\u6210\u7b7e\u540d\uff0c\u88ab\u8bf7\u6c42\u7ad9\u70b9\u901a\u8fc7\u5176\u5171\u94a5\u9a8c\u8bc1\u7b7e\u540d\u3002 flow\u63d0\u4f9b\u5bc6\u94a5\u7ba1\u7406cli\uff0c\u5982\u4e0b 3.1.3 \u5bc6\u94a5\u7ba1\u7406 \u00b6 \u6dfb\u52a0\u5408\u4f5c\u65b9\u516c\u94a5 \u7528\u4e8e\u4fdd\u5b58\u5176\u5b83fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f\uff0c\u5373\u4e3a\u548c\u5176\u4ed6\u7ad9\u70b9\u5408\u4f5c flow key save -c fateflow/examples/key/save_public_key.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id key \u662f string \u7ad9\u70b9\u516c\u94a5 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5220\u9664\u5408\u4f5c\u65b9\u516c\u94a5 \u5220\u9664\u5408\u4f5c\u65b9\u7ad9\u70b9\u516c\u94a5\uff0c\u5373\u4e3a\u53d6\u6d88\u5408\u4f5c\u5173\u7cfb flow key delete -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } \u67e5\u8be2\u5171\u94a5 \u7528\u4e8e\u67e5\u8be2\u672c\u65b9\u6216\u5408\u4f5c\u65b9fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f flow key query -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n/wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 3.2 \u7b2c\u4e09\u65b9\u670d\u52a1\u8ba4\u8bc1 \u00b6 3.2.1 \u914d\u7f6e \u00b6 hook_module : site_authentication : fate_flow.hook.api.site_authentication authentication : site : switch : true hook_server_name : \"xxx\" 3.2.2 \u63a5\u53e3\u9274\u6743\u65b9\u5f0f \u00b6 \u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5411flow\u6ce8\u518c\u7ad9\u70b9\u8ba4\u8bc1\u63a5\u53e3\uff0c\u5177\u4f53\u53c2\u8003 \u7ad9\u70b9\u8ba4\u8bc1\u670d\u52a1\u6ce8\u518c \u82e5\u8ba4\u8bc1\u5931\u8d25\uff0cflow\u4f1a\u76f4\u63a5\u8fd4\u56de\u8ba4\u8bc1\u5931\u8d25\u7ed9\u53d1\u8d77\u65b9\u3002","title":"\u8ba4\u8bc1\u65b9\u6848"},{"location":"zh/fate_flow_authority_management/#_1","text":"","title":"\u8ba4\u8bc1\u65b9\u6848"},{"location":"zh/fate_flow_authority_management/#1","text":"\u8ba4\u8bc1\u5305\u542b\uff1a\u5ba2\u6237\u7aef\u8ba4\u8bc1\u548c\u7ad9\u70b9\u8ba4\u8bc1 \u8ba4\u8bc1\u914d\u7f6e: $FATE_BASE/conf/service_conf.yaml \uff1a # \u7ad9\u70b9\u9274\u6743\u65f6\u9700\u8981\u914d\u7f6e\u672c\u65b9\u7ad9\u70b9id party_id : # \u94a9\u5b50\u6a21\u5757\uff0c\u9700\u8981\u6839\u636e\u4e0d\u540c\u573a\u666f\u914d\u7f6e\u4e0d\u540c\u7684\u94a9\u5b50 hook_module : client_authentication : fate_flow.hook.flow.client_authentication site_authentication : fate_flow.hook.flow.site_authentication # \u7b2c\u4e09\u65b9\u8ba4\u8bc1\u670d\u52a1\u540d hook_server_name : authentication : client : # \u5ba2\u6237\u7aef\u8ba4\u8bc1\u5f00\u5173 switch : false http_app_key : http_secret_key : site : # \u7ad9\u70b9\u8ba4\u8bc1\u5f00\u5173 switch : false \u8ba4\u8bc1\u65b9\u5f0f\uff1a\u652f\u6301flow\u81ea\u5e26\u7684\u8ba4\u8bc1\u6a21\u5757\u8ba4\u8bc1\u548c\u7b2c\u4e09\u65b9\u670d\u52a1\u8ba4\u8bc1\u3002\u53ef\u901a\u8fc7hook_module\u4fee\u6539\u8ba4\u8bc1\u94a9\u5b50\uff0c\u5f53\u524d\u652f\u6301\u5982\u4e0b\u94a9\u5b50\uff1a client_authentication\u652f\u6301\"fate_flow.hook.flow.client_authentication\"\u548c\"fate_flow.hook.api.client_authentication\", \u5176\u4e2d\u524d\u8005\u662fflow\u7684\u5ba2\u6237\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u540e\u8005\u662f\u7b2c\u4e09\u65b9\u670d\u52a1\u5ba2\u6237\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff1b site_authentication\u652f\u6301\"fate_flow.hook.flow.site_authentication\"\u548c\"fate_flow.hook.api.site_authentication\",\u5176\u4e2d\u524d\u8005\u662fflow\u7684\u7ad9\u70b9\u7aef\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u540e\u8005\u662f\u7b2c\u4e09\u65b9\u670d\u52a1\u7ad9\u70b9\u8ba4\u8bc1\u65b9\u5f0f\u3002","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_authority_management/#2","text":"","title":"2. \u5ba2\u6237\u7aef\u8ba4\u8bc1"},{"location":"zh/fate_flow_authority_management/#21-flow","text":"","title":"2.1 flow\u8ba4\u8bc1"},{"location":"zh/fate_flow_authority_management/#211","text":"hook_module : client_authentication : fate_flow.hook.flow.client_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\"","title":"2.1.1 \u914d\u7f6e"},{"location":"zh/fate_flow_authority_management/#222","text":"\u5219\u6240\u6709\u5ba2\u6237\u7aef\u53d1\u9001\u5230 Flow \u7684\u8bf7\u6c42\u90fd\u9700\u8981\u589e\u52a0\u4ee5\u4e0b header TIMESTAMP \uff1aUnix timestamp\uff0c\u5355\u4f4d\u6beb\u79d2\uff0c\u5982 1634890066095 \u8868\u793a 2021-10-22 16:07:46 GMT+0800 \uff0c\u6ce8\u610f\u8be5\u65f6\u95f4\u4e0e\u670d\u52a1\u5668\u5f53\u524d\u65f6\u95f4\u7684\u5dee\u8ddd\u4e0d\u80fd\u8d85\u8fc7 60 \u79d2 NONCE \uff1a\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 UUID\uff0c\u5982 782d733e-330f-11ec-8be9-a0369fa972af APP_KEY \uff1a\u9700\u4e0e Flow \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 http_app_key \u4e00\u81f4 SIGNATURE \uff1a\u57fa\u4e8e Flow \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 http_secret_key \u548c\u8bf7\u6c42\u53c2\u6570\u751f\u6210\u7684\u7b7e\u540d","title":"2.2.2 \u63a5\u53e3\u9274\u6743\u65b9\u5f0f"},{"location":"zh/fate_flow_authority_management/#223","text":"\u6309\u7167\u987a\u5e8f\u7ec4\u5408\u4e0b\u5217\u5185\u5bb9 TIMESTAMP NONCE APP_KEY \u8bf7\u6c42\u8def\u5f84+\u67e5\u8be2\u53c2\u6570\uff0c\u5982\u6ca1\u6709\u67e5\u8be2\u53c2\u6570\u5219\u4e0d\u9700\u8981\u672b\u5c3e\u7684 ? \uff0c\u5982 /v1/job/submit \u6216 /v1/data/upload?table_name=dvisits_hetero_guest&namespace=experiment \u5982\u679c Content-Type \u4e3a application/json \uff0c\u5219\u4e3a\u539f\u59cb JSON\uff0c\u5373 request body\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u6b64\u9879\u4f7f\u7528\u7a7a\u5b57\u7b26\u4e32\u586b\u5145 \u5982\u679c Content-Type \u4e3a application/x-www-form-urlencoded \u6216 multipart/form-data \uff0c\u5219\u9700\u8981\u628a\u6240\u6709\u53c2\u6570\u4ee5\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u5e76 urlencode \uff0c\u8f6c\u7801\u65b9\u5f0f\u53c2\u7167 RFC 3986\uff08\u5373\u9664 a-zA-Z0-9-._~ \u4ee5\u5916\u7684\u5b57\u7b26\u90fd\u8981\u8f6c\u7801\uff09\uff0c\u6ce8\u610f\u6587\u4ef6\u4e0d\u53c2\u4e0e\u7b7e\u540d\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u6b64\u9879\u4f7f\u7528\u7a7a\u5b57\u7b26\u4e32\u586b\u5145 \u628a\u6240\u6709\u53c2\u6570\u7528\u6362\u884c\u7b26 \\n \u8fde\u63a5\u7136\u540e\u4ee5 ASCII \u7f16\u7801 \u4f7f\u7528 HMAC-SHA1 \u7b97\u6cd5\uff0c\u4ee5 Flow \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 http_secret_key \u4e3a\u5bc6\u94a5\uff0c\u7b97\u51fa\u4e8c\u8fdb\u5236\u6458\u8981 \u4f7f\u7528 base64 \u7f16\u7801\u4e8c\u8fdb\u5236\u6458\u8981","title":"2.2.3 \u7b7e\u540d\u751f\u6210\u65b9\u6cd5"},{"location":"zh/fate_flow_authority_management/#224","text":"\u53ef\u4ee5\u53c2\u8003 Fate SDK","title":"2.2.4 \u793a\u4f8b"},{"location":"zh/fate_flow_authority_management/#22","text":"","title":"2.2 \u7b2c\u4e09\u65b9\u670d\u52a1\u8ba4\u8bc1"},{"location":"zh/fate_flow_authority_management/#221","text":"hook_module : client_authentication : fate_flow.hook.api.client_authentication authentication : client : switch : true hook_server_name : \"xxx\"","title":"2.2.1 \u914d\u7f6e"},{"location":"zh/fate_flow_authority_management/#222_1","text":"\u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5411flow\u6ce8\u518c\u5ba2\u6237\u7aef\u8ba4\u8bc1\u63a5\u53e3\uff0c\u5177\u4f53\u53c2\u8003 \u5ba2\u6237\u7aef\u8ba4\u8bc1\u670d\u52a1\u6ce8\u518c \u82e5\u8ba4\u8bc1\u5931\u8d25\uff0cflow\u4f1a\u76f4\u63a5\u8fd4\u56de\u8ba4\u8bc1\u5931\u8d25\u7ed9\u5ba2\u6237\u7aef\u3002","title":"2.2.2 \u63a5\u53e3\u9274\u6743\u65b9\u5f0f"},{"location":"zh/fate_flow_authority_management/#3","text":"","title":"3. \u7ad9\u70b9\u8ba4\u8bc1"},{"location":"zh/fate_flow_authority_management/#31-flow","text":"","title":"3.1 flow\u8ba4\u8bc1"},{"location":"zh/fate_flow_authority_management/#311","text":"party_id : 9999 hook_module : site_authentication : fate_flow.hook.flow.site_authentication authentication : client : switch : true http_app_key : \"xxx\" http_secret_key : \"xxx\"","title":"3.1.1 \u914d\u7f6e"},{"location":"zh/fate_flow_authority_management/#312","text":"flow\u542f\u52a8\u65f6\u4f1a\u751f\u6210\u4e00\u5bf9\u516c\u94a5\u548c\u79c1\u94a5\uff0c\u9700\u8981\u548c\u5408\u4f5c\u65b9\u4ea4\u6362\u5f7c\u6b64\u7684\u516c\u94a5\uff0c\u53d1\u9001\u8bf7\u6c42\u65f6\u901a\u8fc7RSA\u7b97\u6cd5\u4f7f\u7528\u516c\u94a5\u751f\u6210\u7b7e\u540d\uff0c\u88ab\u8bf7\u6c42\u7ad9\u70b9\u901a\u8fc7\u5176\u5171\u94a5\u9a8c\u8bc1\u7b7e\u540d\u3002 flow\u63d0\u4f9b\u5bc6\u94a5\u7ba1\u7406cli\uff0c\u5982\u4e0b","title":"3.1.2 \u8ba4\u8bc1\u65b9\u6848"},{"location":"zh/fate_flow_authority_management/#313","text":"\u6dfb\u52a0\u5408\u4f5c\u65b9\u516c\u94a5 \u7528\u4e8e\u4fdd\u5b58\u5176\u5b83fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f\uff0c\u5373\u4e3a\u548c\u5176\u4ed6\u7ad9\u70b9\u5408\u4f5c flow key save -c fateflow/examples/key/save_public_key.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id key \u662f string \u7ad9\u70b9\u516c\u94a5 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5220\u9664\u5408\u4f5c\u65b9\u516c\u94a5 \u5220\u9664\u5408\u4f5c\u65b9\u7ad9\u70b9\u516c\u94a5\uff0c\u5373\u4e3a\u53d6\u6d88\u5408\u4f5c\u5173\u7cfb flow key delete -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } \u67e5\u8be2\u5171\u94a5 \u7528\u4e8e\u67e5\u8be2\u672c\u65b9\u6216\u5408\u4f5c\u65b9fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f flow key query -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n/wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3.1.3 \u5bc6\u94a5\u7ba1\u7406"},{"location":"zh/fate_flow_authority_management/#32","text":"","title":"3.2 \u7b2c\u4e09\u65b9\u670d\u52a1\u8ba4\u8bc1"},{"location":"zh/fate_flow_authority_management/#321","text":"hook_module : site_authentication : fate_flow.hook.api.site_authentication authentication : site : switch : true hook_server_name : \"xxx\"","title":"3.2.1 \u914d\u7f6e"},{"location":"zh/fate_flow_authority_management/#322","text":"\u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5411flow\u6ce8\u518c\u7ad9\u70b9\u8ba4\u8bc1\u63a5\u53e3\uff0c\u5177\u4f53\u53c2\u8003 \u7ad9\u70b9\u8ba4\u8bc1\u670d\u52a1\u6ce8\u518c \u82e5\u8ba4\u8bc1\u5931\u8d25\uff0cflow\u4f1a\u76f4\u63a5\u8fd4\u56de\u8ba4\u8bc1\u5931\u8d25\u7ed9\u53d1\u8d77\u65b9\u3002","title":"3.2.2 \u63a5\u53e3\u9274\u6743\u65b9\u5f0f"},{"location":"zh/fate_flow_client/","text":"\u547d\u4ee4\u884c\u5ba2\u6237\u7aef \u00b6 \u8bf4\u660e \u00b6 \u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u4f7f\u7528 FATE Flow Client \uff0c\u5176\u901a\u5e38\u5305\u542b\u5728 FATE Client \u4e2d\uff0c FATE Client \u5305\u542b\u4e86 FATE\u9879\u76ee \u591a\u4e2a\u5ba2\u6237\u7aef\uff1a Pipeline , FATE Flow Client \u548c FATE Test \u4ecb\u7ecd FATE Flow Client \u63d0\u4f9b\u7684\u547d\u4ee4\u884c\uff0c\u6240\u6709\u7684\u547d\u4ee4\u5c06\u6709\u4e00\u4e2a\u5171\u6709\u8c03\u7528\u5165\u53e3\uff0c\u60a8\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u952e\u5165 flow \u4ee5\u83b7\u53d6\u6240\u6709\u7684\u547d\u4ee4\u5206\u7c7b\u53ca\u5176\u5b50\u547d\u4ee4\u3002 [ IN ] flow [ OUT ] Usage: flow COMMAND [ OPTIONS ] Fate Flow Client Options\uff1a -h, --help Show this message and exit. Commands\uff1a component Component Operations data Data Operations init Flow CLI Init Command job Job Operations model Model Operations queue Queue Operations table Table Operations task Task Operations \u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u9605\u5982\u4e0b\u6587\u6863\u6216\u4f7f\u7528 flow --help \u547d\u4ee4\u3002 \u4ecb\u7ecd\u6240\u6709\u547d\u4ee4\u4f7f\u7528\u8bf4\u660e \u5b89\u88c5FATE Client \u00b6 \u5728\u7ebf\u5b89\u88c5 \u00b6 FATE Client\u4f1a\u53d1\u5e03\u5230 pypi \uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 pip \u7b49\u5de5\u5177\u5b89\u88c5\u5bf9\u5e94\u7248\u672c\uff0c\u5982 pip install fate-client \u6216\u8005 pip install fate-client == ${ version } \u5728FATE\u96c6\u7fa4\u4e0a\u5b89\u88c5 \u00b6 \u8bf7\u5728\u88c5\u67091.5.1\u53ca\u5176\u4ee5\u4e0a\u7248\u672cfate\u7684\u673a\u5668\u4e2d\u8fdb\u884c\u5b89\u88c5\uff1a \u5b89\u88c5\u547d\u4ee4\uff1a cd $FATE_PROJECT_BASE / # \u8fdb\u5165FATE PYTHON\u7684\u865a\u62df\u73af\u5883 source bin/init_env.sh # \u6267\u884c\u5b89\u88c5 cd fate/python/fate_client && python setup.py install \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u547d\u4ee4\u884c\u952e\u5165 flow \u5e76\u56de\u8f66\uff0c\u83b7\u5f97\u5982\u4e0b\u8fd4\u56de\u5373\u89c6\u4e3a\u5b89\u88c5\u6210\u529f\uff1a Usage: flow [ OPTIONS ] COMMAND [ ARGS ] ... Fate Flow Client Options: -h, --help Show this message and exit. Commands: component Component Operations data Data Operations init Flow CLI Init Command job Job Operations model Model Operations queue Queue Operations table Table Operations tag Tag Operations task Task Operations \u521d\u59cb\u5316 \u00b6 \u5728\u4f7f\u7528fate-client\u4e4b\u524d\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u63a8\u8350\u4f7f\u7528fate\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u547d\u4ee4\u5982\u4e0b\uff1a \u6307\u5b9afateflow\u670d\u52a1\u5730\u5740 \u00b6 # \u6307\u5b9afateflow\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u8fdb\u884c\u521d\u59cb\u5316 flow init --ip 192 .168.0.1 --port 9380 \u901a\u8fc7FATE\u96c6\u7fa4\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6 \u00b6 # \u8fdb\u5165FATE\u7684\u5b89\u88c5\u8def\u5f84\uff0c\u4f8b\u5982/data/projects/fate cd $FATE_PROJECT_BASE / flow init -c conf/service_conf.yaml \u83b7\u5f97\u5982\u4e0b\u8fd4\u56de\u89c6\u4e3a\u521d\u59cb\u5316\u6210\u529f\uff1a { \"retcode\" : 0 , \"retmsg\" : \"Fate Flow CLI has been initialized successfully.\" } \u9a8c\u8bc1 \u00b6 \u4e3b\u8981\u9a8c\u8bc1\u5ba2\u6237\u7aef\u662f\u5426\u80fd\u8fde\u63a5\u4e0a FATE Flow Server \uff0c\u5982\u5c1d\u8bd5\u67e5\u8be2\u5f53\u524d\u7684\u4f5c\u4e1a\u60c5\u51b5 flow job query \u4e00\u822c\u8fd4\u56de\u4e2d\u7684 retcode \u4e3a 0 \u5373\u53ef { \"data\" : [], \"retcode\" : 0 , \"retmsg\" : \"no job could be found\" } \u5982\u8fd4\u56de\u7c7b\u4f3c\u5982\u4e0b\uff0c\u5219\u8868\u660e\u8fde\u63a5\u4e0d\u4e0a\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u60c5\u51b5 { \"retcode\" : 100 , \"retmsg\" : \"Connection refused. Please check if the fate flow service is started\" } Data \u00b6 upload \u00b6 \u7528\u4e8e\u4e0a\u4f20\u5efa\u6a21\u4efb\u52a1\u7684\u8f93\u5165\u6570\u636e\u5230fate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf flow data upload -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e file \u662f string \u6570\u636e\u5b58\u50a8\u8def\u5f84 id_delimiter \u662f string \u6570\u636e\u5206\u9694\u7b26,\u5982\",\" head \u5426 int \u6570\u636e\u662f\u5426\u6709\u8868\u5934 partition \u662f int \u6570\u636e\u5206\u533a\u6570 storage_engine \u5426 string \u5b58\u50a8\u5f15\u64ce\u7c7b\u578b\uff0c\u9ed8\u8ba4\"EGGROLL\"\uff0c\u8fd8\u652f\u6301\"HDFS\",\"LOCALFS\", \"HIVE\"\u7b49 namespace \u662f string \u8868\u547d\u540d\u7a7a\u95f4 table_name \u662f string \u8868\u540d storage_address \u5426 object \u9700\u8981\u586b\u5199\u5bf9\u5e94\u5b58\u50a8\u5f15\u64ce\u7684\u5b58\u50a8\u5730\u5740 use_local_data \u5426 int \u9ed8\u8ba41\uff0c\u4ee3\u8868\u4f7f\u7528client\u673a\u5668\u7684\u6570\u636e;0\u4ee3\u8868\u4f7f\u7528fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u7684\u6570\u636e drop \u5426 int \u662f\u5426\u8986\u76d6\u4e0a\u4f20 extend_sid \u5426 bool \u662f\u5426\u65b0\u589e\u4e00\u5217uuid id\uff0c\u9ed8\u8ba4False auto_increasing_sid \u5426 bool \u65b0\u589e\u7684id\u5217\u662f\u5426\u81ea\u589e(extend_sid\u4e3aTrue\u624d\u4f1a\u751f\u6548), \u9ed8\u8ba4False with_meta \u5426 bool \u662f\u5426\u643a\u5e26meta\u6570\u636e, \u9ed8\u8ba4False meta \u5426 object \u5143\u6570\u636e, \u9ed8\u8ba4\u4e3a\u7a7a\uff0cwith_meta\u4e3atrue\u751f\u6548 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\u610f\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u4f20\u5165meta\u53c2\u6570\uff0c\u4f1a\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u6837\u4f8b eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } upload-history \u00b6 \u7528\u4e8e\u67e5\u8be2\u4e0a\u4f20\u5386\u53f2 flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -l --limit no int \u8fd4\u56de\u6570\u91cf (\u9ed8\u8ba4: 10) -j --job_id no string \u4efb\u52a1ID download \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u6587\u4ef6\u683c\u5f0f\u6570\u636e flow data download -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e output_path \u662f string \u4e0b\u8f7d\u8def\u5f84 table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 \u6837\u4f8b: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } writer \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u5916\u90e8\u5f15\u64ce\u6216\u8005\u5c06\u6570\u636e\u53e6\u5b58\u4e3a\u65b0\u8868 flow data writer -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 storage_engine \u5426 string \u5b58\u50a8\u7c7b\u578b,\u5982\uff1aMYSQL address \u5426 object \u5b58\u50a8\u5730\u5740 output_namespace \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u547d\u540d\u7a7a\u95f4 output_name \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u540d **\u6ce8: storage_engine\u3001address\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u5b58\u50a8\u5230\u6307\u5b9a\u5f15\u64ce\u7684\u529f\u80fd\uff1b output_namespace\u3001output_name\u4e5f\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u53e6\u5b58\u4e3a\u540c\u79cd\u5f15\u64ce\u7684\u65b0\u8868\u529f\u80fd** \u6837\u4f8b: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } Table \u00b6 info \u00b6 \u7528\u4e8e\u67e5\u8be2fate\u8868\u7684\u76f8\u5173\u4fe1\u606f(\u771f\u5b9e\u5b58\u50a8\u5730\u5740,\u6570\u91cf,schema\u7b49) flow table info [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exist\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 \u53ef\u901a\u8fc7table delete\u5220\u9664\u8868\u6570\u636e flow table delete [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 \u53ef\u901a\u8fc7table bind\u5c06\u771f\u5b9e\u5b58\u50a8\u5730\u5740\u6620\u5c04\u5230fate\u5b58\u50a8\u8868 flow table bind [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 engine \u662f string \u5b58\u50a8\u5f15\u64ce, \u652f\u6301\"HDFS\", \"MYSQL\", \"PATH\" adress \u662f object \u771f\u5b9e\u5b58\u50a8\u5730\u5740 drop \u5426 int \u8986\u76d6\u4ee5\u524d\u7684\u4fe1\u606f head \u5426 int \u662f\u5426\u6709\u6570\u636e\u8868\u5934 id_delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26 id_column \u5426 string id\u5b57\u6bb5 feature_column \u5426 array \u7279\u5f81\u5b57\u6bb5 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u5728table bind\u9636\u6bb5\u4f20\u5165meta\u53c2\u6570\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u5f53\u6570\u636e\u7ecf\u8fc7\u4e86\u4e00\u6b21reader\u7ec4\u4ef6\u540e\u4f1a\u66f4\u65b0\u539f\u59cb\u6570\u636e\u7684\u7279\u5f81\u533f\u540d\u4fe1\u606f \u6837\u4f8b hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } disable \u00b6 \u53ef\u901a\u8fc7table disable\u5c06\u8868\u7f6e\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 flow table disable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } enable \u00b6 \u53ef\u901a\u8fc7table enable\u5c06\u8868\u7f6e\u4e3a\u53ef\u7528\u72b6\u6001 flow table enable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } disable-delete \u00b6 \u53ef\u901a\u8fc7disable-delete\u5220\u9664\u5f53\u524d\u4e0d\u53ef\u7528\u7684\u8868 flow table disable-delete \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } Job \u00b6 submit \u00b6 \u901a\u8fc7\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf\u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c flow job submit [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -d, --dsl-path \u662f string job dsl\u7684\u8def\u5f84 -c, --conf-path \u662f string job conf\u7684\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e data.dsl_path string \u4f9d\u636e\u63d0\u4ea4\u7684dsl\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5b9e\u9645\u8fd0\u884cdsl\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.runtime_conf_on_party_path string \u4f9d\u636e\u63d0\u4ea4\u7684conf\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5728\u6bcf\u4e2aparty\u5b9e\u9645\u8fd0\u884cconf\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.board_url string fateboard\u67e5\u770b\u5730\u5740 data.model_info dict \u6a21\u578b\u6807\u8bc6\u4fe1\u606f \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } rerun \u00b6 \u91cd\u65b0\u8fd0\u884c\u67d0\u4e2a\u4f5c\u4e1a flow job rerun [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -cpn, --component-name \u5426 string \u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u91cd\u8dd1\uff0c\u6ca1\u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u82e5\u4e0e\u6307\u5b9a\u7ec4\u4ef6\u6ca1\u6709\u4e0a\u6e38\u4f9d\u8d56\u5173\u7cfb\u5219\u4e0d\u4f1a\u6267\u884c;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u5219\u6574\u4e2a\u4f5c\u4e1a\u91cd\u8dd1 --force \u5426 bool \u4f5c\u4e1a\u5373\u4f7f\u6210\u529f\u4e5f\u91cd\u8dd1;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u4f5c\u4e1a\u5982\u679c\u6210\u529f\uff0c\u5219\u8df3\u8fc7\u91cd\u8dd1 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force parameter-update \u00b6 \u66f4\u65b0\u4f5c\u4e1a\u53c2\u6570 flow job parameter-update [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -c, --conf-path \u662f string \u9700\u8981\u66f4\u65b0\u7684job conf\u7684\u5185\u5bb9\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u7684\u53c2\u6570\u4e0d\u9700\u8981\u586b\u5199 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u66f4\u65b0\u540e\u7684job conf \u6837\u4f8b \u5047\u8bbe\u66f4\u65b0job\u4e2dhetero_lr_0\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u90e8\u5206\u6267\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6548\uff1a flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u91cd\u8dd1\uff1a flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force stop \u00b6 \u53d6\u6d88\u6216\u7ec8\u6b62\u6307\u5b9a\u4efb\u52a1 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID \u6837\u4f8b flow job stop -j $JOB_ID query \u00b6 \u68c0\u7d22\u4efb\u52a1\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID view \u00b6 \u68c0\u7d22\u4efb\u52a1\u6570\u636e\u89c6\u56fe\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job view -j $JOB_ID -s complete config \u00b6 \u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u662f \u89d2\u8272 3 party_id -p --party_id \u662f Party ID 4 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job config -j $JOB_ID -r host -p 10000 --output-path ./examples/ log \u00b6 \u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u65e5\u5fd7\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job log -j JOB_ID --output-path ./examples/ list \u00b6 \u5c55\u793a\u4efb\u52a1\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b \uff1a flow job list flow job list -l 30 dsl \u00b6 \u9884\u6d4bDSL\u6587\u4ef6\u751f\u6210\u5668\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 cpn_list --cpn-list \u5426 \u7528\u6237\u6307\u5b9a\u7ec4\u4ef6\u540d\u5217\u8868 2 cpn_path --cpn-path \u5426 \u7528\u6237\u6307\u5b9a\u5e26\u6709\u7ec4\u4ef6\u540d\u5217\u8868\u7684\u6587\u4ef6\u8def\u5f84 3 train_dsl_path --train-dsl-path \u662f \u8bad\u7ec3dsl\u6587\u4ef6\u8def\u5f84 4 output_path -o --output-path \u5426 \u8f93\u51fa\u76ee\u5f55\u8def\u5f84 \u6837\u4f8b \uff1a flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ Task \u00b6 query \u00b6 \u68c0\u7d22Task\u4fe1\u606f \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 component_name -cpn --component_name \u5426 \u7ec4\u4ef6\u540d 5 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete list \u00b6 \u5c55\u793aTask\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow task list flow task list -l 25 Tracking \u00b6 metrics \u00b6 \u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u4ea7\u751f\u7684\u6240\u6709\u6307\u6807\u540d\u79f0\u5217\u8868 flow tracking metrics [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } metric-all \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u4efb\u52a1\u7684\u6240\u6709\u8f93\u51fa\u6307\u6807 flow tracking metric-all [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa(\u7bc7\u5e45\u6709\u9650\uff0c\u4ec5\u663e\u793a\u90e8\u5206\u6307\u6807\u7684\u6570\u636e\u4e14\u6570\u7ec4\u578b\u6570\u636e\u4e2d\u95f4\u7701\u7565\u4e86\u4e00\u4e9b\u503c): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } parameters \u00b6 \u63d0\u4ea4\u4f5c\u4e1a\u540e\uff0c\u7cfb\u7edf\u4f9d\u636ejob conf\u4e2d\u7684component_parameters\u7ed3\u5408\u7cfb\u7edf\u9ed8\u8ba4\u7ec4\u4ef6\u53c2\u6570\uff0c\u6700\u7ec8\u89e3\u6790\u5f97\u5230\u7684\u5b9e\u9645\u7ec4\u4ef6\u4efb\u52a1\u8fd0\u884c\u53c2\u6570 flow tracking parameters [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } output-data \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u8f93\u51fa flow tracking output-data [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 -o, --output-path \u662f string \u8f93\u51fa\u6570\u636e\u7684\u5b58\u653e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o ./ \u8f93\u51fa: { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory\" } output-data-table \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u8868\u540d flow tracking output-data-table [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } output-model \u00b6 \u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u7684\u8f93\u51fa\u6a21\u578b flow tracking output-model [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } get-summary \u00b6 \u6bcf\u4e2a\u7ec4\u4ef6\u5141\u8bb8\u8bbe\u7f6e\u4e00\u4e9b\u6458\u8981\u4fe1\u606f\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u5206\u6790 flow tracking get-summary [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-source \u00b6 \u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u7236\u8868\u53ca\u6e90\u8868 flow table tracking-source [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero_lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-job \u00b6 \u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u4f7f\u7528\u60c5\u51b5 flow table tracking-job [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"count\" : 2 , \"job\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" } Model \u00b6 load \u00b6 \u5411 Fate-Serving \u52a0\u8f7d deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u662f \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 \u5411 Fate-Serving \u7ed1\u5b9a deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" } import \u00b6 \u4ece\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b\u3002 flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 from_database --from-database \u662f \u4ece\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b \u6837\u4f8b { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } export \u00b6 \u5bfc\u51fa\u6a21\u578b\u5230\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u3002 flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 to_database --to-database \u662f \u5c06\u6a21\u578b\u5bfc\u51fa\u5230\u5b58\u50a8\u5f15\u64ce\u4e2d \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } migrate \u00b6 \u8fc1\u79fb\u6a21\u578b\u3002 flow model migrate -c examples/model/migrate_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 \u6837\u4f8b { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } tag-list \u00b6 \u83b7\u53d6\u6a21\u578b\u7684\u6807\u7b7e\u5217\u8868\u3002 flow model tag-list -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag-model \u00b6 \u4ece\u6a21\u578b\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\u3002 flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag_name -t --tag-name \u5426 \u6807\u7b7e\u540d remove --remove \u662f \u79fb\u9664\u6307\u5b9a\u7684\u6807\u7b7e deploy \u00b6 \u914d\u7f6e\u9884\u6d4b DSL\u3002 flow model deploy --model-id <model_id> --model-version <model_version> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c cpn_list --cpn-list \u662f \u7ec4\u4ef6\u5217\u8868 cpn_path --cpn-path \u662f \u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u7ec4\u4ef6\u5217\u8868 dsl_path --dsl-path \u662f \u9884\u6d4b DSL \u6587\u4ef6 cpn_step_index --cpn-step-index \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step index \u4f8b\u5982 --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step name \u4f8b\u5982 --cpn-step-name cpn_b:foobar \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } } get-predict-dsl \u00b6 \u83b7\u53d6\u9884\u6d4b DSL\u3002 flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84 get-predict-conf \u00b6 \u83b7\u53d6\u6a21\u578b\u9884\u6d4b\u6a21\u677f\u3002 flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84 get-model-info \u00b6 \u83b7\u53d6\u6a21\u578b\u4fe1\u606f\u3002 flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u662f Party \u89d2\u8272 party_id -p --party-id \u662f Party ID detail --detail \u662f \u5c55\u793a\u8be6\u7ec6\u4fe1\u606f homo-convert \u00b6 \u57fa\u4e8e\u6a2a\u5411\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u751f\u6210\u5176\u4ed6 ML \u6846\u67b6\u7684\u6a21\u578b\u6587\u4ef6\u3002 flow model homo-convert -c examples/model/homo_convert_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 homo-deploy \u00b6 \u5c06\u6a2a\u5411\u8bad\u7ec3\u540e\u4f7f\u7528 homo-convert \u751f\u6210\u7684\u6a21\u578b\u90e8\u7f72\u5230\u5728\u7ebf\u63a8\u7406\u7cfb\u7edf\u4e2d\uff0c\u5f53\u524d\u652f\u6301\u521b\u5efa\u57fa\u4e8e KFServing \u7684\u63a8\u7406\u670d\u52a1\u3002 flow model homo-deploy -c examples/model/homo_deploy_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 Checkpoint \u00b6 list \u00b6 \u83b7\u53d6 Checkpoint \u6a21\u578b\u5217\u8868\u3002 flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] } get \u00b6 \u83b7\u53d6 Checkpoint \u6a21\u578b\u4fe1\u606f\u3002 flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d step_index --step-index \u662f Step index\uff0c\u4e0d\u53ef\u4e0e step_name \u540c\u65f6\u4f7f\u7528 step_name --step-name \u662f Step name\uff0c\u4e0d\u53ef\u4e0e step_index \u540c\u65f6\u4f7f\u7528 \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } } Provider \u00b6 list \u00b6 \u5217\u51fa\u5f53\u524d\u6240\u6709\u7ec4\u4ef6\u63d0\u4f9b\u8005\u53ca\u5176\u63d0\u4f9b\u7ec4\u4ef6\u4fe1\u606f flow provider list [ options ] \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b \u8f93\u51fa: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5305\u542b \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u7684 \u540d\u79f0 , \u7248\u672c\u53f7 , \u4ee3\u7801\u8def\u5f84 , \u63d0\u4f9b\u7684\u7ec4\u4ef6\u5217\u8868 register \u00b6 \u6ce8\u518c\u4e00\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u8005 flow provider register [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json \u914d\u7f6e\u6587\u4ef6\uff1a { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } \u8f93\u51fa: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Resource \u00b6 query \u00b6 \u7528\u4e8e\u67e5\u8be2fate\u7cfb\u7edf\u8d44\u6e90 flow resource query \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } return \u00b6 \u7528\u4e8e\u5f52\u8fd8\u67d0\u4e2ajob\u7684\u8d44\u6e90 flow resource return [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e job_id \u662f string \u4efb\u52a1id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } Privilege \u00b6 grant \u00b6 \u6dfb\u52a0\u6743\u9650 flow privilege grant -c fateflow/examples/permission/grant.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 \u5220\u9664\u6743\u9650 flow privilege delete -c fateflow/examples/permission/delete.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868\uff0c \"*\"\u4e3a\u6240\u6709\u6570\u636e\u96c6 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } query \u00b6 \u67e5\u8be2\u6743\u9650 flow privilege query -p 10000 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } Tag \u00b6 create \u00b6 \u521b\u5efa\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 tag_\u53c2\u6570\u4ecb\u7ecd -d --tag-desc \u5426 \u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag create -t tag1 -d \"This is the \u53c2\u6570\u4ecb\u7ecd of tag1.\" flow tag create -t tag2 update \u00b6 \u66f4\u65b0\u6807\u7b7e\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 new_tag_name --new-tag-name \u5426 \u65b0\u6807\u7b7e\u540d 3 new_tag_desc --new-tag-desc \u5426 \u65b0\u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the new \u53c2\u6570\u4ecb\u7ecd.\" list \u00b6 \u5c55\u793a\u6807\u7b7e\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow tag list flow tag list -l 3 query \u00b6 \u68c0\u7d22\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 with_model --with-model \u5426 \u5982\u679c\u6307\u5b9a\uff0c\u5177\u6709\u8be5\u6807\u7b7e\u7684\u6a21\u578b\u4fe1\u606f\u5c06\u88ab\u5c55\u793a \u6837\u4f8b flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model delete \u00b6 \u5220\u9664\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d \u6837\u4f8b flow tag delete -t tag1 Server \u00b6 versions \u00b6 \u5217\u51fa\u6240\u6709\u76f8\u5173\u7cfb\u7edf\u7248\u672c\u53f7 flow server versions \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server versions \u8f93\u51fa: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } reload \u00b6 \u5982\u4e0b\u914d\u7f6e\u9879\u5728 reload \u540e\u4f1a\u91cd\u65b0\u751f\u6548 $FATE_PROJECT_BASE/conf/service_conf.yaml\u4e2d# engine services\u540e\u7684\u6240\u6709\u914d\u7f6e $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml\u4e2d\u6240\u6709\u914d\u7f6e flow server reload \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server reload \u8f93\u51fa: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"\u547d\u4ee4\u884c\u5ba2\u6237\u7aef"},{"location":"zh/fate_flow_client/#_1","text":"","title":"\u547d\u4ee4\u884c\u5ba2\u6237\u7aef"},{"location":"zh/fate_flow_client/#_2","text":"\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5\u4f7f\u7528 FATE Flow Client \uff0c\u5176\u901a\u5e38\u5305\u542b\u5728 FATE Client \u4e2d\uff0c FATE Client \u5305\u542b\u4e86 FATE\u9879\u76ee \u591a\u4e2a\u5ba2\u6237\u7aef\uff1a Pipeline , FATE Flow Client \u548c FATE Test \u4ecb\u7ecd FATE Flow Client \u63d0\u4f9b\u7684\u547d\u4ee4\u884c\uff0c\u6240\u6709\u7684\u547d\u4ee4\u5c06\u6709\u4e00\u4e2a\u5171\u6709\u8c03\u7528\u5165\u53e3\uff0c\u60a8\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u952e\u5165 flow \u4ee5\u83b7\u53d6\u6240\u6709\u7684\u547d\u4ee4\u5206\u7c7b\u53ca\u5176\u5b50\u547d\u4ee4\u3002 [ IN ] flow [ OUT ] Usage: flow COMMAND [ OPTIONS ] Fate Flow Client Options\uff1a -h, --help Show this message and exit. Commands\uff1a component Component Operations data Data Operations init Flow CLI Init Command job Job Operations model Model Operations queue Queue Operations table Table Operations task Task Operations \u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u9605\u5982\u4e0b\u6587\u6863\u6216\u4f7f\u7528 flow --help \u547d\u4ee4\u3002 \u4ecb\u7ecd\u6240\u6709\u547d\u4ee4\u4f7f\u7528\u8bf4\u660e","title":"\u8bf4\u660e"},{"location":"zh/fate_flow_client/#fate-client","text":"","title":"\u5b89\u88c5FATE Client"},{"location":"zh/fate_flow_client/#_3","text":"FATE Client\u4f1a\u53d1\u5e03\u5230 pypi \uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 pip \u7b49\u5de5\u5177\u5b89\u88c5\u5bf9\u5e94\u7248\u672c\uff0c\u5982 pip install fate-client \u6216\u8005 pip install fate-client == ${ version }","title":"\u5728\u7ebf\u5b89\u88c5"},{"location":"zh/fate_flow_client/#fate","text":"\u8bf7\u5728\u88c5\u67091.5.1\u53ca\u5176\u4ee5\u4e0a\u7248\u672cfate\u7684\u673a\u5668\u4e2d\u8fdb\u884c\u5b89\u88c5\uff1a \u5b89\u88c5\u547d\u4ee4\uff1a cd $FATE_PROJECT_BASE / # \u8fdb\u5165FATE PYTHON\u7684\u865a\u62df\u73af\u5883 source bin/init_env.sh # \u6267\u884c\u5b89\u88c5 cd fate/python/fate_client && python setup.py install \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u5728\u547d\u4ee4\u884c\u952e\u5165 flow \u5e76\u56de\u8f66\uff0c\u83b7\u5f97\u5982\u4e0b\u8fd4\u56de\u5373\u89c6\u4e3a\u5b89\u88c5\u6210\u529f\uff1a Usage: flow [ OPTIONS ] COMMAND [ ARGS ] ... Fate Flow Client Options: -h, --help Show this message and exit. Commands: component Component Operations data Data Operations init Flow CLI Init Command job Job Operations model Model Operations queue Queue Operations table Table Operations tag Tag Operations task Task Operations","title":"\u5728FATE\u96c6\u7fa4\u4e0a\u5b89\u88c5"},{"location":"zh/fate_flow_client/#_4","text":"\u5728\u4f7f\u7528fate-client\u4e4b\u524d\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u63a8\u8350\u4f7f\u7528fate\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u547d\u4ee4\u5982\u4e0b\uff1a","title":"\u521d\u59cb\u5316"},{"location":"zh/fate_flow_client/#fateflow","text":"# \u6307\u5b9afateflow\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u8fdb\u884c\u521d\u59cb\u5316 flow init --ip 192 .168.0.1 --port 9380","title":"\u6307\u5b9afateflow\u670d\u52a1\u5730\u5740"},{"location":"zh/fate_flow_client/#fate_1","text":"# \u8fdb\u5165FATE\u7684\u5b89\u88c5\u8def\u5f84\uff0c\u4f8b\u5982/data/projects/fate cd $FATE_PROJECT_BASE / flow init -c conf/service_conf.yaml \u83b7\u5f97\u5982\u4e0b\u8fd4\u56de\u89c6\u4e3a\u521d\u59cb\u5316\u6210\u529f\uff1a { \"retcode\" : 0 , \"retmsg\" : \"Fate Flow CLI has been initialized successfully.\" }","title":"\u901a\u8fc7FATE\u96c6\u7fa4\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"zh/fate_flow_client/#_5","text":"\u4e3b\u8981\u9a8c\u8bc1\u5ba2\u6237\u7aef\u662f\u5426\u80fd\u8fde\u63a5\u4e0a FATE Flow Server \uff0c\u5982\u5c1d\u8bd5\u67e5\u8be2\u5f53\u524d\u7684\u4f5c\u4e1a\u60c5\u51b5 flow job query \u4e00\u822c\u8fd4\u56de\u4e2d\u7684 retcode \u4e3a 0 \u5373\u53ef { \"data\" : [], \"retcode\" : 0 , \"retmsg\" : \"no job could be found\" } \u5982\u8fd4\u56de\u7c7b\u4f3c\u5982\u4e0b\uff0c\u5219\u8868\u660e\u8fde\u63a5\u4e0d\u4e0a\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u60c5\u51b5 { \"retcode\" : 100 , \"retmsg\" : \"Connection refused. Please check if the fate flow service is started\" }","title":"\u9a8c\u8bc1"},{"location":"zh/fate_flow_client/#upload","text":"\u7528\u4e8e\u4e0a\u4f20\u5efa\u6a21\u4efb\u52a1\u7684\u8f93\u5165\u6570\u636e\u5230fate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf flow data upload -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e file \u662f string \u6570\u636e\u5b58\u50a8\u8def\u5f84 id_delimiter \u662f string \u6570\u636e\u5206\u9694\u7b26,\u5982\",\" head \u5426 int \u6570\u636e\u662f\u5426\u6709\u8868\u5934 partition \u662f int \u6570\u636e\u5206\u533a\u6570 storage_engine \u5426 string \u5b58\u50a8\u5f15\u64ce\u7c7b\u578b\uff0c\u9ed8\u8ba4\"EGGROLL\"\uff0c\u8fd8\u652f\u6301\"HDFS\",\"LOCALFS\", \"HIVE\"\u7b49 namespace \u662f string \u8868\u547d\u540d\u7a7a\u95f4 table_name \u662f string \u8868\u540d storage_address \u5426 object \u9700\u8981\u586b\u5199\u5bf9\u5e94\u5b58\u50a8\u5f15\u64ce\u7684\u5b58\u50a8\u5730\u5740 use_local_data \u5426 int \u9ed8\u8ba41\uff0c\u4ee3\u8868\u4f7f\u7528client\u673a\u5668\u7684\u6570\u636e;0\u4ee3\u8868\u4f7f\u7528fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u7684\u6570\u636e drop \u5426 int \u662f\u5426\u8986\u76d6\u4e0a\u4f20 extend_sid \u5426 bool \u662f\u5426\u65b0\u589e\u4e00\u5217uuid id\uff0c\u9ed8\u8ba4False auto_increasing_sid \u5426 bool \u65b0\u589e\u7684id\u5217\u662f\u5426\u81ea\u589e(extend_sid\u4e3aTrue\u624d\u4f1a\u751f\u6548), \u9ed8\u8ba4False with_meta \u5426 bool \u662f\u5426\u643a\u5e26meta\u6570\u636e, \u9ed8\u8ba4False meta \u5426 object \u5143\u6570\u636e, \u9ed8\u8ba4\u4e3a\u7a7a\uff0cwith_meta\u4e3atrue\u751f\u6548 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\u610f\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u4f20\u5165meta\u53c2\u6570\uff0c\u4f1a\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u6837\u4f8b eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"upload"},{"location":"zh/fate_flow_client/#upload-history","text":"\u7528\u4e8e\u67e5\u8be2\u4e0a\u4f20\u5386\u53f2 flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -l --limit no int \u8fd4\u56de\u6570\u91cf (\u9ed8\u8ba4: 10) -j --job_id no string \u4efb\u52a1ID","title":"upload-history"},{"location":"zh/fate_flow_client/#download","text":"\u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u6587\u4ef6\u683c\u5f0f\u6570\u636e flow data download -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e output_path \u662f string \u4e0b\u8f7d\u8def\u5f84 table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 \u6837\u4f8b: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"download"},{"location":"zh/fate_flow_client/#writer","text":"\u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u5916\u90e8\u5f15\u64ce\u6216\u8005\u5c06\u6570\u636e\u53e6\u5b58\u4e3a\u65b0\u8868 flow data writer -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 storage_engine \u5426 string \u5b58\u50a8\u7c7b\u578b,\u5982\uff1aMYSQL address \u5426 object \u5b58\u50a8\u5730\u5740 output_namespace \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u547d\u540d\u7a7a\u95f4 output_name \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u540d **\u6ce8: storage_engine\u3001address\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u5b58\u50a8\u5230\u6307\u5b9a\u5f15\u64ce\u7684\u529f\u80fd\uff1b output_namespace\u3001output_name\u4e5f\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u53e6\u5b58\u4e3a\u540c\u79cd\u5f15\u64ce\u7684\u65b0\u8868\u529f\u80fd** \u6837\u4f8b: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"writer"},{"location":"zh/fate_flow_client/#info","text":"\u7528\u4e8e\u67e5\u8be2fate\u8868\u7684\u76f8\u5173\u4fe1\u606f(\u771f\u5b9e\u5b58\u50a8\u5730\u5740,\u6570\u91cf,schema\u7b49) flow table info [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exist\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"info"},{"location":"zh/fate_flow_client/#delete","text":"\u53ef\u901a\u8fc7table delete\u5220\u9664\u8868\u6570\u636e flow table delete [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"zh/fate_flow_client/#bind","text":"\u53ef\u901a\u8fc7table bind\u5c06\u771f\u5b9e\u5b58\u50a8\u5730\u5740\u6620\u5c04\u5230fate\u5b58\u50a8\u8868 flow table bind [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 engine \u662f string \u5b58\u50a8\u5f15\u64ce, \u652f\u6301\"HDFS\", \"MYSQL\", \"PATH\" adress \u662f object \u771f\u5b9e\u5b58\u50a8\u5730\u5740 drop \u5426 int \u8986\u76d6\u4ee5\u524d\u7684\u4fe1\u606f head \u5426 int \u662f\u5426\u6709\u6570\u636e\u8868\u5934 id_delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26 id_column \u5426 string id\u5b57\u6bb5 feature_column \u5426 array \u7279\u5f81\u5b57\u6bb5 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u5728table bind\u9636\u6bb5\u4f20\u5165meta\u53c2\u6570\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u5f53\u6570\u636e\u7ecf\u8fc7\u4e86\u4e00\u6b21reader\u7ec4\u4ef6\u540e\u4f1a\u66f4\u65b0\u539f\u59cb\u6570\u636e\u7684\u7279\u5f81\u533f\u540d\u4fe1\u606f \u6837\u4f8b hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"bind"},{"location":"zh/fate_flow_client/#disable","text":"\u53ef\u901a\u8fc7table disable\u5c06\u8868\u7f6e\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 flow table disable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable"},{"location":"zh/fate_flow_client/#enable","text":"\u53ef\u901a\u8fc7table enable\u5c06\u8868\u7f6e\u4e3a\u53ef\u7528\u72b6\u6001 flow table enable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"enable"},{"location":"zh/fate_flow_client/#disable-delete","text":"\u53ef\u901a\u8fc7disable-delete\u5220\u9664\u5f53\u524d\u4e0d\u53ef\u7528\u7684\u8868 flow table disable-delete \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable-delete"},{"location":"zh/fate_flow_client/#submit","text":"\u901a\u8fc7\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf\u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c flow job submit [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -d, --dsl-path \u662f string job dsl\u7684\u8def\u5f84 -c, --conf-path \u662f string job conf\u7684\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e data.dsl_path string \u4f9d\u636e\u63d0\u4ea4\u7684dsl\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5b9e\u9645\u8fd0\u884cdsl\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.runtime_conf_on_party_path string \u4f9d\u636e\u63d0\u4ea4\u7684conf\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5728\u6bcf\u4e2aparty\u5b9e\u9645\u8fd0\u884cconf\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.board_url string fateboard\u67e5\u770b\u5730\u5740 data.model_info dict \u6a21\u578b\u6807\u8bc6\u4fe1\u606f \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"submit"},{"location":"zh/fate_flow_client/#rerun","text":"\u91cd\u65b0\u8fd0\u884c\u67d0\u4e2a\u4f5c\u4e1a flow job rerun [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -cpn, --component-name \u5426 string \u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u91cd\u8dd1\uff0c\u6ca1\u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u82e5\u4e0e\u6307\u5b9a\u7ec4\u4ef6\u6ca1\u6709\u4e0a\u6e38\u4f9d\u8d56\u5173\u7cfb\u5219\u4e0d\u4f1a\u6267\u884c;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u5219\u6574\u4e2a\u4f5c\u4e1a\u91cd\u8dd1 --force \u5426 bool \u4f5c\u4e1a\u5373\u4f7f\u6210\u529f\u4e5f\u91cd\u8dd1;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u4f5c\u4e1a\u5982\u679c\u6210\u529f\uff0c\u5219\u8df3\u8fc7\u91cd\u8dd1 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force","title":"rerun"},{"location":"zh/fate_flow_client/#parameter-update","text":"\u66f4\u65b0\u4f5c\u4e1a\u53c2\u6570 flow job parameter-update [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -c, --conf-path \u662f string \u9700\u8981\u66f4\u65b0\u7684job conf\u7684\u5185\u5bb9\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u7684\u53c2\u6570\u4e0d\u9700\u8981\u586b\u5199 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u66f4\u65b0\u540e\u7684job conf \u6837\u4f8b \u5047\u8bbe\u66f4\u65b0job\u4e2dhetero_lr_0\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u90e8\u5206\u6267\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6548\uff1a flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u91cd\u8dd1\uff1a flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force","title":"parameter-update"},{"location":"zh/fate_flow_client/#stop","text":"\u53d6\u6d88\u6216\u7ec8\u6b62\u6307\u5b9a\u4efb\u52a1 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID \u6837\u4f8b flow job stop -j $JOB_ID","title":"stop"},{"location":"zh/fate_flow_client/#query","text":"\u68c0\u7d22\u4efb\u52a1\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID","title":"query"},{"location":"zh/fate_flow_client/#view","text":"\u68c0\u7d22\u4efb\u52a1\u6570\u636e\u89c6\u56fe\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job view -j $JOB_ID -s complete","title":"view"},{"location":"zh/fate_flow_client/#config","text":"\u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u662f \u89d2\u8272 3 party_id -p --party_id \u662f Party ID 4 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job config -j $JOB_ID -r host -p 10000 --output-path ./examples/","title":"config"},{"location":"zh/fate_flow_client/#log","text":"\u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u65e5\u5fd7\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job log -j JOB_ID --output-path ./examples/","title":"log"},{"location":"zh/fate_flow_client/#list","text":"\u5c55\u793a\u4efb\u52a1\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b \uff1a flow job list flow job list -l 30","title":"list"},{"location":"zh/fate_flow_client/#dsl","text":"\u9884\u6d4bDSL\u6587\u4ef6\u751f\u6210\u5668\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 cpn_list --cpn-list \u5426 \u7528\u6237\u6307\u5b9a\u7ec4\u4ef6\u540d\u5217\u8868 2 cpn_path --cpn-path \u5426 \u7528\u6237\u6307\u5b9a\u5e26\u6709\u7ec4\u4ef6\u540d\u5217\u8868\u7684\u6587\u4ef6\u8def\u5f84 3 train_dsl_path --train-dsl-path \u662f \u8bad\u7ec3dsl\u6587\u4ef6\u8def\u5f84 4 output_path -o --output-path \u5426 \u8f93\u51fa\u76ee\u5f55\u8def\u5f84 \u6837\u4f8b \uff1a flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/","title":"dsl"},{"location":"zh/fate_flow_client/#query_1","text":"\u68c0\u7d22Task\u4fe1\u606f \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 component_name -cpn --component_name \u5426 \u7ec4\u4ef6\u540d 5 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete","title":"query"},{"location":"zh/fate_flow_client/#list_1","text":"\u5c55\u793aTask\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow task list flow task list -l 25","title":"list"},{"location":"zh/fate_flow_client/#metrics","text":"\u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u4ea7\u751f\u7684\u6240\u6709\u6307\u6807\u540d\u79f0\u5217\u8868 flow tracking metrics [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metrics"},{"location":"zh/fate_flow_client/#metric-all","text":"\u83b7\u53d6\u7ec4\u4ef6\u4efb\u52a1\u7684\u6240\u6709\u8f93\u51fa\u6307\u6807 flow tracking metric-all [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa(\u7bc7\u5e45\u6709\u9650\uff0c\u4ec5\u663e\u793a\u90e8\u5206\u6307\u6807\u7684\u6570\u636e\u4e14\u6570\u7ec4\u578b\u6570\u636e\u4e2d\u95f4\u7701\u7565\u4e86\u4e00\u4e9b\u503c): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metric-all"},{"location":"zh/fate_flow_client/#parameters","text":"\u63d0\u4ea4\u4f5c\u4e1a\u540e\uff0c\u7cfb\u7edf\u4f9d\u636ejob conf\u4e2d\u7684component_parameters\u7ed3\u5408\u7cfb\u7edf\u9ed8\u8ba4\u7ec4\u4ef6\u53c2\u6570\uff0c\u6700\u7ec8\u89e3\u6790\u5f97\u5230\u7684\u5b9e\u9645\u7ec4\u4ef6\u4efb\u52a1\u8fd0\u884c\u53c2\u6570 flow tracking parameters [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"parameters"},{"location":"zh/fate_flow_client/#output-data","text":"\u83b7\u53d6\u7ec4\u4ef6\u8f93\u51fa flow tracking output-data [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 -o, --output-path \u662f string \u8f93\u51fa\u6570\u636e\u7684\u5b58\u653e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o ./ \u8f93\u51fa: { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory\" }","title":"output-data"},{"location":"zh/fate_flow_client/#output-data-table","text":"\u83b7\u53d6\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u8868\u540d flow tracking output-data-table [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-data-table"},{"location":"zh/fate_flow_client/#output-model","text":"\u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u7684\u8f93\u51fa\u6a21\u578b flow tracking output-model [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-model"},{"location":"zh/fate_flow_client/#get-summary","text":"\u6bcf\u4e2a\u7ec4\u4ef6\u5141\u8bb8\u8bbe\u7f6e\u4e00\u4e9b\u6458\u8981\u4fe1\u606f\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u5206\u6790 flow tracking get-summary [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"get-summary"},{"location":"zh/fate_flow_client/#tracking-source","text":"\u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u7236\u8868\u53ca\u6e90\u8868 flow table tracking-source [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero_lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-source"},{"location":"zh/fate_flow_client/#tracking-job","text":"\u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u4f7f\u7528\u60c5\u51b5 flow table tracking-job [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"count\" : 2 , \"job\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-job"},{"location":"zh/fate_flow_client/#load","text":"\u5411 Fate-Serving \u52a0\u8f7d deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u662f \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"load"},{"location":"zh/fate_flow_client/#bind_1","text":"\u5411 Fate-Serving \u7ed1\u5b9a deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" }","title":"bind"},{"location":"zh/fate_flow_client/#import","text":"\u4ece\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b\u3002 flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 from_database --from-database \u662f \u4ece\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b \u6837\u4f8b { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"import"},{"location":"zh/fate_flow_client/#export","text":"\u5bfc\u51fa\u6a21\u578b\u5230\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u3002 flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 to_database --to-database \u662f \u5c06\u6a21\u578b\u5bfc\u51fa\u5230\u5b58\u50a8\u5f15\u64ce\u4e2d \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"export"},{"location":"zh/fate_flow_client/#migrate","text":"\u8fc1\u79fb\u6a21\u578b\u3002 flow model migrate -c examples/model/migrate_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 \u6837\u4f8b { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"migrate"},{"location":"zh/fate_flow_client/#tag-list","text":"\u83b7\u53d6\u6a21\u578b\u7684\u6807\u7b7e\u5217\u8868\u3002 flow model tag-list -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID","title":"tag-list"},{"location":"zh/fate_flow_client/#tag-model","text":"\u4ece\u6a21\u578b\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\u3002 flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag_name -t --tag-name \u5426 \u6807\u7b7e\u540d remove --remove \u662f \u79fb\u9664\u6307\u5b9a\u7684\u6807\u7b7e","title":"tag-model"},{"location":"zh/fate_flow_client/#deploy","text":"\u914d\u7f6e\u9884\u6d4b DSL\u3002 flow model deploy --model-id <model_id> --model-version <model_version> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c cpn_list --cpn-list \u662f \u7ec4\u4ef6\u5217\u8868 cpn_path --cpn-path \u662f \u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u7ec4\u4ef6\u5217\u8868 dsl_path --dsl-path \u662f \u9884\u6d4b DSL \u6587\u4ef6 cpn_step_index --cpn-step-index \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step index \u4f8b\u5982 --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step name \u4f8b\u5982 --cpn-step-name cpn_b:foobar \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } }","title":"deploy"},{"location":"zh/fate_flow_client/#get-predict-dsl","text":"\u83b7\u53d6\u9884\u6d4b DSL\u3002 flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84","title":"get-predict-dsl"},{"location":"zh/fate_flow_client/#get-predict-conf","text":"\u83b7\u53d6\u6a21\u578b\u9884\u6d4b\u6a21\u677f\u3002 flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84","title":"get-predict-conf"},{"location":"zh/fate_flow_client/#get-model-info","text":"\u83b7\u53d6\u6a21\u578b\u4fe1\u606f\u3002 flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u662f Party \u89d2\u8272 party_id -p --party-id \u662f Party ID detail --detail \u662f \u5c55\u793a\u8be6\u7ec6\u4fe1\u606f","title":"get-model-info"},{"location":"zh/fate_flow_client/#homo-convert","text":"\u57fa\u4e8e\u6a2a\u5411\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u751f\u6210\u5176\u4ed6 ML \u6846\u67b6\u7684\u6a21\u578b\u6587\u4ef6\u3002 flow model homo-convert -c examples/model/homo_convert_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6","title":"homo-convert"},{"location":"zh/fate_flow_client/#homo-deploy","text":"\u5c06\u6a2a\u5411\u8bad\u7ec3\u540e\u4f7f\u7528 homo-convert \u751f\u6210\u7684\u6a21\u578b\u90e8\u7f72\u5230\u5728\u7ebf\u63a8\u7406\u7cfb\u7edf\u4e2d\uff0c\u5f53\u524d\u652f\u6301\u521b\u5efa\u57fa\u4e8e KFServing \u7684\u63a8\u7406\u670d\u52a1\u3002 flow model homo-deploy -c examples/model/homo_deploy_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6","title":"homo-deploy"},{"location":"zh/fate_flow_client/#list_2","text":"\u83b7\u53d6 Checkpoint \u6a21\u578b\u5217\u8868\u3002 flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] }","title":"list"},{"location":"zh/fate_flow_client/#get","text":"\u83b7\u53d6 Checkpoint \u6a21\u578b\u4fe1\u606f\u3002 flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d step_index --step-index \u662f Step index\uff0c\u4e0d\u53ef\u4e0e step_name \u540c\u65f6\u4f7f\u7528 step_name --step-name \u662f Step name\uff0c\u4e0d\u53ef\u4e0e step_index \u540c\u65f6\u4f7f\u7528 \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"get"},{"location":"zh/fate_flow_client/#list_3","text":"\u5217\u51fa\u5f53\u524d\u6240\u6709\u7ec4\u4ef6\u63d0\u4f9b\u8005\u53ca\u5176\u63d0\u4f9b\u7ec4\u4ef6\u4fe1\u606f flow provider list [ options ] \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b \u8f93\u51fa: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5305\u542b \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u7684 \u540d\u79f0 , \u7248\u672c\u53f7 , \u4ee3\u7801\u8def\u5f84 , \u63d0\u4f9b\u7684\u7ec4\u4ef6\u5217\u8868","title":"list"},{"location":"zh/fate_flow_client/#register","text":"\u6ce8\u518c\u4e00\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u8005 flow provider register [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json \u914d\u7f6e\u6587\u4ef6\uff1a { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } \u8f93\u51fa: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"register"},{"location":"zh/fate_flow_client/#query_2","text":"\u7528\u4e8e\u67e5\u8be2fate\u7cfb\u7edf\u8d44\u6e90 flow resource query \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"zh/fate_flow_client/#return","text":"\u7528\u4e8e\u5f52\u8fd8\u67d0\u4e2ajob\u7684\u8d44\u6e90 flow resource return [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e job_id \u662f string \u4efb\u52a1id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"return"},{"location":"zh/fate_flow_client/#grant","text":"\u6dfb\u52a0\u6743\u9650 flow privilege grant -c fateflow/examples/permission/grant.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"grant"},{"location":"zh/fate_flow_client/#delete_1","text":"\u5220\u9664\u6743\u9650 flow privilege delete -c fateflow/examples/permission/delete.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868\uff0c \"*\"\u4e3a\u6240\u6709\u6570\u636e\u96c6 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"zh/fate_flow_client/#query_3","text":"\u67e5\u8be2\u6743\u9650 flow privilege query -p 10000 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"zh/fate_flow_client/#create","text":"\u521b\u5efa\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 tag_\u53c2\u6570\u4ecb\u7ecd -d --tag-desc \u5426 \u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag create -t tag1 -d \"This is the \u53c2\u6570\u4ecb\u7ecd of tag1.\" flow tag create -t tag2","title":"create"},{"location":"zh/fate_flow_client/#update","text":"\u66f4\u65b0\u6807\u7b7e\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 new_tag_name --new-tag-name \u5426 \u65b0\u6807\u7b7e\u540d 3 new_tag_desc --new-tag-desc \u5426 \u65b0\u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the new \u53c2\u6570\u4ecb\u7ecd.\"","title":"update"},{"location":"zh/fate_flow_client/#list_4","text":"\u5c55\u793a\u6807\u7b7e\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow tag list flow tag list -l 3","title":"list"},{"location":"zh/fate_flow_client/#query_4","text":"\u68c0\u7d22\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 with_model --with-model \u5426 \u5982\u679c\u6307\u5b9a\uff0c\u5177\u6709\u8be5\u6807\u7b7e\u7684\u6a21\u578b\u4fe1\u606f\u5c06\u88ab\u5c55\u793a \u6837\u4f8b flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model","title":"query"},{"location":"zh/fate_flow_client/#delete_2","text":"\u5220\u9664\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d \u6837\u4f8b flow tag delete -t tag1","title":"delete"},{"location":"zh/fate_flow_client/#versions","text":"\u5217\u51fa\u6240\u6709\u76f8\u5173\u7cfb\u7edf\u7248\u672c\u53f7 flow server versions \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server versions \u8f93\u51fa: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"versions"},{"location":"zh/fate_flow_client/#reload","text":"\u5982\u4e0b\u914d\u7f6e\u9879\u5728 reload \u540e\u4f1a\u91cd\u65b0\u751f\u6548 $FATE_PROJECT_BASE/conf/service_conf.yaml\u4e2d# engine services\u540e\u7684\u6240\u6709\u914d\u7f6e $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml\u4e2d\u6240\u6709\u914d\u7f6e flow server reload \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server reload \u8f93\u51fa: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"reload"},{"location":"zh/fate_flow_component_registry/","text":"\u4efb\u52a1\u7ec4\u4ef6\u6ce8\u518c\u4e2d\u5fc3 \u00b6 1. \u8bf4\u660e \u00b6 FATE Flow 1.7\u7248\u672c\u540e\uff0c\u5f00\u59cb\u652f\u6301\u591a\u7248\u672c\u7ec4\u4ef6\u5305\u540c\u65f6\u5b58\u5728\uff0c\u4f8b\u5982\u53ef\u4ee5\u540c\u65f6\u653e\u5165 1.7.0 \u548c 1.7.1 \u7248\u672c\u7684 fate \u7b97\u6cd5\u7ec4\u4ef6\u5305 \u6211\u4eec\u5c06\u7b97\u6cd5\u7ec4\u4ef6\u5305\u7684\u63d0\u4f9b\u8005\u79f0\u4e3a \u7ec4\u4ef6\u63d0\u4f9b\u8005 \uff0c \u540d\u79f0 \u548c \u7248\u672c \u552f\u4e00\u786e\u5b9a \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u5728\u63d0\u4ea4\u4f5c\u4e1a\u65f6\uff0c\u53ef\u901a\u8fc7 job dsl \u6307\u5b9a\u672c\u6b21\u4f5c\u4e1a\u4f7f\u7528\u54ea\u4e2a\u7ec4\u4ef6\u5305\uff0c\u5177\u4f53\u8bf7\u53c2\u8003 \u7ec4\u4ef6provider 2. \u9ed8\u8ba4\u7ec4\u4ef6\u63d0\u4f9b\u8005 \u00b6 \u90e8\u7f72 FATE \u96c6\u7fa4\u5c06\u5305\u542b\u4e00\u4e2a\u9ed8\u8ba4\u7684\u7ec4\u4ef6\u63d0\u4f9b\u8005\uff0c\u5176\u901a\u5e38\u5728 ${FATE_PROJECT_BASE}/python/federatedml \u76ee\u5f55\u4e0b 3. \u5f53\u524d\u7ec4\u4ef6\u63d0\u4f9b\u8005 \u00b6 \u5217\u51fa\u5f53\u524d\u6240\u6709\u7ec4\u4ef6\u63d0\u4f9b\u8005\u53ca\u5176\u63d0\u4f9b\u7ec4\u4ef6\u4fe1\u606f flow provider list [ options ] \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b \u8f93\u51fa: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5305\u542b \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u7684 \u540d\u79f0 , \u7248\u672c\u53f7 , \u4ee3\u7801\u8def\u5f84 , \u63d0\u4f9b\u7684\u7ec4\u4ef6\u5217\u8868 4. \u65b0\u7ec4\u4ef6\u63d0\u4f9b\u8005 \u00b6 \u6ce8\u518c\u4e00\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u8005 flow provider register [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json \u914d\u7f6e\u6587\u4ef6\uff1a { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } \u8f93\u51fa: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"\u4efb\u52a1\u7ec4\u4ef6\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/fate_flow_component_registry/#_1","text":"","title":"\u4efb\u52a1\u7ec4\u4ef6\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/fate_flow_component_registry/#1","text":"FATE Flow 1.7\u7248\u672c\u540e\uff0c\u5f00\u59cb\u652f\u6301\u591a\u7248\u672c\u7ec4\u4ef6\u5305\u540c\u65f6\u5b58\u5728\uff0c\u4f8b\u5982\u53ef\u4ee5\u540c\u65f6\u653e\u5165 1.7.0 \u548c 1.7.1 \u7248\u672c\u7684 fate \u7b97\u6cd5\u7ec4\u4ef6\u5305 \u6211\u4eec\u5c06\u7b97\u6cd5\u7ec4\u4ef6\u5305\u7684\u63d0\u4f9b\u8005\u79f0\u4e3a \u7ec4\u4ef6\u63d0\u4f9b\u8005 \uff0c \u540d\u79f0 \u548c \u7248\u672c \u552f\u4e00\u786e\u5b9a \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u5728\u63d0\u4ea4\u4f5c\u4e1a\u65f6\uff0c\u53ef\u901a\u8fc7 job dsl \u6307\u5b9a\u672c\u6b21\u4f5c\u4e1a\u4f7f\u7528\u54ea\u4e2a\u7ec4\u4ef6\u5305\uff0c\u5177\u4f53\u8bf7\u53c2\u8003 \u7ec4\u4ef6provider","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_component_registry/#2","text":"\u90e8\u7f72 FATE \u96c6\u7fa4\u5c06\u5305\u542b\u4e00\u4e2a\u9ed8\u8ba4\u7684\u7ec4\u4ef6\u63d0\u4f9b\u8005\uff0c\u5176\u901a\u5e38\u5728 ${FATE_PROJECT_BASE}/python/federatedml \u76ee\u5f55\u4e0b","title":"2. \u9ed8\u8ba4\u7ec4\u4ef6\u63d0\u4f9b\u8005"},{"location":"zh/fate_flow_component_registry/#3","text":"\u5217\u51fa\u5f53\u524d\u6240\u6709\u7ec4\u4ef6\u63d0\u4f9b\u8005\u53ca\u5176\u63d0\u4f9b\u7ec4\u4ef6\u4fe1\u606f flow provider list [ options ] \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b \u8f93\u51fa: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5305\u542b \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u7684 \u540d\u79f0 , \u7248\u672c\u53f7 , \u4ee3\u7801\u8def\u5f84 , \u63d0\u4f9b\u7684\u7ec4\u4ef6\u5217\u8868","title":"3. \u5f53\u524d\u7ec4\u4ef6\u63d0\u4f9b\u8005"},{"location":"zh/fate_flow_component_registry/#4","text":"\u6ce8\u518c\u4e00\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u8005 flow provider register [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json \u914d\u7f6e\u6587\u4ef6\uff1a { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } \u8f93\u51fa: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"4. \u65b0\u7ec4\u4ef6\u63d0\u4f9b\u8005"},{"location":"zh/fate_flow_data_access/","text":"\u6570\u636e\u63a5\u5165 \u00b6 1. \u8bf4\u660e \u00b6 fate\u7684\u5b58\u50a8\u8868\u662f\u7531table name\u548cnamespace\u6807\u8bc6\u3002 fate\u63d0\u4f9bupload\u7ec4\u4ef6\u4f9b\u7528\u6237\u4e0a\u4f20\u6570\u636e\u81f3fate\u8ba1\u7b97\u5f15\u64ce\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf\u5185\uff1b \u82e5\u7528\u6237\u7684\u6570\u636e\u5df2\u7ecf\u5b58\u5728\u4e8efate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u53ef\u901a\u8fc7table bind\u65b9\u5f0f\u5c06\u5b58\u50a8\u4fe1\u606f\u6620\u5c04\u5230fate\u5b58\u50a8\u8868\uff1b \u82e5table bind\u7684\u8868\u5b58\u50a8\u7c7b\u578b\u4e0e\u5f53\u524d\u9ed8\u8ba4\u5f15\u64ce\u4e0d\u4e00\u81f4\uff0creader\u7ec4\u4ef6\u4f1a\u81ea\u52a8\u8f6c\u5316\u5b58\u50a8\u7c7b\u578b; 2. \u6570\u636e\u4e0a\u4f20 \u00b6 \u7528\u4e8e\u4e0a\u4f20\u5efa\u6a21\u4efb\u52a1\u7684\u8f93\u5165\u6570\u636e\u5230fate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf flow data upload -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e file \u662f string \u6570\u636e\u5b58\u50a8\u8def\u5f84 id_delimiter \u662f string \u6570\u636e\u5206\u9694\u7b26,\u5982\",\" head \u5426 int \u6570\u636e\u662f\u5426\u6709\u8868\u5934 partition \u662f int \u6570\u636e\u5206\u533a\u6570 storage_engine \u5426 string \u5b58\u50a8\u5f15\u64ce\u7c7b\u578b\uff0c\u9ed8\u8ba4\"EGGROLL\"\uff0c\u8fd8\u652f\u6301\"HDFS\",\"LOCALFS\", \"HIVE\"\u7b49 namespace \u662f string \u8868\u547d\u540d\u7a7a\u95f4 table_name \u662f string \u8868\u540d storage_address \u5426 object \u9700\u8981\u586b\u5199\u5bf9\u5e94\u5b58\u50a8\u5f15\u64ce\u7684\u5b58\u50a8\u5730\u5740 use_local_data \u5426 int \u9ed8\u8ba41\uff0c\u4ee3\u8868\u4f7f\u7528client\u673a\u5668\u7684\u6570\u636e;0\u4ee3\u8868\u4f7f\u7528fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u7684\u6570\u636e drop \u5426 int \u662f\u5426\u8986\u76d6\u4e0a\u4f20 extend_sid \u5426 bool \u662f\u5426\u65b0\u589e\u4e00\u5217uuid id\uff0c\u9ed8\u8ba4False auto_increasing_sid \u5426 bool \u65b0\u589e\u7684id\u5217\u662f\u5426\u81ea\u589e(extend_sid\u4e3aTrue\u624d\u4f1a\u751f\u6548), \u9ed8\u8ba4False with_meta \u5426 bool \u662f\u5426\u643a\u5e26meta\u6570\u636e, \u9ed8\u8ba4False meta \u5426 object \u5143\u6570\u636e, \u9ed8\u8ba4\u4e3a\u7a7a\uff0cwith_meta\u4e3atrue\u751f\u6548 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\u610f\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u4f20\u5165meta\u53c2\u6570\uff0c\u4f1a\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u6837\u4f8b eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. \u8868\u7ed1\u5b9a \u00b6 \u53ef\u901a\u8fc7table bind\u5c06\u771f\u5b9e\u5b58\u50a8\u5730\u5740\u6620\u5c04\u5230fate\u5b58\u50a8\u8868 flow table bind [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 engine \u662f string \u5b58\u50a8\u5f15\u64ce, \u652f\u6301\"HDFS\", \"MYSQL\", \"PATH\" adress \u662f object \u771f\u5b9e\u5b58\u50a8\u5730\u5740 drop \u5426 int \u8986\u76d6\u4ee5\u524d\u7684\u4fe1\u606f head \u5426 int \u662f\u5426\u6709\u6570\u636e\u8868\u5934 id_delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26 id_column \u5426 string id\u5b57\u6bb5 feature_column \u5426 array \u7279\u5f81\u5b57\u6bb5 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u5728table bind\u9636\u6bb5\u4f20\u5165meta\u53c2\u6570\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u5f53\u6570\u636e\u7ecf\u8fc7\u4e86\u4e00\u6b21reader\u7ec4\u4ef6\u540e\u4f1a\u66f4\u65b0\u539f\u59cb\u6570\u636e\u7684\u7279\u5f81\u533f\u540d\u4fe1\u606f \u6837\u4f8b hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 4. \u8868\u4fe1\u606f\u67e5\u8be2 \u00b6 \u7528\u4e8e\u67e5\u8be2fate\u8868\u7684\u76f8\u5173\u4fe1\u606f(\u771f\u5b9e\u5b58\u50a8\u5730\u5740,\u6570\u91cf,schema\u7b49) flow table info [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exist\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 5. \u5220\u9664\u8868\u6570\u636e \u00b6 \u53ef\u901a\u8fc7table delete\u5220\u9664\u8868\u6570\u636e flow table delete [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 6. \u6570\u636e\u4e0b\u8f7d \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u6587\u4ef6\u683c\u5f0f\u6570\u636e flow data download -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e output_path \u662f string \u4e0b\u8f7d\u8def\u5f84 table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 \u6837\u4f8b: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 7. \u5c06\u6570\u636e\u8bbe\u7f6e\u4e3a\u201c\u4e0d\u53ef\u7528\u201d\u72b6\u6001 \u00b6 \u53ef\u901a\u8fc7table disable\u5c06\u8868\u7f6e\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 flow table disable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 8. \u5c06\u6570\u636e\u8bbe\u7f6e\u4e3a\u201c\u53ef\u7528\u201d\u72b6\u6001 \u00b6 \u53ef\u901a\u8fc7table enable\u5c06\u8868\u7f6e\u4e3a\u53ef\u7528\u72b6\u6001 flow table enable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } 9. \u5220\u9664\u201c\u4e0d\u53ef\u7528\u201d\u6570\u636e \u00b6 \u53ef\u901a\u8fc7disable-delete\u5220\u9664\u5f53\u524d\u4e0d\u53ef\u7528\u7684\u8868 flow table disable-delete \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } 10. writer\u7ec4\u4ef6 \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u5916\u90e8\u5f15\u64ce\u6216\u8005\u5c06\u6570\u636e\u53e6\u5b58\u4e3a\u65b0\u8868 flow data writer -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 storage_engine \u5426 string \u5b58\u50a8\u7c7b\u578b,\u5982\uff1aMYSQL address \u5426 object \u5b58\u50a8\u5730\u5740 output_namespace \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u547d\u540d\u7a7a\u95f4 output_name \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u540d **\u6ce8: storage_engine\u3001address\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u5b58\u50a8\u5230\u6307\u5b9a\u5f15\u64ce\u7684\u529f\u80fd\uff1b output_namespace\u3001output_name\u4e5f\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u53e6\u5b58\u4e3a\u540c\u79cd\u5f15\u64ce\u7684\u65b0\u8868\u529f\u80fd** \u6837\u4f8b: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 11. reader\u7ec4\u4ef6 \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a reader\u7ec4\u4ef6\u4e3afate\u7684\u6570\u636e\u8f93\u5165\u7ec4\u4ef6; reader\u7ec4\u4ef6\u53ef\u5c06\u8f93\u5165\u6570\u636e\u8f6c\u5316\u4e3a\u6307\u5b9a\u5b58\u50a8\u7c7b\u578b\u6570\u636e; \u53c2\u6570\u914d\u7f6e : submit job\u65f6\u7684conf\u4e2d\u914d\u7f6ereader\u7684\u8f93\u5165\u8868: { \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } } } } } } \u7ec4\u4ef6\u8f93\u51fa \u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u5b58\u50a8\u5f15\u64ce\u662f\u7531\u914d\u7f6e\u51b3\u5b9a\uff0c\u914d\u7f6e\u6587\u4ef6conf/service_conf.yaml,\u914d\u7f6e\u9879\u4e3a: default_engines : storage : eggroll \u8ba1\u7b97\u5f15\u64ce\u548c\u5b58\u50a8\u5f15\u64ce\u4e4b\u95f4\u5177\u6709\u4e00\u5b9a\u7684\u652f\u6301\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f9d\u8d56\u5217\u8868\u5982\u4e0b\uff1a computing_engine storage_engine standalone standalone eggroll eggroll spark hdfs(\u5206\u5e03\u5f0f), localfs(\u5355\u673a\u7248) reader\u7ec4\u4ef6\u8f93\u5165\u6570\u636e\u7684\u5b58\u50a8\u7c7b\u578b\u652f\u6301: eggroll\u3001hdfs\u3001localfs\u3001mysql\u3001path\u7b49; reader\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u7531default_engines.storage\u914d\u7f6e\u51b3\u5b9a(path\u9664\u5916) 12. api-reader\u7ec4\u4ef6 \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a api-reader\u7ec4\u4ef6\u7684\u6570\u636e\u8f93\u5165\u4e3aid\uff0c\u6570\u636e\u8f93\u51fa\u4e3a\u7279\u5f81; \u8bf7\u6c42\u53c2\u6570\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u5982\uff1a\u7248\u672c\u53f7\u3001\u56de\u6eaf\u6708\u4efd\u7b49\uff1b \u7ec4\u4ef6\u4f1a\u8bf7\u6c42\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5b9e\u73b0upload\u3001query\u3001download\u63a5\u53e3\u5e76\u5411fate flow\u6ce8\u518c\uff0c\u53ef\u53c2\u8003 api-reader\u76f8\u5173\u670d\u52a1\u6ce8\u518c \u53c2\u6570\u914d\u7f6e : submit job\u65f6\u7684conf\u4e2d\u914d\u7f6eapi-reader\u53c2\u6570: { \"role\" : { \"guest\" : { \"0\" : { \"api_reader_0\" : { \"server_name\" : \"xxx\" , \"parameters\" : { \"version\" : \"xxx\" }, \"id_delimiter\" : \",\" , \"head\" : true } } } } } \u53c2\u6570\u542b\u4e49\uff1a - server_name: \u9700\u8981\u8bf7\u6c42\u7684\u670d\u52a1\u540d - parameters: \u9700\u8981\u8bf7\u6c42\u7684\u7279\u5f81\u53c2\u6570 - id_delimiter\uff1a\u8fd4\u56de\u7684\u6570\u636e\u5206\u9694\u7b26 - head: \u8fd4\u56de\u7684\u6570\u636e\u662f\u5426\u542b\u6709\u6570\u636e\u5934","title":"\u6570\u636e\u63a5\u5165"},{"location":"zh/fate_flow_data_access/#_1","text":"","title":"\u6570\u636e\u63a5\u5165"},{"location":"zh/fate_flow_data_access/#1","text":"fate\u7684\u5b58\u50a8\u8868\u662f\u7531table name\u548cnamespace\u6807\u8bc6\u3002 fate\u63d0\u4f9bupload\u7ec4\u4ef6\u4f9b\u7528\u6237\u4e0a\u4f20\u6570\u636e\u81f3fate\u8ba1\u7b97\u5f15\u64ce\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf\u5185\uff1b \u82e5\u7528\u6237\u7684\u6570\u636e\u5df2\u7ecf\u5b58\u5728\u4e8efate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u53ef\u901a\u8fc7table bind\u65b9\u5f0f\u5c06\u5b58\u50a8\u4fe1\u606f\u6620\u5c04\u5230fate\u5b58\u50a8\u8868\uff1b \u82e5table bind\u7684\u8868\u5b58\u50a8\u7c7b\u578b\u4e0e\u5f53\u524d\u9ed8\u8ba4\u5f15\u64ce\u4e0d\u4e00\u81f4\uff0creader\u7ec4\u4ef6\u4f1a\u81ea\u52a8\u8f6c\u5316\u5b58\u50a8\u7c7b\u578b;","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_data_access/#2","text":"\u7528\u4e8e\u4e0a\u4f20\u5efa\u6a21\u4efb\u52a1\u7684\u8f93\u5165\u6570\u636e\u5230fate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf flow data upload -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e file \u662f string \u6570\u636e\u5b58\u50a8\u8def\u5f84 id_delimiter \u662f string \u6570\u636e\u5206\u9694\u7b26,\u5982\",\" head \u5426 int \u6570\u636e\u662f\u5426\u6709\u8868\u5934 partition \u662f int \u6570\u636e\u5206\u533a\u6570 storage_engine \u5426 string \u5b58\u50a8\u5f15\u64ce\u7c7b\u578b\uff0c\u9ed8\u8ba4\"EGGROLL\"\uff0c\u8fd8\u652f\u6301\"HDFS\",\"LOCALFS\", \"HIVE\"\u7b49 namespace \u662f string \u8868\u547d\u540d\u7a7a\u95f4 table_name \u662f string \u8868\u540d storage_address \u5426 object \u9700\u8981\u586b\u5199\u5bf9\u5e94\u5b58\u50a8\u5f15\u64ce\u7684\u5b58\u50a8\u5730\u5740 use_local_data \u5426 int \u9ed8\u8ba41\uff0c\u4ee3\u8868\u4f7f\u7528client\u673a\u5668\u7684\u6570\u636e;0\u4ee3\u8868\u4f7f\u7528fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u7684\u6570\u636e drop \u5426 int \u662f\u5426\u8986\u76d6\u4e0a\u4f20 extend_sid \u5426 bool \u662f\u5426\u65b0\u589e\u4e00\u5217uuid id\uff0c\u9ed8\u8ba4False auto_increasing_sid \u5426 bool \u65b0\u589e\u7684id\u5217\u662f\u5426\u81ea\u589e(extend_sid\u4e3aTrue\u624d\u4f1a\u751f\u6548), \u9ed8\u8ba4False with_meta \u5426 bool \u662f\u5426\u643a\u5e26meta\u6570\u636e, \u9ed8\u8ba4False meta \u5426 object \u5143\u6570\u636e, \u9ed8\u8ba4\u4e3a\u7a7a\uff0cwith_meta\u4e3atrue\u751f\u6548 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\u610f\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u4f20\u5165meta\u53c2\u6570\uff0c\u4f1a\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u6837\u4f8b eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.  \u6570\u636e\u4e0a\u4f20"},{"location":"zh/fate_flow_data_access/#3","text":"\u53ef\u901a\u8fc7table bind\u5c06\u771f\u5b9e\u5b58\u50a8\u5730\u5740\u6620\u5c04\u5230fate\u5b58\u50a8\u8868 flow table bind [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 engine \u662f string \u5b58\u50a8\u5f15\u64ce, \u652f\u6301\"HDFS\", \"MYSQL\", \"PATH\" adress \u662f object \u771f\u5b9e\u5b58\u50a8\u5730\u5740 drop \u5426 int \u8986\u76d6\u4ee5\u524d\u7684\u4fe1\u606f head \u5426 int \u662f\u5426\u6709\u6570\u636e\u8868\u5934 id_delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26 id_column \u5426 string id\u5b57\u6bb5 feature_column \u5426 array \u7279\u5f81\u5b57\u6bb5 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u5728table bind\u9636\u6bb5\u4f20\u5165meta\u53c2\u6570\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u5f53\u6570\u636e\u7ecf\u8fc7\u4e86\u4e00\u6b21reader\u7ec4\u4ef6\u540e\u4f1a\u66f4\u65b0\u539f\u59cb\u6570\u636e\u7684\u7279\u5f81\u533f\u540d\u4fe1\u606f \u6837\u4f8b hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3.  \u8868\u7ed1\u5b9a"},{"location":"zh/fate_flow_data_access/#4","text":"\u7528\u4e8e\u67e5\u8be2fate\u8868\u7684\u76f8\u5173\u4fe1\u606f(\u771f\u5b9e\u5b58\u50a8\u5730\u5740,\u6570\u91cf,schema\u7b49) flow table info [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exist\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"4. \u8868\u4fe1\u606f\u67e5\u8be2"},{"location":"zh/fate_flow_data_access/#5","text":"\u53ef\u901a\u8fc7table delete\u5220\u9664\u8868\u6570\u636e flow table delete [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"5. \u5220\u9664\u8868\u6570\u636e"},{"location":"zh/fate_flow_data_access/#6","text":"\u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u6587\u4ef6\u683c\u5f0f\u6570\u636e flow data download -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e output_path \u662f string \u4e0b\u8f7d\u8def\u5f84 table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 \u6837\u4f8b: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"6.  \u6570\u636e\u4e0b\u8f7d"},{"location":"zh/fate_flow_data_access/#7","text":"\u53ef\u901a\u8fc7table disable\u5c06\u8868\u7f6e\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 flow table disable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"7.  \u5c06\u6570\u636e\u8bbe\u7f6e\u4e3a\u201c\u4e0d\u53ef\u7528\u201d\u72b6\u6001"},{"location":"zh/fate_flow_data_access/#8","text":"\u53ef\u901a\u8fc7table enable\u5c06\u8868\u7f6e\u4e3a\u53ef\u7528\u72b6\u6001 flow table enable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"8.  \u5c06\u6570\u636e\u8bbe\u7f6e\u4e3a\u201c\u53ef\u7528\u201d\u72b6\u6001"},{"location":"zh/fate_flow_data_access/#9","text":"\u53ef\u901a\u8fc7disable-delete\u5220\u9664\u5f53\u524d\u4e0d\u53ef\u7528\u7684\u8868 flow table disable-delete \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"9.  \u5220\u9664\u201c\u4e0d\u53ef\u7528\u201d\u6570\u636e"},{"location":"zh/fate_flow_data_access/#10-writer","text":"\u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u5916\u90e8\u5f15\u64ce\u6216\u8005\u5c06\u6570\u636e\u53e6\u5b58\u4e3a\u65b0\u8868 flow data writer -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 storage_engine \u5426 string \u5b58\u50a8\u7c7b\u578b,\u5982\uff1aMYSQL address \u5426 object \u5b58\u50a8\u5730\u5740 output_namespace \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u547d\u540d\u7a7a\u95f4 output_name \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u540d **\u6ce8: storage_engine\u3001address\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u5b58\u50a8\u5230\u6307\u5b9a\u5f15\u64ce\u7684\u529f\u80fd\uff1b output_namespace\u3001output_name\u4e5f\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u53e6\u5b58\u4e3a\u540c\u79cd\u5f15\u64ce\u7684\u65b0\u8868\u529f\u80fd** \u6837\u4f8b: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"10.  writer\u7ec4\u4ef6"},{"location":"zh/fate_flow_data_access/#11-reader","text":"\u7b80\u8981\u63cf\u8ff0\uff1a reader\u7ec4\u4ef6\u4e3afate\u7684\u6570\u636e\u8f93\u5165\u7ec4\u4ef6; reader\u7ec4\u4ef6\u53ef\u5c06\u8f93\u5165\u6570\u636e\u8f6c\u5316\u4e3a\u6307\u5b9a\u5b58\u50a8\u7c7b\u578b\u6570\u636e; \u53c2\u6570\u914d\u7f6e : submit job\u65f6\u7684conf\u4e2d\u914d\u7f6ereader\u7684\u8f93\u5165\u8868: { \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } } } } } } \u7ec4\u4ef6\u8f93\u51fa \u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u5b58\u50a8\u5f15\u64ce\u662f\u7531\u914d\u7f6e\u51b3\u5b9a\uff0c\u914d\u7f6e\u6587\u4ef6conf/service_conf.yaml,\u914d\u7f6e\u9879\u4e3a: default_engines : storage : eggroll \u8ba1\u7b97\u5f15\u64ce\u548c\u5b58\u50a8\u5f15\u64ce\u4e4b\u95f4\u5177\u6709\u4e00\u5b9a\u7684\u652f\u6301\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f9d\u8d56\u5217\u8868\u5982\u4e0b\uff1a computing_engine storage_engine standalone standalone eggroll eggroll spark hdfs(\u5206\u5e03\u5f0f), localfs(\u5355\u673a\u7248) reader\u7ec4\u4ef6\u8f93\u5165\u6570\u636e\u7684\u5b58\u50a8\u7c7b\u578b\u652f\u6301: eggroll\u3001hdfs\u3001localfs\u3001mysql\u3001path\u7b49; reader\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u7531default_engines.storage\u914d\u7f6e\u51b3\u5b9a(path\u9664\u5916)","title":"11.  reader\u7ec4\u4ef6"},{"location":"zh/fate_flow_data_access/#12-api-reader","text":"\u7b80\u8981\u63cf\u8ff0\uff1a api-reader\u7ec4\u4ef6\u7684\u6570\u636e\u8f93\u5165\u4e3aid\uff0c\u6570\u636e\u8f93\u51fa\u4e3a\u7279\u5f81; \u8bf7\u6c42\u53c2\u6570\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u5982\uff1a\u7248\u672c\u53f7\u3001\u56de\u6eaf\u6708\u4efd\u7b49\uff1b \u7ec4\u4ef6\u4f1a\u8bf7\u6c42\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5b9e\u73b0upload\u3001query\u3001download\u63a5\u53e3\u5e76\u5411fate flow\u6ce8\u518c\uff0c\u53ef\u53c2\u8003 api-reader\u76f8\u5173\u670d\u52a1\u6ce8\u518c \u53c2\u6570\u914d\u7f6e : submit job\u65f6\u7684conf\u4e2d\u914d\u7f6eapi-reader\u53c2\u6570: { \"role\" : { \"guest\" : { \"0\" : { \"api_reader_0\" : { \"server_name\" : \"xxx\" , \"parameters\" : { \"version\" : \"xxx\" }, \"id_delimiter\" : \",\" , \"head\" : true } } } } } \u53c2\u6570\u542b\u4e49\uff1a - server_name: \u9700\u8981\u8bf7\u6c42\u7684\u670d\u52a1\u540d - parameters: \u9700\u8981\u8bf7\u6c42\u7684\u7279\u5f81\u53c2\u6570 - id_delimiter\uff1a\u8fd4\u56de\u7684\u6570\u636e\u5206\u9694\u7b26 - head: \u8fd4\u56de\u7684\u6570\u636e\u662f\u5426\u542b\u6709\u6570\u636e\u5934","title":"12.  api-reader\u7ec4\u4ef6"},{"location":"zh/fate_flow_http_api/","text":"REST API \u00b6 1. \u8bf4\u660e \u00b6 2. \u8bbe\u8ba1\u89c4\u8303 \u00b6 2.1 HTTP Method \u00b6 HTTP Method: \u4e00\u5f8b\u91c7\u7528 POST Content Type: application/json 2.2 URL\u89c4\u5219(\u73b0\u6709) \u00b6 /\u4e00\u7ea7/\u4e8c\u7ea7/N\u7ea7/\u6700\u540e\u4e00\u7ea7 \u4e00\u7ea7\uff1a\u63a5\u53e3\u7248\u672c\uff0c\u5982v1 \u4e8c\u7ea7\uff1a\u4e3b\u8d44\u6e90\u540d\u79f0\uff0c\u5982job N\u7ea7\uff1a\u5b50\u8d44\u6e90\u540d\u79f0\uff0c\u5982list, \u5141\u8bb8\u6709\u591a\u4e2aN\u7ea7 \u6700\u540e\u4e00\u7ea7\uff1a\u64cd\u4f5c: create/update/query/get/delete 2.3 URL\u89c4\u5219(\u5efa\u8bae\u6539\u8fdb) \u00b6 /\u4e00\u7ea7/\u4e8c\u7ea7/\u4e09\u7ea7/\u56db\u7ea7/N\u7ea7/\u6700\u540e\u4e00\u7ea7 \u4e00\u7ea7\uff1a\u7cfb\u7edf\u540d\u79f0: fate \u4e09\u7ea7\uff1a\u5b50\u7cfb\u7edf\u540d\u79f0: flow \u4e8c\u7ea7\uff1a\u63a5\u53e3\u7248\u672c\uff0c\u5982v1 \u56db\u7ea7\uff1a\u4e3b\u8d44\u6e90\u540d\u79f0\uff0c\u5982job N\u7ea7\uff1a\u5b50\u8d44\u6e90\u540d\u79f0\uff0c\u5982list, \u5141\u8bb8\u6709\u591a\u4e2aN\u7ea7 \u6700\u540e\u4e00\u7ea7\uff1a\u64cd\u4f5c: create/update/query/get/delete","title":"REST API"},{"location":"zh/fate_flow_http_api/#1","text":"","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_http_api/#2","text":"","title":"2. \u8bbe\u8ba1\u89c4\u8303"},{"location":"zh/fate_flow_http_api/#21-http-method","text":"HTTP Method: \u4e00\u5f8b\u91c7\u7528 POST Content Type: application/json","title":"2.1 HTTP Method"},{"location":"zh/fate_flow_http_api/#22-url","text":"/\u4e00\u7ea7/\u4e8c\u7ea7/N\u7ea7/\u6700\u540e\u4e00\u7ea7 \u4e00\u7ea7\uff1a\u63a5\u53e3\u7248\u672c\uff0c\u5982v1 \u4e8c\u7ea7\uff1a\u4e3b\u8d44\u6e90\u540d\u79f0\uff0c\u5982job N\u7ea7\uff1a\u5b50\u8d44\u6e90\u540d\u79f0\uff0c\u5982list, \u5141\u8bb8\u6709\u591a\u4e2aN\u7ea7 \u6700\u540e\u4e00\u7ea7\uff1a\u64cd\u4f5c: create/update/query/get/delete","title":"2.2 URL\u89c4\u5219(\u73b0\u6709)"},{"location":"zh/fate_flow_http_api/#23-url","text":"/\u4e00\u7ea7/\u4e8c\u7ea7/\u4e09\u7ea7/\u56db\u7ea7/N\u7ea7/\u6700\u540e\u4e00\u7ea7 \u4e00\u7ea7\uff1a\u7cfb\u7edf\u540d\u79f0: fate \u4e09\u7ea7\uff1a\u5b50\u7cfb\u7edf\u540d\u79f0: flow \u4e8c\u7ea7\uff1a\u63a5\u53e3\u7248\u672c\uff0c\u5982v1 \u56db\u7ea7\uff1a\u4e3b\u8d44\u6e90\u540d\u79f0\uff0c\u5982job N\u7ea7\uff1a\u5b50\u8d44\u6e90\u540d\u79f0\uff0c\u5982list, \u5141\u8bb8\u6709\u591a\u4e2aN\u7ea7 \u6700\u540e\u4e00\u7ea7\uff1a\u64cd\u4f5c: create/update/query/get/delete","title":"2.3 URL\u89c4\u5219(\u5efa\u8bae\u6539\u8fdb)"},{"location":"zh/fate_flow_http_api_call_demo/","text":"REST API \u8c03\u7528 \u00b6 1. \u8bf4\u660e \u00b6 \u4f7f\u7528python\u8bf7\u6c42fate flow \u63a5\u53e3 \u00b6 2. \u6570\u636e\u4e0a\u4f20/\u4e0b\u8f7d \u00b6 import json import os import requests from anaconda_project.internal.test.multipart import MultipartEncoder base_url = \"http://127.0.0.1:9380/v1\" def upload (): uri = \"/data/upload\" file_name = \"./data/breast_hetero_guest.csv\" with open ( file_name , 'rb' ) as fp : data = MultipartEncoder ( fields = { 'file' : ( os . path . basename ( file_name ), fp , 'application/octet-stream' )} ) config_data = { \"file\" : file_name , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , data = data , params = json . dumps ( config_data ), headers = { 'Content-Type' : data . content_type } ) print ( response . text ) def download (): uri = \"/data/download\" config_data = { \"output_path\" : \"./download_breast_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text ) def upload_history (): uri = \"/data/upload/history\" config_data = { \"limit\" : 5 } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text ) 3. \u6570\u636e\u8868\u64cd\u4f5c \u00b6 import requests base_url = \"http://127.0.0.1:9380/v1\" def table_bind (): uri = \"/table/bind\" data = { \"head\" : 1 , \"partition\" : 8 , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"xxx\" , \"name\" : \"xxx\" }, \"id_name\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12\" , \"engine\" : \"MYSQL\" , \"id_delimiter\" : \",\" , \"namespace\" : \"wzh\" , \"name\" : \"wzh\" , } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_delete (): uri = \"/table/delete\" data = { \"table_name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_info (): uri = \"/table/table_info\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_list (): uri = \"/table/list\" data = { \"job_id\" : \"202204221515021092240\" , \"role\" : \"guest\" , \"party_id\" : \"20001\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_source (): uri = \"/table/tracking/source\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_job (): uri = \"/table/tracking/job\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) 4. \u4efb\u52a1 \u00b6 import tarfile import requests base_url = \"http:/127.0.0.1:9380/v1\" def submit (): uri = \"/job/submit\" data = { \"dsl\" : { \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"table\" ] } }, \"dataio_0\" : { \"module\" : \"DataIO\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.table\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"dataio\" ] }, \"need_deploy\" : True }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"dataio_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ] } }, \"hetero_feature_binning_0\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"intersection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_feature_binning\" ] } }, \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.hetero_feature_binning\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"selected\" ] } }, \"hetero_lr_0\" : { \"module\" : \"HeteroLR\" , \"input\" : { \"data\" : { \"train_data\" : [ \"hetero_feature_selection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_lr\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_lr_0.train\" ] } }, \"output\" : { \"data\" : [ \"evaluate\" ] } } } }, \"runtime_conf\" : { \"dsl_version\" : \"2\" , \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 20001 }, \"role\" : { \"guest\" : [ 20001 ], \"host\" : [ 10001 ], \"arbiter\" : [ 10001 ] }, \"job_parameters\" : { \"common\" : { \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"task_cores\" : 4 , \"auto_retries\" : 1 } }, \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : True , \"only_output_key\" : False }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : True , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : False , \"output_format\" : \"dense\" }, \"evaluation_0\" : { \"need_run\" : False } } } } } } } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def stop (): uri = \"/job/stop\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def rerun (): uri = \"/job/rerun\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def query (): uri = \"/job/query\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_job (): uri = \"/job/list/job\" data = { \"limit\" : 1 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def update (): uri = \"/job/update\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"notes\" : \"this is a test\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def parameter_update (): uri = \"/job/parameter/update\" data = { \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"max_iter\" : 10 }}}, \"job_parameters\" : { \"common\" : { \"auto_retries\" : 2 }}, \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def config (): uri = \"/job/config\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def log_download (): uri = \"/job/log/download\" data = { \"job_id\" : \"202204251958539401540a\" } download_tar_file_name = \"./test.tar.gz\" res = requests . post ( base_url + uri , json = data ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def log_path (): uri = \"/job/log/path\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def task_query (): uri = \"/job/task/query\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_task (): uri = \"/job/list/task\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def job_clean (): uri = \"/job/clean\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def clean_queue (): uri = \"/job/clean/queue\" res = requests . post ( base_url + uri ) print ( res . text ) 5. \u6307\u6807 \u00b6 import tarfile import requests base_url = \"http://127.0.0.1:9380/v1\" def job_data_view (): uri = \"/tracking/job/data_view\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_all (): uri = \"/tracking/component/metric/all\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"HeteroSecureBoost_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # {\"data\":{\"train\":{\"loss\":{\"data\":[[0,0.6076415445876732],[1,0.5374539452565573],[2,0.4778598986135903],[3,0.42733599866560723],[4,0.38433409799127843]],\"meta\":{\"Best\":0.38433409799127843,\"curve_name\":\"loss\",\"metric_type\":\"LOSS\",\"name\":\"train\",\"unit_name\":\"iters\"}}}},\"retcode\":0,\"retmsg\":\"success\"} def component_metric (): uri = \"/tracking/component/metrics\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_data (): uri = \"/tracking/component/metric_data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" , \"metric_name\" : \"intersection\" , \"metric_namespace\" : \"train\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_parameters (): uri = \"/tracking/component/parameters\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_model (): uri = \"/tracking/component/output/model\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data (): uri = \"/tracking/component/output/data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data_download (): uri = \"/tracking/component/output/data/download\" download_tar_file_name = \"data.tar.gz\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . get ( base_url + uri , json = data ) print ( res . text ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def component_output_data_table (): uri = \"/tracking/component/output/data/table\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0a\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_component_summary_download (): uri = \"/tracking/component/summary/download\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_list (): uri = \"/tracking/component/list\" data = { \"job_id\" : \"202203311009181495690\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) component_list () 6. \u8d44\u6e90 \u00b6 import requests base_url = \"http://127.0.0.1:9380/v1\" def resource_query (): uri = \"/resource/query\" data = { \"engine_name\" : \"EGGROLL\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def resource_return (): uri = \"/resource/return\" data = { \"job_id\" : \"202204261616175720130\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) resource_return () 7. \u6743\u9650 \u00b6 import requests base_url = \"http://127.0.0.1:9380/v1\" def grant_privilege (): uri = \"/permission/grant/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"all\" , \"privilege_component\" : \"all\" , \"privilege_command\" : \"all\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # grant_privilege() def delete_privilege (): uri = \"/permission/delete/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"guest\" , \"privilege_component\" : \"dataio\" , \"privilege_command\" : \"create\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # delete_privilege() def query_privilege (): uri = \"/permission/query/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) query_privilege ()","title":"REST API \u8c03\u7528"},{"location":"zh/fate_flow_http_api_call_demo/#rest-api","text":"","title":"REST API \u8c03\u7528"},{"location":"zh/fate_flow_http_api_call_demo/#1","text":"","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_http_api_call_demo/#pythonfate-flow","text":"","title":"\u4f7f\u7528python\u8bf7\u6c42fate flow \u63a5\u53e3"},{"location":"zh/fate_flow_http_api_call_demo/#2","text":"import json import os import requests from anaconda_project.internal.test.multipart import MultipartEncoder base_url = \"http://127.0.0.1:9380/v1\" def upload (): uri = \"/data/upload\" file_name = \"./data/breast_hetero_guest.csv\" with open ( file_name , 'rb' ) as fp : data = MultipartEncoder ( fields = { 'file' : ( os . path . basename ( file_name ), fp , 'application/octet-stream' )} ) config_data = { \"file\" : file_name , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , data = data , params = json . dumps ( config_data ), headers = { 'Content-Type' : data . content_type } ) print ( response . text ) def download (): uri = \"/data/download\" config_data = { \"output_path\" : \"./download_breast_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text ) def upload_history (): uri = \"/data/upload/history\" config_data = { \"limit\" : 5 } response = requests . post ( url = base_url + uri , json = config_data ) print ( response . text )","title":"2. \u6570\u636e\u4e0a\u4f20/\u4e0b\u8f7d"},{"location":"zh/fate_flow_http_api_call_demo/#3","text":"import requests base_url = \"http://127.0.0.1:9380/v1\" def table_bind (): uri = \"/table/bind\" data = { \"head\" : 1 , \"partition\" : 8 , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"xxx\" , \"name\" : \"xxx\" }, \"id_name\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12\" , \"engine\" : \"MYSQL\" , \"id_delimiter\" : \",\" , \"namespace\" : \"wzh\" , \"name\" : \"wzh\" , } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_delete (): uri = \"/table/delete\" data = { \"table_name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_info (): uri = \"/table/table_info\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def table_list (): uri = \"/table/list\" data = { \"job_id\" : \"202204221515021092240\" , \"role\" : \"guest\" , \"party_id\" : \"20001\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_source (): uri = \"/table/tracking/source\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def tracking_job (): uri = \"/table/tracking/job\" data = { \"table_name\" : \"xxx\" , \"namespace\" : \"xxx\" } res = requests . post ( base_url + uri , json = data ) print ( res . text )","title":"3. \u6570\u636e\u8868\u64cd\u4f5c"},{"location":"zh/fate_flow_http_api_call_demo/#4","text":"import tarfile import requests base_url = \"http:/127.0.0.1:9380/v1\" def submit (): uri = \"/job/submit\" data = { \"dsl\" : { \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"table\" ] } }, \"dataio_0\" : { \"module\" : \"DataIO\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.table\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"dataio\" ] }, \"need_deploy\" : True }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"dataio_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ] } }, \"hetero_feature_binning_0\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"intersection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_feature_binning\" ] } }, \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.hetero_feature_binning\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"selected\" ] } }, \"hetero_lr_0\" : { \"module\" : \"HeteroLR\" , \"input\" : { \"data\" : { \"train_data\" : [ \"hetero_feature_selection_0.train\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"hetero_lr\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_lr_0.train\" ] } }, \"output\" : { \"data\" : [ \"evaluate\" ] } } } }, \"runtime_conf\" : { \"dsl_version\" : \"2\" , \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 20001 }, \"role\" : { \"guest\" : [ 20001 ], \"host\" : [ 10001 ], \"arbiter\" : [ 10001 ] }, \"job_parameters\" : { \"common\" : { \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"task_cores\" : 4 , \"auto_retries\" : 1 } }, \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : True , \"only_output_key\" : False }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : True , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"dataio_0\" : { \"with_label\" : False , \"output_format\" : \"dense\" }, \"evaluation_0\" : { \"need_run\" : False } } } } } } } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def stop (): uri = \"/job/stop\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def rerun (): uri = \"/job/rerun\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def query (): uri = \"/job/query\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_job (): uri = \"/job/list/job\" data = { \"limit\" : 1 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def update (): uri = \"/job/update\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"notes\" : \"this is a test\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def parameter_update (): uri = \"/job/parameter/update\" data = { \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"max_iter\" : 10 }}}, \"job_parameters\" : { \"common\" : { \"auto_retries\" : 2 }}, \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def config (): uri = \"/job/config\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def log_download (): uri = \"/job/log/download\" data = { \"job_id\" : \"202204251958539401540a\" } download_tar_file_name = \"./test.tar.gz\" res = requests . post ( base_url + uri , json = data ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def log_path (): uri = \"/job/log/path\" data = { \"job_id\" : \"202204251958539401540\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def task_query (): uri = \"/job/task/query\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def list_task (): uri = \"/job/list/task\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def job_clean (): uri = \"/job/clean\" data = { \"job_id\" : \"202204251958539401540\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def clean_queue (): uri = \"/job/clean/queue\" res = requests . post ( base_url + uri ) print ( res . text )","title":"4. \u4efb\u52a1"},{"location":"zh/fate_flow_http_api_call_demo/#5","text":"import tarfile import requests base_url = \"http://127.0.0.1:9380/v1\" def job_data_view (): uri = \"/tracking/job/data_view\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_all (): uri = \"/tracking/component/metric/all\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"HeteroSecureBoost_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # {\"data\":{\"train\":{\"loss\":{\"data\":[[0,0.6076415445876732],[1,0.5374539452565573],[2,0.4778598986135903],[3,0.42733599866560723],[4,0.38433409799127843]],\"meta\":{\"Best\":0.38433409799127843,\"curve_name\":\"loss\",\"metric_type\":\"LOSS\",\"name\":\"train\",\"unit_name\":\"iters\"}}}},\"retcode\":0,\"retmsg\":\"success\"} def component_metric (): uri = \"/tracking/component/metrics\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_metric_data (): uri = \"/tracking/component/metric_data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" , \"metric_name\" : \"intersection\" , \"metric_namespace\" : \"train\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_parameters (): uri = \"/tracking/component/parameters\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_model (): uri = \"/tracking/component/output/model\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data (): uri = \"/tracking/component/output/data\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_output_data_download (): uri = \"/tracking/component/output/data/download\" download_tar_file_name = \"data.tar.gz\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . get ( base_url + uri , json = data ) print ( res . text ) with open ( download_tar_file_name , \"wb\" ) as fw : for chunk in res . iter_content ( 1024 ): if chunk : fw . write ( chunk ) tar = tarfile . open ( download_tar_file_name , \"r:gz\" ) file_names = tar . getnames () for file_name in file_names : tar . extract ( file_name ) tar . close () def component_output_data_table (): uri = \"/tracking/component/output/data/table\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0a\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_component_summary_download (): uri = \"/tracking/component/summary/download\" data = { \"job_id\" : \"202203311009181495690\" , \"role\" : \"guest\" , \"party_id\" : 20001 , \"component_name\" : \"Intersection_0\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def component_list (): uri = \"/tracking/component/list\" data = { \"job_id\" : \"202203311009181495690\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) component_list ()","title":"5. \u6307\u6807"},{"location":"zh/fate_flow_http_api_call_demo/#6","text":"import requests base_url = \"http://127.0.0.1:9380/v1\" def resource_query (): uri = \"/resource/query\" data = { \"engine_name\" : \"EGGROLL\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) def resource_return (): uri = \"/resource/return\" data = { \"job_id\" : \"202204261616175720130\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) resource_return ()","title":"6. \u8d44\u6e90"},{"location":"zh/fate_flow_http_api_call_demo/#7","text":"import requests base_url = \"http://127.0.0.1:9380/v1\" def grant_privilege (): uri = \"/permission/grant/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"all\" , \"privilege_component\" : \"all\" , \"privilege_command\" : \"all\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # grant_privilege() def delete_privilege (): uri = \"/permission/delete/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" , \"privilege_role\" : \"guest\" , \"privilege_component\" : \"dataio\" , \"privilege_command\" : \"create\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) # delete_privilege() def query_privilege (): uri = \"/permission/query/privilege\" data = { \"src_role\" : \"guest\" , \"src_party_id\" : \"9999\" } res = requests . post ( base_url + uri , json = data ) print ( res . text ) query_privilege ()","title":"7. \u6743\u9650"},{"location":"zh/fate_flow_job_scheduling/","text":"\u591a\u65b9\u8054\u5408\u4f5c\u4e1a&\u4efb\u52a1\u8c03\u5ea6 \u00b6 1. \u8bf4\u660e \u00b6 \u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 FATE Flow \u63d0\u4ea4\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u5e76\u89c2\u5bdf\u4f7f\u7528 2. \u4f5c\u4e1a\u63d0\u4ea4 \u00b6 \u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u5e76\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c \u9700\u8981\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf job dsl\u914d\u7f6e\u8fd0\u884c\u7684\u7ec4\u4ef6\uff1a\u5217\u8868\u3001\u8f93\u5165\u8f93\u51fa\u5173\u7cfb job conf\u914d\u7f6e\u7ec4\u4ef6\u6267\u884c\u53c2\u6570\u3001\u7cfb\u7edf\u8fd0\u884c\u53c2\u6570 \u901a\u8fc7\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf\u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c flow job submit [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -d, --dsl-path \u662f string job dsl\u7684\u8def\u5f84 -c, --conf-path \u662f string job conf\u7684\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e data.dsl_path string \u4f9d\u636e\u63d0\u4ea4\u7684dsl\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5b9e\u9645\u8fd0\u884cdsl\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.runtime_conf_on_party_path string \u4f9d\u636e\u63d0\u4ea4\u7684conf\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5728\u6bcf\u4e2aparty\u5b9e\u9645\u8fd0\u884cconf\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.board_url string fateboard\u67e5\u770b\u5730\u5740 data.model_info dict \u6a21\u578b\u6807\u8bc6\u4fe1\u606f \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. Job DSL\u914d\u7f6e\u8bf4\u660e \u00b6 DSL \u7684\u914d\u7f6e\u6587\u4ef6\u91c7\u7528 json \u683c\u5f0f\uff0c\u5b9e\u9645\u4e0a\uff0c\u6574\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a json \u5bf9\u8c61 \uff08dict\uff09\u3002 3.1 \u7ec4\u4ef6\u5217\u8868 \u00b6 \u63cf\u8ff0 \u5728\u8fd9\u4e2a dict \u7684\u7b2c\u4e00\u7ea7\u662f components \uff0c\u7528\u6765\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5c06\u4f1a\u4f7f\u7528\u5230\u7684\u5404\u4e2a\u6a21\u5757\u3002 \u6837\u4f8b { \"components\" : { ... } } \u6bcf\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\u5b9a\u4e49\u5728 \"components\" \u4e4b\u4e0b\uff0c\u4f8b\u5982\uff1a \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.train_data\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"model\" ] } } \u6240\u6709\u6570\u636e\u9700\u8981\u901a\u8fc7**Reader**\u6a21\u5757\u4ece\u6570\u636e\u5b58\u50a8\u62ff\u53d6\u6570\u636e\uff0c\u6ce8\u610f\u6b64\u6a21\u5757\u4ec5\u6709\u8f93\u51fa output \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"train\" ] } } 3.2 \u6a21\u5757 \u00b6 \u63cf\u8ff0 \u7528\u6765\u6307\u5b9a\u4f7f\u7528\u7684\u7ec4\u4ef6\uff0c\u6240\u6709\u53ef\u9009module\u540d\u79f0\u53c2\u8003\uff1a \u6837\u4f8b \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , ... } 3.3 \u8f93\u5165 \u00b6 \u63cf\u8ff0 \u4e0a\u6e38\u8f93\u5165\uff0c\u5206\u4e3a\u4e24\u79cd\u8f93\u5165\u7c7b\u578b\uff0c\u5206\u522b\u662f\u6570\u636e\u548c\u6a21\u578b\u3002 \u6570\u636e\u8f93\u5165 \u00b6 \u63cf\u8ff0 \u4e0a\u6e38\u6570\u636e\u8f93\u5165\uff0c\u5206\u4e3a\u4e09\u79cd\u8f93\u5165\u7c7b\u578b\uff1a > 1. data: \u4e00\u822c\u88ab\u7528\u4e8e data-transform\u6a21\u5757, feature_engineering \u6a21\u5757\u6216\u8005 > evaluation \u6a21\u5757 > 2. train_data: \u4e00\u822c\u88ab\u7528\u4e8e homo_lr, hetero_lr \u548c secure_boost > \u6a21\u5757\u3002\u5982\u679c\u51fa\u73b0\u4e86 train_data \u5b57\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4efb\u52a1\u5c06\u4f1a\u88ab\u8bc6\u522b\u4e3a\u4e00\u4e2a fit \u4efb\u52a1 > 3. validate_data\uff1a \u5982\u679c\u5b58\u5728 train_data > \u5b57\u6bb5\uff0c\u90a3\u4e48\u8be5\u5b57\u6bb5\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u9009\u62e9\u4fdd\u7559\u8be5\u5b57\u6bb5\uff0c\u5219\u6307\u5411\u7684\u6570\u636e\u5c06\u4f1a\u4f5c\u4e3a > validation set > 4. test_data: \u7528\u4f5c\u9884\u6d4b\u6570\u636e\uff0c\u5982\u63d0\u4f9b\uff0c\u9700\u540c\u65f6\u63d0\u4f9bmodel\u8f93\u5165\u3002 \u6a21\u578b\u8f93\u5165 \u00b6 \u63cf\u8ff0 \u4e0a\u6e38\u6a21\u578b\u8f93\u5165\uff0c\u5206\u4e3a\u4e24\u79cd\u8f93\u5165\u7c7b\u578b\uff1a 1. model: \u7528\u4e8e\u540c\u79cd\u7c7b\u578b\u7ec4\u4ef6\u7684\u6a21\u578b\u8f93\u5165\u3002\u4f8b\u5982\uff0chetero_binning_0 \u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c fit\uff0c\u7136\u540e hetero_binning_1 \u5c06\u4f1a\u4f7f\u7528 hetero_binning_0 \u7684\u8f93\u51fa\u7528\u4e8e predict \u6216 transform\u3002\u4ee3\u7801\u793a\u4f8b\uff1a \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_1.validate_data\" ] }, \"model\" : [ \"hetero_feature_binning_0.fit_model\" ] }, \"output\" : { \"data\" : [ \"validate_data\" ], \"model\" : [ \"eval_model\" ] } } 2. isometric_model: \u7528\u4e8e\u6307\u5b9a\u7ee7\u627f\u4e0a\u6e38\u7ec4\u4ef6\u7684\u6a21\u578b\u8f93\u5165\u3002 \u4f8b\u5982\uff0cfeature selection \u7684\u4e0a\u6e38\u7ec4\u4ef6\u662f feature binning\uff0c\u5b83\u5c06\u4f1a\u7528\u5230 feature binning \u7684\u4fe1\u606f\u6765\u4f5c\u4e3a feature importance\u3002\u4ee3\u7801\u793a\u4f8b\uff1a \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.output_model\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"output_model\" ] } } 3.4 \u8f93\u51fa \u00b6 \u63cf\u8ff0 \u8f93\u51fa\uff0c\u4e0e\u8f93\u5165\u4e00\u6837\uff0c\u5206\u4e3a\u6570\u636e\u548c\u6a21\u578b\u8f93\u51fa \u6570\u636e\u8f93\u51fa \u00b6 \u63cf\u8ff0 \u6570\u636e\u8f93\u51fa\uff0c\u5206\u4e3a\u56db\u79cd\u8f93\u51fa\u7c7b\u578b\uff1a data: \u5e38\u89c4\u6a21\u5757\u6570\u636e\u8f93\u51fa train_data: \u4ec5\u7528\u4e8eData Split validate_data: \u4ec5\u7528\u4e8eData Split test_data\uff1a \u4ec5\u7528\u4e8eData Split \u6a21\u578b\u8f93\u51fa \u00b6 \u63cf\u8ff0 \u6a21\u578b\u8f93\u51fa\uff0c\u4ec5\u4f7f\u7528model 3.5 \u7ec4\u4ef6Provider \u00b6 FATE-Flow 1.7.0\u7248\u672c\u5f00\u59cb\uff0c\u540c\u4e00\u4e2aFATE-Flow\u7cfb\u7edf\u652f\u6301\u52a0\u8f7d\u591a\u79cd\u4e14\u591a\u7248\u672c\u7684\u7ec4\u4ef6\u63d0\u4f9b\u65b9\uff0c\u4e5f\u5373provider\uff0cprovider\u63d0\u4f9b\u4e86\u82e5\u5e72\u4e2a\u7ec4\u4ef6\uff0c\u63d0\u4ea4\u4f5c\u4e1a\u65f6\u53ef\u4ee5\u914d\u7f6e\u7ec4\u4ef6\u7684\u6765\u6e90provider FATE-Flow 1.9.0\u7248\u672c\u5f00\u59cb\uff0cprovider\u7684\u53c2\u6570\u9700\u5728conf\u4e2d\u914d\u7f6e\uff0c\u5177\u4f53\u5982\u4e0b \u63cf\u8ff0 \u6307\u5b9aprovider\uff0c\u652f\u6301\u5168\u5c40\u6307\u5b9a\u4ee5\u53ca\u5355\u4e2a\u7ec4\u4ef6\u6307\u5b9a\uff1b\u82e5\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4 provider\uff1a fate@$FATE_VERSION \u683c\u5f0f provider_name@$provider_version \u8fdb\u9636 \u53ef\u4ee5\u901a\u8fc7\u7ec4\u4ef6\u6ce8\u518cCLI\u6ce8\u518c\u65b0\u7684 provider\uff0c\u76ee\u524d\u652f\u6301\u7684 provider\uff1afate \u548c fate_sql\uff0c\u5177\u4f53\u8bf7\u53c2\u8003 FATE Flow \u7ec4\u4ef6\u4e2d\u5fc3 \u6837\u4f8b { \"dsl_version\" : \"2\" , \"initiator\" : {}, \"role\" : {}, \"job_parameters\" : {}, \"component_parameters\" : {}, \"provider\" : { \"common\" : { \"hetero_feature_binning_0\" : \"fate@1.8.0\" }, \"role\" : { \"guest\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } }, \"host\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } } } } } 4. Job Conf\u914d\u7f6e\u8bf4\u660e \u00b6 Job Conf\u7528\u4e8e\u8bbe\u7f6e\u5404\u4e2a\u53c2\u4e0e\u65b9\u7684\u4fe1\u606f, \u4f5c\u4e1a\u7684\u53c2\u6570\u53ca\u5404\u4e2a\u7ec4\u4ef6\u7684\u53c2\u6570\u3002 \u5185\u5bb9\u5305\u62ec\u5982\u4e0b\uff1a 4.1 DSL\u7248\u672c \u00b6 \u63cf\u8ff0 \u914d\u7f6e\u7248\u672c\uff0c\u9ed8\u8ba4\u4e0d\u914d\u7f6e\u4e3a1\uff0c\u5efa\u8bae\u914d\u7f6e\u4e3a2 \u6837\u4f8b \"dsl_version\" : \"2\" 4.2 \u4f5c\u4e1a\u53c2\u4e0e\u65b9 \u00b6 \u53d1\u8d77\u65b9 \u00b6 \u63cf\u8ff0 \u4efb\u52a1\u53d1\u8d77\u65b9\u7684role\u548cparty_id\u3002 \u6837\u4f8b \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 9999 } \u6240\u6709\u53c2\u4e0e\u65b9 \u00b6 \u63cf\u8ff0 \u5404\u53c2\u4e0e\u65b9\u7684\u4fe1\u606f\u3002 \u8bf4\u660e \u5728 role \u5b57\u6bb5\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u4e00\u79cd\u89d2\u8272\u4ee5\u53ca\u627f\u62c5\u8fd9\u4e2a\u89d2\u8272\u7684 party_id\u3002\u6bcf\u4e2a\u89d2\u8272\u7684 party_id \u4ee5\u5217\u8868\u5f62\u5f0f\u5b58\u5728\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4efb\u52a1\u53ef\u80fd\u6d89\u53ca\u5230\u591a\u4e2a party \u62c5\u4efb\u540c\u4e00\u79cd\u89d2\u8272\u3002 \u6837\u4f8b \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ], \"arbiter\" : [ 10000 ] } 4.3 \u7cfb\u7edf\u8fd0\u884c\u53c2\u6570 \u00b6 \u63cf\u8ff0 \u914d\u7f6e\u4f5c\u4e1a\u8fd0\u884c\u65f6\u7684\u4e3b\u8981\u7cfb\u7edf\u53c2\u6570 \u53c2\u6570\u5e94\u7528\u8303\u56f4\u7b56\u7565\u8bbe\u7f6e \u00b6 **\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528common\u8303\u56f4\u6807\u8bc6\u7b26 **\u4ec5\u5e94\u7528\u4e8e\u67d0\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528role\u8303\u56f4\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528(role:)party_index\u5b9a\u4f4d\u88ab\u6307\u5b9a\u7684\u53c2\u4e0e\u65b9\uff0c\u76f4\u63a5\u6307\u5b9a\u7684\u53c2\u6570\u4f18\u5148\u7ea7\u9ad8\u4e8ecommon\u53c2\u6570 \"common\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } \u5176\u4e2dcommon\u4e0b\u7684\u53c2\u6570\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0crole-guest-0\u914d\u7f6e\u4e0b\u7684\u53c2\u6570\u5e94\u7528\u4e8eguest\u89d2\u82720\u53f7\u4e0b\u6807\u7684\u53c2\u4e0e\u65b9 \u6ce8\u610f\uff0c\u5f53\u524d\u7248\u672c\u7cfb\u7edf\u8fd0\u884c\u53c2\u6570\u672a\u5bf9\u4ec5\u5e94\u7528\u4e8e\u67d0\u53c2\u4e0e\u65b9\u505a\u4e25\u683c\u6d4b\u8bd5\uff0c\u5efa\u8bae\u4f7f\u7528\u4f18\u5148\u9009\u7528common \u652f\u6301\u7684\u7cfb\u7edf\u53c2\u6570 \u00b6 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u652f\u6301\u503c \u8bf4\u660e job_type train train, predict \u4efb\u52a1\u7c7b\u578b task_cores 4 \u6b63\u6574\u6570 \u4f5c\u4e1a\u7533\u8bf7\u7684\u603bcpu\u6838\u6570 task_parallelism 1 \u6b63\u6574\u6570 task\u5e76\u884c\u5ea6 computing_partitions task\u6240\u5206\u914d\u5230\u7684cpu\u6838\u6570 \u6b63\u6574\u6570 \u8ba1\u7b97\u65f6\u6570\u636e\u8868\u7684\u5206\u533a\u6570 eggroll_run \u65e0 processors_per_node\u7b49 eggroll\u8ba1\u7b97\u5f15\u64ce\u76f8\u5173\u914d\u7f6e\u53c2\u6570\uff0c\u4e00\u822c\u65e0\u987b\u914d\u7f6e\uff0c\u7531task_cores\u81ea\u52a8\u8ba1\u7b97\u5f97\u5230\uff0c\u82e5\u914d\u7f6e\u5219task_cores\u53c2\u6570\u4e0d\u751f\u6548 spark_run \u65e0 num-executors, executor-cores\u7b49 spark\u8ba1\u7b97\u5f15\u64ce\u76f8\u5173\u914d\u7f6e\u53c2\u6570\uff0c\u4e00\u822c\u65e0\u987b\u914d\u7f6e\uff0c\u7531task_cores\u81ea\u52a8\u8ba1\u7b97\u5f97\u5230\uff0c\u82e5\u914d\u7f6e\u5219task_cores\u53c2\u6570\u4e0d\u751f\u6548 rabbitmq_run \u65e0 queue, exchange\u7b49 rabbitmq\u521b\u5efaqueue\u3001exchange\u7684\u76f8\u5173\u914d\u7f6e\u53c2\u6570\uff0c\u4e00\u822c\u65e0\u987b\u914d\u7f6e\uff0c\u91c7\u53d6\u7cfb\u7edf\u9ed8\u8ba4\u503c pulsar_run \u65e0 producer, consumer\u7b49 pulsar\u521b\u5efaproducer\u548cconsumer\u65f6\u5019\u7684\u76f8\u5173\u914d\u7f6e\uff0c\u4e00\u822c\u65e0\u9700\u914d\u7f6e\u3002 federated_status_collect_type PUSH PUSH, PULL \u591a\u65b9\u8fd0\u884c\u72b6\u6001\u6536\u96c6\u6a21\u5f0f\uff0cPUSH\u8868\u793a\u6bcf\u4e2a\u53c2\u4e0e\u65b9\u4e3b\u52a8\u4e0a\u62a5\u5230\u53d1\u8d77\u65b9\uff0cPULL\u8868\u793a\u53d1\u8d77\u65b9\u5b9a\u671f\u5411\u5404\u4e2a\u53c2\u4e0e\u65b9\u62c9\u53d6 timeout 259200 (3\u5929) \u6b63\u6574\u6570 \u4efb\u52a1\u8d85\u65f6\u65f6\u95f4,\u5355\u4f4d\u79d2 audo_retries 3 \u6b63\u6574\u6570 \u6bcf\u4e2a\u4efb\u52a1\u5931\u8d25\u81ea\u52a8\u91cd\u8bd5\u6700\u5927\u6b21\u6570 model_id - - \u6a21\u578bid\uff0c\u9884\u6d4b\u4efb\u52a1\u9700\u8981\u586b\u5165 model_version - - \u6a21\u578bversion\uff0c\u9884\u6d4b\u4efb\u52a1\u9700\u8981\u586b\u5165 \u8ba1\u7b97\u5f15\u64ce\u548c\u5b58\u50a8\u5f15\u64ce\u4e4b\u95f4\u5177\u6709\u4e00\u5b9a\u7684\u652f\u6301\u4f9d\u8d56\u5173\u7cfb \u5f00\u53d1\u8005\u53ef\u81ea\u884c\u5b9e\u73b0\u9002\u914d\u7684\u5f15\u64ce\uff0c\u5e76\u5728runtime config\u914d\u7f6e\u5f15\u64ce \u53c2\u8003\u914d\u7f6e \u00b6 \u65e0\u987b\u5173\u6ce8\u8ba1\u7b97\u5f15\u64ce\uff0c\u91c7\u53d6\u7cfb\u7edf\u9ed8\u8ba4cpu\u5206\u914d\u8ba1\u7b97\u7b56\u7565\u65f6\u7684\u914d\u7f6e \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } \u4f7f\u7528eggroll\u4f5c\u4e3acomputing engine\uff0c\u91c7\u53d6\u76f4\u63a5\u6307\u5b9acpu\u7b49\u53c2\u6570\u65f6\u7684\u914d\u7f6e \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"eggroll_run\" : { \"eggroll.session.processors.per.node\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , } } \u4f7f\u7528spark\u4f5c\u4e3acomputing engine\uff0crabbitmq\u4f5c\u4e3afederation engine,\u91c7\u53d6\u76f4\u63a5\u6307\u5b9acpu\u7b49\u53c2\u6570\u65f6\u7684\u914d\u7f6e \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , \"rabbitmq_run\" : { \"queue\" : { \"durable\" : true }, \"connection\" : { \"heartbeat\" : 10000 } } } } \u4f7f\u7528spark\u4f5c\u4e3acomputing engine\uff0cpulsar\u4f5c\u4e3afederation engine \"job_parameters\" : { \"common\" : { \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, } } \u66f4\u591a\u8d44\u6e90\u76f8\u5173\u9ad8\u7ea7\u914d\u7f6e\u8bf7\u53c2\u8003 \u8d44\u6e90\u7ba1\u7406 4.3 \u7ec4\u4ef6\u8fd0\u884c\u53c2\u6570 \u00b6 \u53c2\u6570\u5e94\u7528\u8303\u56f4\u7b56\u7565\u8bbe\u7f6e \u00b6 \u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528common\u8303\u56f4\u6807\u8bc6\u7b26 \u4ec5\u5e94\u7528\u4e8e\u67d0\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528role\u8303\u56f4\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528(role:)party_index\u5b9a\u4f4d\u88ab\u6307\u5b9a\u7684\u53c2\u4e0e\u65b9\uff0c\u76f4\u63a5\u6307\u5b9a\u7684\u53c2\u6570\u4f18\u5148\u7ea7\u9ad8\u4e8ecommon\u53c2\u6570 \"commom\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } \u5176\u4e2dcommon\u914d\u7f6e\u4e0b\u7684\u53c2\u6570\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0crole-guest-0\u914d\u7f6e\u4e0b\u7684\u53c2\u6570\u8868\u793a\u5e94\u7528\u4e8eguest\u89d2\u82720\u53f7\u4e0b\u6807\u7684\u53c2\u4e0e\u65b9 \u6ce8\u610f\uff0c\u5f53\u524d\u7248\u672c\u7ec4\u4ef6\u8fd0\u884c\u53c2\u6570\u5df2\u652f\u6301\u4e24\u79cd\u5e94\u7528\u8303\u56f4\u7b56\u7565 \u53c2\u8003\u914d\u7f6e \u00b6 intersection_0 \u4e0e hetero_lr_0 \u4e24\u4e2a\u7ec4\u4ef6\u7684\u8fd0\u884c\u53c2\u6570\uff0c\u653e\u5728common\u8303\u56f4\u4e0b\uff0c\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9 \u5bf9\u4e8e reader_0 \u4e0e data_transform_0 \u4e24\u4e2a\u7ec4\u4ef6\u7684\u8fd0\u884c\u53c2\u6570\uff0c\u4f9d\u636e\u4e0d\u540c\u7684\u53c2\u4e0e\u65b9\u8fdb\u884c\u7279\u5b9a\u914d\u7f6e\uff0c\u8fd9\u662f\u56e0\u4e3a\u901a\u5e38\u4e0d\u540c\u53c2\u4e0e\u65b9\u7684\u8f93\u5165\u53c2\u6570\u5e76\u4e0d\u4e00\u81f4\uff0c\u6240\u6709\u901a\u5e38\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u4e00\u822c\u6309\u53c2\u4e0e\u65b9\u8bbe\u7f6e \u4e0a\u8ff0\u7ec4\u4ef6\u540d\u79f0\u662f\u5728DSL\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49 \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : true , \"only_output_key\" : false }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : true , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : false , \"output_format\" : \"dense\" } } } } } 5. \u591aHost \u914d\u7f6e \u00b6 \u591aHost\u4efb\u52a1\u5e94\u5728role\u4e0b\u5217\u4e3e\u6240\u6709host\u4fe1\u606f \u6837\u4f8b : \"role\" : { \"guest\" : [ 10000 ], \"host\" : [ 10000 , 10001 , 10002 ], \"arbiter\" : [ 10000 ] } \u5404host\u4e0d\u540c\u7684\u914d\u7f6e\u5e94\u5728\u5404\u81ea\u5bf9\u5e94\u6a21\u5757\u4e0b\u5206\u522b\u5217\u4e3e \u6837\u4f8b : \"component_parameters\" : { \"role\" : { \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_0\" , \"namespace\" : \"hetero_breast_host\" } } }, \"1\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_1\" , \"namespace\" : \"hetero_breast_host\" } } }, \"2\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_2\" , \"namespace\" : \"hetero_breast_host\" } } } } } } 6. \u9884\u6d4b\u4efb\u52a1\u914d\u7f6e \u00b6 6.1 \u8bf4\u660e \u00b6 DSL V2\u4e0d\u4f1a\u81ea\u52a8\u4e3a\u8bad\u7ec3\u4efb\u52a1\u751f\u6210\u9884\u6d4bdsl\u3002 \u7528\u6237\u9700\u8981\u9996\u5148\u4f7f\u7528 Flow Client \u90e8\u7f72\u6240\u9700\u6a21\u578b\u4e2d\u6a21\u5757\u3002 \u8be6\u7ec6\u547d\u4ee4\u8bf4\u660e\u8bf7\u53c2\u8003 fate_flow_client flow model deploy --model-id $model_id --model-version $model_version --cpn-list ... \u53ef\u9009\u5730\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u9884\u6d4bdsl\u4e2d\u52a0\u5165\u65b0\u6a21\u5757\uff0c\u5982 Evaluation 6.2 \u6837\u4f8b \u00b6 \u8bad\u7ec3 dsl\uff1a \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } } } \u9884\u6d4b dsl: \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_nn_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ] } } } 7. \u4f5c\u4e1a\u91cd\u8dd1 \u00b6 1.5.0 \u7248\u672c, \u5f00\u59cb\u652f\u6301\u91cd\u8dd1\u67d0\u4e2a\u4f5c\u4e1a, \u4f46\u662f\u4ec5\u652f\u6301\u5931\u8d25\u7684\u4f5c\u4e1a 1.7.0 \u7248\u672c\u652f\u6301\u6210\u529f\u7684\u4f5c\u4e1a\u91cd\u8dd1, \u5e76\u4e14\u53ef\u4ee5\u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u5f00\u59cb\u91cd\u8dd1, \u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u53ca\u5176\u4e0b\u6e38\u7ec4\u4ef6\u4f1a\u91cd\u8dd1, \u4f46\u5176\u4ed6\u7ec4\u4ef6\u4e0d\u4f1a\u91cd\u8dd1 \u91cd\u65b0\u8fd0\u884c\u67d0\u4e2a\u4f5c\u4e1a flow job rerun [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -cpn, --component-name \u5426 string \u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u91cd\u8dd1\uff0c\u6ca1\u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u82e5\u4e0e\u6307\u5b9a\u7ec4\u4ef6\u6ca1\u6709\u4e0a\u6e38\u4f9d\u8d56\u5173\u7cfb\u5219\u4e0d\u4f1a\u6267\u884c;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u5219\u6574\u4e2a\u4f5c\u4e1a\u91cd\u8dd1 --force \u5426 bool \u4f5c\u4e1a\u5373\u4f7f\u6210\u529f\u4e5f\u91cd\u8dd1;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u4f5c\u4e1a\u5982\u679c\u6210\u529f\uff0c\u5219\u8df3\u8fc7\u91cd\u8dd1 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force 8. \u4f5c\u4e1a\u53c2\u6570\u66f4\u65b0 \u00b6 \u5b9e\u9645\u751f\u4ea7\u5efa\u6a21\u8fc7\u7a0b\u4e2d, \u9700\u8981\u8fdb\u884c\u4e0d\u65ad\u8c03\u8bd5\u4fee\u6539\u7ec4\u4ef6\u53c2\u6570\u4e14\u91cd\u8dd1, \u4f46\u662f\u6b64\u65f6\u5e76\u4e0d\u662f\u6240\u6709\u7ec4\u4ef6\u90fd\u9700\u8981\u8c03\u6574\u5e76\u4e14\u91cd\u8dd1, \u56e0\u6b64\u5728 1.7.0 \u7248\u672c\u540e\u652f\u6301\u4fee\u6539\u67d0\u4e2a\u7ec4\u4ef6\u7684\u53c2\u6570\u66f4\u65b0, \u4e14\u914d\u5408 rerun \u547d\u4ee4\u6309\u9700\u91cd\u8dd1 \u66f4\u65b0\u4f5c\u4e1a\u53c2\u6570 flow job parameter-update [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -c, --conf-path \u662f string \u9700\u8981\u66f4\u65b0\u7684job conf\u7684\u5185\u5bb9\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u7684\u53c2\u6570\u4e0d\u9700\u8981\u586b\u5199 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u66f4\u65b0\u540e\u7684job conf \u6837\u4f8b \u5047\u8bbe\u66f4\u65b0job\u4e2dhetero_lr_0\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u90e8\u5206\u6267\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6548\uff1a flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u91cd\u8dd1\uff1a flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force 9. \u4f5c\u4e1a\u8c03\u5ea6\u7b56\u7565 \u00b6 \u6309\u63d0\u4ea4\u65f6\u95f4\u5148\u540e\u5165\u961f \u76ee\u524d\u4ec5\u652f\u6301FIFO\u7b56\u7565\uff0c\u4e5f\u5373\u6bcf\u6b21\u8c03\u5ea6\u5668\u4ec5\u4f1a\u626b\u63cf\u7b2c\u4e00\u4e2a\u4f5c\u4e1a\uff0c\u82e5\u7b2c\u4e00\u4e2a\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u6210\u529f\u5219start\u4e14\u51fa\u961f\uff0c\u82e5\u7533\u8bf7\u8d44\u6e90\u5931\u8d25\u5219\u7b49\u5f85\u4e0b\u4e00\u8f6e\u8c03\u5ea6 10. \u4f9d\u8d56\u5206\u53d1 \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a \u652f\u6301\u4ececlient\u8282\u70b9\u5206\u53d1fate\u548cpython\u4f9d\u8d56; work\u8282\u70b9\u4e0d\u7528\u90e8\u7f72fate; \u5f53\u524d\u7248\u672c\u53ea\u6709fate on spark\u652f\u6301\u5206\u53d1\u6a21\u5f0f; \u76f8\u5173\u53c2\u6570\u914d\u7f6e : conf/service_conf.yaml: dependent_distribution : true fate_flow/settings.py FATE_FLOW_UPDATE_CHECK = False \u8bf4\u660e\uff1a dependent_distribution: \u4f9d\u8d56\u5206\u53d1\u5f00\u5173;\uff0c\u9ed8\u8ba4\u5173\u95ed;\u5173\u95ed\u65f6\u9700\u8981\u5728\u6bcf\u4e2awork\u8282\u70b9\u90e8\u7f72fate, \u53e6\u5916\u8fd8\u9700\u8981\u5728spark\u7684\u914d\u7f6espark-env.sh\u4e2d\u586b\u914d\u7f6ePYSPARK_DRIVER_PYTHON\u548cPYSPARK_PYTHON\uff1b FATE_FLOW_UPDATE_CHECK: \u4f9d\u8d56\u6821\u9a8c\u5f00\u5173, \u9ed8\u8ba4\u5173\u95ed;\u6253\u5f00\u540e\u6bcf\u6b21\u63d0\u4ea4\u4efb\u52a1\u90fd\u4f1a\u81ea\u52a8\u6821\u9a8cfate\u4ee3\u7801\u662f\u5426\u53d1\u751f\u6539\u53d8;\u82e5\u53d1\u751f\u6539\u53d8\u5219\u4f1a\u91cd\u65b0\u4e0a\u4f20fate\u4ee3\u7801\u4f9d\u8d56; 11. \u66f4\u591a\u547d\u4ee4 \u00b6 \u8bf7\u53c2\u8003 Job CLI \u548c Task CLI","title":"\u591a\u65b9\u8054\u5408\u4f5c\u4e1a&\u4efb\u52a1\u8c03\u5ea6"},{"location":"zh/fate_flow_job_scheduling/#_1","text":"","title":"\u591a\u65b9\u8054\u5408\u4f5c\u4e1a&amp;\u4efb\u52a1\u8c03\u5ea6"},{"location":"zh/fate_flow_job_scheduling/#1","text":"\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 FATE Flow \u63d0\u4ea4\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u5e76\u89c2\u5bdf\u4f7f\u7528","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_job_scheduling/#2","text":"\u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u5e76\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c \u9700\u8981\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf job dsl\u914d\u7f6e\u8fd0\u884c\u7684\u7ec4\u4ef6\uff1a\u5217\u8868\u3001\u8f93\u5165\u8f93\u51fa\u5173\u7cfb job conf\u914d\u7f6e\u7ec4\u4ef6\u6267\u884c\u53c2\u6570\u3001\u7cfb\u7edf\u8fd0\u884c\u53c2\u6570 \u901a\u8fc7\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf\u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c flow job submit [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -d, --dsl-path \u662f string job dsl\u7684\u8def\u5f84 -c, --conf-path \u662f string job conf\u7684\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e data.dsl_path string \u4f9d\u636e\u63d0\u4ea4\u7684dsl\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5b9e\u9645\u8fd0\u884cdsl\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.runtime_conf_on_party_path string \u4f9d\u636e\u63d0\u4ea4\u7684conf\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5728\u6bcf\u4e2aparty\u5b9e\u9645\u8fd0\u884cconf\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.board_url string fateboard\u67e5\u770b\u5730\u5740 data.model_info dict \u6a21\u578b\u6807\u8bc6\u4fe1\u606f \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2. \u4f5c\u4e1a\u63d0\u4ea4"},{"location":"zh/fate_flow_job_scheduling/#3-job-dsl","text":"DSL \u7684\u914d\u7f6e\u6587\u4ef6\u91c7\u7528 json \u683c\u5f0f\uff0c\u5b9e\u9645\u4e0a\uff0c\u6574\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a json \u5bf9\u8c61 \uff08dict\uff09\u3002","title":"3. Job DSL\u914d\u7f6e\u8bf4\u660e"},{"location":"zh/fate_flow_job_scheduling/#31","text":"\u63cf\u8ff0 \u5728\u8fd9\u4e2a dict \u7684\u7b2c\u4e00\u7ea7\u662f components \uff0c\u7528\u6765\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5c06\u4f1a\u4f7f\u7528\u5230\u7684\u5404\u4e2a\u6a21\u5757\u3002 \u6837\u4f8b { \"components\" : { ... } } \u6bcf\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\u5b9a\u4e49\u5728 \"components\" \u4e4b\u4e0b\uff0c\u4f8b\u5982\uff1a \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.train_data\" ] } }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"model\" ] } } \u6240\u6709\u6570\u636e\u9700\u8981\u901a\u8fc7**Reader**\u6a21\u5757\u4ece\u6570\u636e\u5b58\u50a8\u62ff\u53d6\u6570\u636e\uff0c\u6ce8\u610f\u6b64\u6a21\u5757\u4ec5\u6709\u8f93\u51fa output \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"train\" ] } }","title":"3.1 \u7ec4\u4ef6\u5217\u8868"},{"location":"zh/fate_flow_job_scheduling/#32","text":"\u63cf\u8ff0 \u7528\u6765\u6307\u5b9a\u4f7f\u7528\u7684\u7ec4\u4ef6\uff0c\u6240\u6709\u53ef\u9009module\u540d\u79f0\u53c2\u8003\uff1a \u6837\u4f8b \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , ... }","title":"3.2 \u6a21\u5757"},{"location":"zh/fate_flow_job_scheduling/#33","text":"\u63cf\u8ff0 \u4e0a\u6e38\u8f93\u5165\uff0c\u5206\u4e3a\u4e24\u79cd\u8f93\u5165\u7c7b\u578b\uff0c\u5206\u522b\u662f\u6570\u636e\u548c\u6a21\u578b\u3002","title":"3.3 \u8f93\u5165"},{"location":"zh/fate_flow_job_scheduling/#_2","text":"\u63cf\u8ff0 \u4e0a\u6e38\u6570\u636e\u8f93\u5165\uff0c\u5206\u4e3a\u4e09\u79cd\u8f93\u5165\u7c7b\u578b\uff1a > 1. data: \u4e00\u822c\u88ab\u7528\u4e8e data-transform\u6a21\u5757, feature_engineering \u6a21\u5757\u6216\u8005 > evaluation \u6a21\u5757 > 2. train_data: \u4e00\u822c\u88ab\u7528\u4e8e homo_lr, hetero_lr \u548c secure_boost > \u6a21\u5757\u3002\u5982\u679c\u51fa\u73b0\u4e86 train_data \u5b57\u6bb5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4efb\u52a1\u5c06\u4f1a\u88ab\u8bc6\u522b\u4e3a\u4e00\u4e2a fit \u4efb\u52a1 > 3. validate_data\uff1a \u5982\u679c\u5b58\u5728 train_data > \u5b57\u6bb5\uff0c\u90a3\u4e48\u8be5\u5b57\u6bb5\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u9009\u62e9\u4fdd\u7559\u8be5\u5b57\u6bb5\uff0c\u5219\u6307\u5411\u7684\u6570\u636e\u5c06\u4f1a\u4f5c\u4e3a > validation set > 4. test_data: \u7528\u4f5c\u9884\u6d4b\u6570\u636e\uff0c\u5982\u63d0\u4f9b\uff0c\u9700\u540c\u65f6\u63d0\u4f9bmodel\u8f93\u5165\u3002","title":"\u6570\u636e\u8f93\u5165"},{"location":"zh/fate_flow_job_scheduling/#_3","text":"\u63cf\u8ff0 \u4e0a\u6e38\u6a21\u578b\u8f93\u5165\uff0c\u5206\u4e3a\u4e24\u79cd\u8f93\u5165\u7c7b\u578b\uff1a 1. model: \u7528\u4e8e\u540c\u79cd\u7c7b\u578b\u7ec4\u4ef6\u7684\u6a21\u578b\u8f93\u5165\u3002\u4f8b\u5982\uff0chetero_binning_0 \u4f1a\u5bf9\u6a21\u578b\u8fdb\u884c fit\uff0c\u7136\u540e hetero_binning_1 \u5c06\u4f1a\u4f7f\u7528 hetero_binning_0 \u7684\u8f93\u51fa\u7528\u4e8e predict \u6216 transform\u3002\u4ee3\u7801\u793a\u4f8b\uff1a \"hetero_feature_binning_1\" : { \"module\" : \"HeteroFeatureBinning\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_1.validate_data\" ] }, \"model\" : [ \"hetero_feature_binning_0.fit_model\" ] }, \"output\" : { \"data\" : [ \"validate_data\" ], \"model\" : [ \"eval_model\" ] } } 2. isometric_model: \u7528\u4e8e\u6307\u5b9a\u7ee7\u627f\u4e0a\u6e38\u7ec4\u4ef6\u7684\u6a21\u578b\u8f93\u5165\u3002 \u4f8b\u5982\uff0cfeature selection \u7684\u4e0a\u6e38\u7ec4\u4ef6\u662f feature binning\uff0c\u5b83\u5c06\u4f1a\u7528\u5230 feature binning \u7684\u4fe1\u606f\u6765\u4f5c\u4e3a feature importance\u3002\u4ee3\u7801\u793a\u4f8b\uff1a \"hetero_feature_selection_0\" : { \"module\" : \"HeteroFeatureSelection\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_feature_binning_0.train\" ] }, \"isometric_model\" : [ \"hetero_feature_binning_0.output_model\" ] }, \"output\" : { \"data\" : [ \"train\" ], \"model\" : [ \"output_model\" ] } }","title":"\u6a21\u578b\u8f93\u5165"},{"location":"zh/fate_flow_job_scheduling/#34","text":"\u63cf\u8ff0 \u8f93\u51fa\uff0c\u4e0e\u8f93\u5165\u4e00\u6837\uff0c\u5206\u4e3a\u6570\u636e\u548c\u6a21\u578b\u8f93\u51fa","title":"3.4 \u8f93\u51fa"},{"location":"zh/fate_flow_job_scheduling/#_4","text":"\u63cf\u8ff0 \u6570\u636e\u8f93\u51fa\uff0c\u5206\u4e3a\u56db\u79cd\u8f93\u51fa\u7c7b\u578b\uff1a data: \u5e38\u89c4\u6a21\u5757\u6570\u636e\u8f93\u51fa train_data: \u4ec5\u7528\u4e8eData Split validate_data: \u4ec5\u7528\u4e8eData Split test_data\uff1a \u4ec5\u7528\u4e8eData Split","title":"\u6570\u636e\u8f93\u51fa"},{"location":"zh/fate_flow_job_scheduling/#_5","text":"\u63cf\u8ff0 \u6a21\u578b\u8f93\u51fa\uff0c\u4ec5\u4f7f\u7528model","title":"\u6a21\u578b\u8f93\u51fa"},{"location":"zh/fate_flow_job_scheduling/#35-provider","text":"FATE-Flow 1.7.0\u7248\u672c\u5f00\u59cb\uff0c\u540c\u4e00\u4e2aFATE-Flow\u7cfb\u7edf\u652f\u6301\u52a0\u8f7d\u591a\u79cd\u4e14\u591a\u7248\u672c\u7684\u7ec4\u4ef6\u63d0\u4f9b\u65b9\uff0c\u4e5f\u5373provider\uff0cprovider\u63d0\u4f9b\u4e86\u82e5\u5e72\u4e2a\u7ec4\u4ef6\uff0c\u63d0\u4ea4\u4f5c\u4e1a\u65f6\u53ef\u4ee5\u914d\u7f6e\u7ec4\u4ef6\u7684\u6765\u6e90provider FATE-Flow 1.9.0\u7248\u672c\u5f00\u59cb\uff0cprovider\u7684\u53c2\u6570\u9700\u5728conf\u4e2d\u914d\u7f6e\uff0c\u5177\u4f53\u5982\u4e0b \u63cf\u8ff0 \u6307\u5b9aprovider\uff0c\u652f\u6301\u5168\u5c40\u6307\u5b9a\u4ee5\u53ca\u5355\u4e2a\u7ec4\u4ef6\u6307\u5b9a\uff1b\u82e5\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4 provider\uff1a fate@$FATE_VERSION \u683c\u5f0f provider_name@$provider_version \u8fdb\u9636 \u53ef\u4ee5\u901a\u8fc7\u7ec4\u4ef6\u6ce8\u518cCLI\u6ce8\u518c\u65b0\u7684 provider\uff0c\u76ee\u524d\u652f\u6301\u7684 provider\uff1afate \u548c fate_sql\uff0c\u5177\u4f53\u8bf7\u53c2\u8003 FATE Flow \u7ec4\u4ef6\u4e2d\u5fc3 \u6837\u4f8b { \"dsl_version\" : \"2\" , \"initiator\" : {}, \"role\" : {}, \"job_parameters\" : {}, \"component_parameters\" : {}, \"provider\" : { \"common\" : { \"hetero_feature_binning_0\" : \"fate@1.8.0\" }, \"role\" : { \"guest\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } }, \"host\" : { \"0\" : { \"data_transform_0\" : \"fate@1.9.0\" } } } } }","title":"3.5 \u7ec4\u4ef6Provider"},{"location":"zh/fate_flow_job_scheduling/#4-job-conf","text":"Job Conf\u7528\u4e8e\u8bbe\u7f6e\u5404\u4e2a\u53c2\u4e0e\u65b9\u7684\u4fe1\u606f, \u4f5c\u4e1a\u7684\u53c2\u6570\u53ca\u5404\u4e2a\u7ec4\u4ef6\u7684\u53c2\u6570\u3002 \u5185\u5bb9\u5305\u62ec\u5982\u4e0b\uff1a","title":"4. Job Conf\u914d\u7f6e\u8bf4\u660e"},{"location":"zh/fate_flow_job_scheduling/#41-dsl","text":"\u63cf\u8ff0 \u914d\u7f6e\u7248\u672c\uff0c\u9ed8\u8ba4\u4e0d\u914d\u7f6e\u4e3a1\uff0c\u5efa\u8bae\u914d\u7f6e\u4e3a2 \u6837\u4f8b \"dsl_version\" : \"2\"","title":"4.1 DSL\u7248\u672c"},{"location":"zh/fate_flow_job_scheduling/#42","text":"","title":"4.2 \u4f5c\u4e1a\u53c2\u4e0e\u65b9"},{"location":"zh/fate_flow_job_scheduling/#_6","text":"\u63cf\u8ff0 \u4efb\u52a1\u53d1\u8d77\u65b9\u7684role\u548cparty_id\u3002 \u6837\u4f8b \"initiator\" : { \"role\" : \"guest\" , \"party_id\" : 9999 }","title":"\u53d1\u8d77\u65b9"},{"location":"zh/fate_flow_job_scheduling/#_7","text":"\u63cf\u8ff0 \u5404\u53c2\u4e0e\u65b9\u7684\u4fe1\u606f\u3002 \u8bf4\u660e \u5728 role \u5b57\u6bb5\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u4e00\u79cd\u89d2\u8272\u4ee5\u53ca\u627f\u62c5\u8fd9\u4e2a\u89d2\u8272\u7684 party_id\u3002\u6bcf\u4e2a\u89d2\u8272\u7684 party_id \u4ee5\u5217\u8868\u5f62\u5f0f\u5b58\u5728\uff0c\u56e0\u4e3a\u4e00\u4e2a\u4efb\u52a1\u53ef\u80fd\u6d89\u53ca\u5230\u591a\u4e2a party \u62c5\u4efb\u540c\u4e00\u79cd\u89d2\u8272\u3002 \u6837\u4f8b \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ], \"arbiter\" : [ 10000 ] }","title":"\u6240\u6709\u53c2\u4e0e\u65b9"},{"location":"zh/fate_flow_job_scheduling/#43","text":"\u63cf\u8ff0 \u914d\u7f6e\u4f5c\u4e1a\u8fd0\u884c\u65f6\u7684\u4e3b\u8981\u7cfb\u7edf\u53c2\u6570","title":"4.3 \u7cfb\u7edf\u8fd0\u884c\u53c2\u6570"},{"location":"zh/fate_flow_job_scheduling/#_8","text":"**\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528common\u8303\u56f4\u6807\u8bc6\u7b26 **\u4ec5\u5e94\u7528\u4e8e\u67d0\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528role\u8303\u56f4\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528(role:)party_index\u5b9a\u4f4d\u88ab\u6307\u5b9a\u7684\u53c2\u4e0e\u65b9\uff0c\u76f4\u63a5\u6307\u5b9a\u7684\u53c2\u6570\u4f18\u5148\u7ea7\u9ad8\u4e8ecommon\u53c2\u6570 \"common\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } \u5176\u4e2dcommon\u4e0b\u7684\u53c2\u6570\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0crole-guest-0\u914d\u7f6e\u4e0b\u7684\u53c2\u6570\u5e94\u7528\u4e8eguest\u89d2\u82720\u53f7\u4e0b\u6807\u7684\u53c2\u4e0e\u65b9 \u6ce8\u610f\uff0c\u5f53\u524d\u7248\u672c\u7cfb\u7edf\u8fd0\u884c\u53c2\u6570\u672a\u5bf9\u4ec5\u5e94\u7528\u4e8e\u67d0\u53c2\u4e0e\u65b9\u505a\u4e25\u683c\u6d4b\u8bd5\uff0c\u5efa\u8bae\u4f7f\u7528\u4f18\u5148\u9009\u7528common","title":"\u53c2\u6570\u5e94\u7528\u8303\u56f4\u7b56\u7565\u8bbe\u7f6e"},{"location":"zh/fate_flow_job_scheduling/#_9","text":"\u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u652f\u6301\u503c \u8bf4\u660e job_type train train, predict \u4efb\u52a1\u7c7b\u578b task_cores 4 \u6b63\u6574\u6570 \u4f5c\u4e1a\u7533\u8bf7\u7684\u603bcpu\u6838\u6570 task_parallelism 1 \u6b63\u6574\u6570 task\u5e76\u884c\u5ea6 computing_partitions task\u6240\u5206\u914d\u5230\u7684cpu\u6838\u6570 \u6b63\u6574\u6570 \u8ba1\u7b97\u65f6\u6570\u636e\u8868\u7684\u5206\u533a\u6570 eggroll_run \u65e0 processors_per_node\u7b49 eggroll\u8ba1\u7b97\u5f15\u64ce\u76f8\u5173\u914d\u7f6e\u53c2\u6570\uff0c\u4e00\u822c\u65e0\u987b\u914d\u7f6e\uff0c\u7531task_cores\u81ea\u52a8\u8ba1\u7b97\u5f97\u5230\uff0c\u82e5\u914d\u7f6e\u5219task_cores\u53c2\u6570\u4e0d\u751f\u6548 spark_run \u65e0 num-executors, executor-cores\u7b49 spark\u8ba1\u7b97\u5f15\u64ce\u76f8\u5173\u914d\u7f6e\u53c2\u6570\uff0c\u4e00\u822c\u65e0\u987b\u914d\u7f6e\uff0c\u7531task_cores\u81ea\u52a8\u8ba1\u7b97\u5f97\u5230\uff0c\u82e5\u914d\u7f6e\u5219task_cores\u53c2\u6570\u4e0d\u751f\u6548 rabbitmq_run \u65e0 queue, exchange\u7b49 rabbitmq\u521b\u5efaqueue\u3001exchange\u7684\u76f8\u5173\u914d\u7f6e\u53c2\u6570\uff0c\u4e00\u822c\u65e0\u987b\u914d\u7f6e\uff0c\u91c7\u53d6\u7cfb\u7edf\u9ed8\u8ba4\u503c pulsar_run \u65e0 producer, consumer\u7b49 pulsar\u521b\u5efaproducer\u548cconsumer\u65f6\u5019\u7684\u76f8\u5173\u914d\u7f6e\uff0c\u4e00\u822c\u65e0\u9700\u914d\u7f6e\u3002 federated_status_collect_type PUSH PUSH, PULL \u591a\u65b9\u8fd0\u884c\u72b6\u6001\u6536\u96c6\u6a21\u5f0f\uff0cPUSH\u8868\u793a\u6bcf\u4e2a\u53c2\u4e0e\u65b9\u4e3b\u52a8\u4e0a\u62a5\u5230\u53d1\u8d77\u65b9\uff0cPULL\u8868\u793a\u53d1\u8d77\u65b9\u5b9a\u671f\u5411\u5404\u4e2a\u53c2\u4e0e\u65b9\u62c9\u53d6 timeout 259200 (3\u5929) \u6b63\u6574\u6570 \u4efb\u52a1\u8d85\u65f6\u65f6\u95f4,\u5355\u4f4d\u79d2 audo_retries 3 \u6b63\u6574\u6570 \u6bcf\u4e2a\u4efb\u52a1\u5931\u8d25\u81ea\u52a8\u91cd\u8bd5\u6700\u5927\u6b21\u6570 model_id - - \u6a21\u578bid\uff0c\u9884\u6d4b\u4efb\u52a1\u9700\u8981\u586b\u5165 model_version - - \u6a21\u578bversion\uff0c\u9884\u6d4b\u4efb\u52a1\u9700\u8981\u586b\u5165 \u8ba1\u7b97\u5f15\u64ce\u548c\u5b58\u50a8\u5f15\u64ce\u4e4b\u95f4\u5177\u6709\u4e00\u5b9a\u7684\u652f\u6301\u4f9d\u8d56\u5173\u7cfb \u5f00\u53d1\u8005\u53ef\u81ea\u884c\u5b9e\u73b0\u9002\u914d\u7684\u5f15\u64ce\uff0c\u5e76\u5728runtime config\u914d\u7f6e\u5f15\u64ce","title":"\u652f\u6301\u7684\u7cfb\u7edf\u53c2\u6570"},{"location":"zh/fate_flow_job_scheduling/#_10","text":"\u65e0\u987b\u5173\u6ce8\u8ba1\u7b97\u5f15\u64ce\uff0c\u91c7\u53d6\u7cfb\u7edf\u9ed8\u8ba4cpu\u5206\u914d\u8ba1\u7b97\u7b56\u7565\u65f6\u7684\u914d\u7f6e \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } \u4f7f\u7528eggroll\u4f5c\u4e3acomputing engine\uff0c\u91c7\u53d6\u76f4\u63a5\u6307\u5b9acpu\u7b49\u53c2\u6570\u65f6\u7684\u914d\u7f6e \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"eggroll_run\" : { \"eggroll.session.processors.per.node\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , } } \u4f7f\u7528spark\u4f5c\u4e3acomputing engine\uff0crabbitmq\u4f5c\u4e3afederation engine,\u91c7\u53d6\u76f4\u63a5\u6307\u5b9acpu\u7b49\u53c2\u6570\u65f6\u7684\u914d\u7f6e \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 , \"rabbitmq_run\" : { \"queue\" : { \"durable\" : true }, \"connection\" : { \"heartbeat\" : 10000 } } } } \u4f7f\u7528spark\u4f5c\u4e3acomputing engine\uff0cpulsar\u4f5c\u4e3afederation engine \"job_parameters\" : { \"common\" : { \"spark_run\" : { \"num-executors\" : 1 , \"executor-cores\" : 2 }, } } \u66f4\u591a\u8d44\u6e90\u76f8\u5173\u9ad8\u7ea7\u914d\u7f6e\u8bf7\u53c2\u8003 \u8d44\u6e90\u7ba1\u7406","title":"\u53c2\u8003\u914d\u7f6e"},{"location":"zh/fate_flow_job_scheduling/#43_1","text":"","title":"4.3 \u7ec4\u4ef6\u8fd0\u884c\u53c2\u6570"},{"location":"zh/fate_flow_job_scheduling/#_11","text":"\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528common\u8303\u56f4\u6807\u8bc6\u7b26 \u4ec5\u5e94\u7528\u4e8e\u67d0\u53c2\u4e0e\u65b9\uff0c\u4f7f\u7528role\u8303\u56f4\u6807\u8bc6\u7b26\uff0c\u4f7f\u7528(role:)party_index\u5b9a\u4f4d\u88ab\u6307\u5b9a\u7684\u53c2\u4e0e\u65b9\uff0c\u76f4\u63a5\u6307\u5b9a\u7684\u53c2\u6570\u4f18\u5148\u7ea7\u9ad8\u4e8ecommon\u53c2\u6570 \"commom\" : { } \"role\" : { \"guest\" : { \"0\" : { } } } \u5176\u4e2dcommon\u914d\u7f6e\u4e0b\u7684\u53c2\u6570\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9\uff0crole-guest-0\u914d\u7f6e\u4e0b\u7684\u53c2\u6570\u8868\u793a\u5e94\u7528\u4e8eguest\u89d2\u82720\u53f7\u4e0b\u6807\u7684\u53c2\u4e0e\u65b9 \u6ce8\u610f\uff0c\u5f53\u524d\u7248\u672c\u7ec4\u4ef6\u8fd0\u884c\u53c2\u6570\u5df2\u652f\u6301\u4e24\u79cd\u5e94\u7528\u8303\u56f4\u7b56\u7565","title":"\u53c2\u6570\u5e94\u7528\u8303\u56f4\u7b56\u7565\u8bbe\u7f6e"},{"location":"zh/fate_flow_job_scheduling/#_12","text":"intersection_0 \u4e0e hetero_lr_0 \u4e24\u4e2a\u7ec4\u4ef6\u7684\u8fd0\u884c\u53c2\u6570\uff0c\u653e\u5728common\u8303\u56f4\u4e0b\uff0c\u5e94\u7528\u4e8e\u6240\u6709\u53c2\u4e0e\u65b9 \u5bf9\u4e8e reader_0 \u4e0e data_transform_0 \u4e24\u4e2a\u7ec4\u4ef6\u7684\u8fd0\u884c\u53c2\u6570\uff0c\u4f9d\u636e\u4e0d\u540c\u7684\u53c2\u4e0e\u65b9\u8fdb\u884c\u7279\u5b9a\u914d\u7f6e\uff0c\u8fd9\u662f\u56e0\u4e3a\u901a\u5e38\u4e0d\u540c\u53c2\u4e0e\u65b9\u7684\u8f93\u5165\u53c2\u6570\u5e76\u4e0d\u4e00\u81f4\uff0c\u6240\u6709\u901a\u5e38\u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u4e00\u822c\u6309\u53c2\u4e0e\u65b9\u8bbe\u7f6e \u4e0a\u8ff0\u7ec4\u4ef6\u540d\u79f0\u662f\u5728DSL\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49 \"component_parameters\" : { \"common\" : { \"intersection_0\" : { \"intersect_method\" : \"raw\" , \"sync_intersect_ids\" : true , \"only_output_key\" : false }, \"hetero_lr_0\" : { \"penalty\" : \"L2\" , \"optimizer\" : \"rmsprop\" , \"alpha\" : 0.01 , \"max_iter\" : 3 , \"batch_size\" : 320 , \"learning_rate\" : 0.15 , \"init_param\" : { \"init_method\" : \"random_uniform\" } } }, \"role\" : { \"guest\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : true , \"label_name\" : \"y\" , \"label_type\" : \"int\" , \"output_format\" : \"dense\" } } }, \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } }, \"data_transform_0\" :{ \"with_label\" : false , \"output_format\" : \"dense\" } } } } }","title":"\u53c2\u8003\u914d\u7f6e"},{"location":"zh/fate_flow_job_scheduling/#5-host","text":"\u591aHost\u4efb\u52a1\u5e94\u5728role\u4e0b\u5217\u4e3e\u6240\u6709host\u4fe1\u606f \u6837\u4f8b : \"role\" : { \"guest\" : [ 10000 ], \"host\" : [ 10000 , 10001 , 10002 ], \"arbiter\" : [ 10000 ] } \u5404host\u4e0d\u540c\u7684\u914d\u7f6e\u5e94\u5728\u5404\u81ea\u5bf9\u5e94\u6a21\u5757\u4e0b\u5206\u522b\u5217\u4e3e \u6837\u4f8b : \"component_parameters\" : { \"role\" : { \"host\" : { \"0\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_0\" , \"namespace\" : \"hetero_breast_host\" } } }, \"1\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_1\" , \"namespace\" : \"hetero_breast_host\" } } }, \"2\" : { \"reader_0\" : { \"table\" : { \"name\" : \"hetero_breast_host_2\" , \"namespace\" : \"hetero_breast_host\" } } } } } }","title":"5. \u591aHost \u914d\u7f6e"},{"location":"zh/fate_flow_job_scheduling/#6","text":"","title":"6. \u9884\u6d4b\u4efb\u52a1\u914d\u7f6e"},{"location":"zh/fate_flow_job_scheduling/#61","text":"DSL V2\u4e0d\u4f1a\u81ea\u52a8\u4e3a\u8bad\u7ec3\u4efb\u52a1\u751f\u6210\u9884\u6d4bdsl\u3002 \u7528\u6237\u9700\u8981\u9996\u5148\u4f7f\u7528 Flow Client \u90e8\u7f72\u6240\u9700\u6a21\u578b\u4e2d\u6a21\u5757\u3002 \u8be6\u7ec6\u547d\u4ee4\u8bf4\u660e\u8bf7\u53c2\u8003 fate_flow_client flow model deploy --model-id $model_id --model-version $model_version --cpn-list ... \u53ef\u9009\u5730\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u9884\u6d4bdsl\u4e2d\u52a0\u5165\u65b0\u6a21\u5757\uff0c\u5982 Evaluation","title":"6.1 \u8bf4\u660e"},{"location":"zh/fate_flow_job_scheduling/#62","text":"\u8bad\u7ec3 dsl\uff1a \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } } } \u9884\u6d4b dsl: \"components\" : { \"reader_0\" : { \"module\" : \"Reader\" , \"output\" : { \"data\" : [ \"data\" ] } }, \"data_transform_0\" : { \"module\" : \"DataTransform\" , \"input\" : { \"data\" : { \"data\" : [ \"reader_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"intersection_0\" : { \"module\" : \"Intersection\" , \"input\" : { \"data\" : { \"data\" : [ \"data_transform_0.data\" ] } }, \"output\" : { \"data\" :[ \"data\" ] } }, \"hetero_nn_0\" : { \"module\" : \"HeteroNN\" , \"input\" : { \"data\" : { \"train_data\" : [ \"intersection_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ], \"model\" : [ \"model\" ] } }, \"evaluation_0\" : { \"module\" : \"Evaluation\" , \"input\" : { \"data\" : { \"data\" : [ \"hetero_nn_0.data\" ] } }, \"output\" : { \"data\" : [ \"data\" ] } } }","title":"6.2 \u6837\u4f8b"},{"location":"zh/fate_flow_job_scheduling/#7","text":"1.5.0 \u7248\u672c, \u5f00\u59cb\u652f\u6301\u91cd\u8dd1\u67d0\u4e2a\u4f5c\u4e1a, \u4f46\u662f\u4ec5\u652f\u6301\u5931\u8d25\u7684\u4f5c\u4e1a 1.7.0 \u7248\u672c\u652f\u6301\u6210\u529f\u7684\u4f5c\u4e1a\u91cd\u8dd1, \u5e76\u4e14\u53ef\u4ee5\u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u5f00\u59cb\u91cd\u8dd1, \u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u53ca\u5176\u4e0b\u6e38\u7ec4\u4ef6\u4f1a\u91cd\u8dd1, \u4f46\u5176\u4ed6\u7ec4\u4ef6\u4e0d\u4f1a\u91cd\u8dd1 \u91cd\u65b0\u8fd0\u884c\u67d0\u4e2a\u4f5c\u4e1a flow job rerun [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -cpn, --component-name \u5426 string \u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u91cd\u8dd1\uff0c\u6ca1\u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u82e5\u4e0e\u6307\u5b9a\u7ec4\u4ef6\u6ca1\u6709\u4e0a\u6e38\u4f9d\u8d56\u5173\u7cfb\u5219\u4e0d\u4f1a\u6267\u884c;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u5219\u6574\u4e2a\u4f5c\u4e1a\u91cd\u8dd1 --force \u5426 bool \u4f5c\u4e1a\u5373\u4f7f\u6210\u529f\u4e5f\u91cd\u8dd1;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u4f5c\u4e1a\u5982\u679c\u6210\u529f\uff0c\u5219\u8df3\u8fc7\u91cd\u8dd1 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force","title":"7. \u4f5c\u4e1a\u91cd\u8dd1"},{"location":"zh/fate_flow_job_scheduling/#8","text":"\u5b9e\u9645\u751f\u4ea7\u5efa\u6a21\u8fc7\u7a0b\u4e2d, \u9700\u8981\u8fdb\u884c\u4e0d\u65ad\u8c03\u8bd5\u4fee\u6539\u7ec4\u4ef6\u53c2\u6570\u4e14\u91cd\u8dd1, \u4f46\u662f\u6b64\u65f6\u5e76\u4e0d\u662f\u6240\u6709\u7ec4\u4ef6\u90fd\u9700\u8981\u8c03\u6574\u5e76\u4e14\u91cd\u8dd1, \u56e0\u6b64\u5728 1.7.0 \u7248\u672c\u540e\u652f\u6301\u4fee\u6539\u67d0\u4e2a\u7ec4\u4ef6\u7684\u53c2\u6570\u66f4\u65b0, \u4e14\u914d\u5408 rerun \u547d\u4ee4\u6309\u9700\u91cd\u8dd1 \u66f4\u65b0\u4f5c\u4e1a\u53c2\u6570 flow job parameter-update [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -c, --conf-path \u662f string \u9700\u8981\u66f4\u65b0\u7684job conf\u7684\u5185\u5bb9\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u7684\u53c2\u6570\u4e0d\u9700\u8981\u586b\u5199 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u66f4\u65b0\u540e\u7684job conf \u6837\u4f8b \u5047\u8bbe\u66f4\u65b0job\u4e2dhetero_lr_0\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u90e8\u5206\u6267\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6548\uff1a flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u91cd\u8dd1\uff1a flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force","title":"8. \u4f5c\u4e1a\u53c2\u6570\u66f4\u65b0"},{"location":"zh/fate_flow_job_scheduling/#9","text":"\u6309\u63d0\u4ea4\u65f6\u95f4\u5148\u540e\u5165\u961f \u76ee\u524d\u4ec5\u652f\u6301FIFO\u7b56\u7565\uff0c\u4e5f\u5373\u6bcf\u6b21\u8c03\u5ea6\u5668\u4ec5\u4f1a\u626b\u63cf\u7b2c\u4e00\u4e2a\u4f5c\u4e1a\uff0c\u82e5\u7b2c\u4e00\u4e2a\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u6210\u529f\u5219start\u4e14\u51fa\u961f\uff0c\u82e5\u7533\u8bf7\u8d44\u6e90\u5931\u8d25\u5219\u7b49\u5f85\u4e0b\u4e00\u8f6e\u8c03\u5ea6","title":"9. \u4f5c\u4e1a\u8c03\u5ea6\u7b56\u7565"},{"location":"zh/fate_flow_job_scheduling/#10","text":"\u7b80\u8981\u63cf\u8ff0\uff1a \u652f\u6301\u4ececlient\u8282\u70b9\u5206\u53d1fate\u548cpython\u4f9d\u8d56; work\u8282\u70b9\u4e0d\u7528\u90e8\u7f72fate; \u5f53\u524d\u7248\u672c\u53ea\u6709fate on spark\u652f\u6301\u5206\u53d1\u6a21\u5f0f; \u76f8\u5173\u53c2\u6570\u914d\u7f6e : conf/service_conf.yaml: dependent_distribution : true fate_flow/settings.py FATE_FLOW_UPDATE_CHECK = False \u8bf4\u660e\uff1a dependent_distribution: \u4f9d\u8d56\u5206\u53d1\u5f00\u5173;\uff0c\u9ed8\u8ba4\u5173\u95ed;\u5173\u95ed\u65f6\u9700\u8981\u5728\u6bcf\u4e2awork\u8282\u70b9\u90e8\u7f72fate, \u53e6\u5916\u8fd8\u9700\u8981\u5728spark\u7684\u914d\u7f6espark-env.sh\u4e2d\u586b\u914d\u7f6ePYSPARK_DRIVER_PYTHON\u548cPYSPARK_PYTHON\uff1b FATE_FLOW_UPDATE_CHECK: \u4f9d\u8d56\u6821\u9a8c\u5f00\u5173, \u9ed8\u8ba4\u5173\u95ed;\u6253\u5f00\u540e\u6bcf\u6b21\u63d0\u4ea4\u4efb\u52a1\u90fd\u4f1a\u81ea\u52a8\u6821\u9a8cfate\u4ee3\u7801\u662f\u5426\u53d1\u751f\u6539\u53d8;\u82e5\u53d1\u751f\u6539\u53d8\u5219\u4f1a\u91cd\u65b0\u4e0a\u4f20fate\u4ee3\u7801\u4f9d\u8d56;","title":"10. \u4f9d\u8d56\u5206\u53d1"},{"location":"zh/fate_flow_job_scheduling/#11","text":"\u8bf7\u53c2\u8003 Job CLI \u548c Task CLI","title":"11. \u66f4\u591a\u547d\u4ee4"},{"location":"zh/fate_flow_model_migration/","text":"\u96c6\u7fa4\u95f4\u6a21\u578b\u8fc1\u79fb \u00b6 \u6a21\u578b\u8fc1\u79fb\u529f\u80fd\u4f7f\u5f97\u6a21\u578b\u6587\u4ef6\u590d\u5236\u62f7\u8d1d\u5230\u4e0d\u540c party_id \u7684\u96c6\u7fa4\u4f9d\u7136\u53ef\u7528\uff0c\u4ee5\u4e0b\u4e24\u79cd\u573a\u666f\u9700\u8981\u505a\u6a21\u578b\u8fc1\u79fb\uff1a \u6a21\u578b\u751f\u6210\u53c2\u4e0e\u65b9\u4efb\u4f55\u4e00\u65b9\u7684\u96c6\u7fa4, \u91cd\u65b0\u90e8\u7f72\u4e14\u90e8\u7f72\u540e\u96c6\u7fa4\u7684 party_id \u53d8\u66f4, \u4f8b\u5982\u6e90\u53c2\u4e0e\u65b9\u4e3a arbiter-10000#guest-9999#host-10000 , \u6539\u4e3a arbiter-10000#guest-99#host-10000 \u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u4e0e\u65b9\u5c06\u6a21\u578b\u6587\u4ef6\u4ece\u6e90\u96c6\u7fa4\u590d\u5236\u5230\u76ee\u6807\u96c6\u7fa4\uff0c\u9700\u8981\u5728\u76ee\u6807\u96c6\u7fa4\u4f7f\u7528 \u57fa\u672c\u539f\u7406\uff1a 1. \u4e0a\u8ff0\u4e24\u79cd\u573a\u666f\u4e0b\uff0c\u6a21\u578b\u7684\u53c2\u4e0e\u65b9 party_id \u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u5982 arbiter-10000#guest-9999#host-10000 -> arbiter-10000#guest-99#host-10000 \uff0c\u6216\u8005 arbiter-10000#guest-9999#host-10000 -> arbiter-100#guest-99#host-100 2. \u6a21\u578b\u7684\u53c2\u4e0e\u65b9 party_id \u53d1\u751f\u6539\u53d8\uff0c\u56e0\u6b64 model_id \u4ee5\u53ca\u6a21\u578b\u6587\u4ef6\u91cc\u9762\u6d89\u53ca party_id \u9700\u8981\u6539\u53d8 3. \u6574\u4f53\u6d41\u7a0b\u4e0b\u6765\uff0c\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a\u590d\u5236\u8f6c\u79fb\u539f\u6709\u6a21\u578b\u6587\u4ef6\u3001\u5bf9\u539f\u6709\u6a21\u578b\u6587\u4ef6\u6267\u884c\u6a21\u578b\u8fc1\u79fb\u4efb\u52a1\u3001\u5bfc\u5165\u6a21\u578b\u8fc1\u79fb\u4efb\u52a1\u751f\u6210\u7684\u65b0\u6a21\u578b 4. \u5176\u4e2d*\u539f\u6709\u6a21\u578b\u6587\u4ef6\u6267\u884c\u6a21\u578b\u8fc1\u79fb\u4efb\u52a1*\u5176\u5b9e\u5c31\u662f\u5728\u6267\u884c\u5904\u4e34\u65f6\u590d\u5236\u4e00\u4efd\u539f\u6a21\u578b\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u914d\u7f6e\uff0c\u4fee\u6539 model_id \u53ca\u6a21\u578b\u6587\u4ef6\u91cc\u9762\u6d89\u53ca party_id \u7684\u5185\u5bb9\uff0c\u4ee5\u9002\u914d\u65b0\u7684\u53c2\u4e0e\u65b9 party_id 5. \u4e0a\u8ff0\u6b65\u9aa4\u90fd\u9700\u8981\u5728\u6240\u6709\u65b0\u7684\u53c2\u4e0e\u65b9\u6267\u884c\uff0c\u5373\u4f7f\u5176\u4e2d\u67d0\u4e2a\u76ee\u6807\u53c2\u4e0e\u65b9\u7684 party_id \u6ca1\u6709\u6539\u53d8\uff0c\u4e5f\u9700\u8981\u6267\u884c 6. \u65b0\u7684\u53c2\u4e0e\u65b9\u96c6\u7fa4\u7248\u672c\u9700\u5927\u4e8e\u7b49\u4e8e 1.5.1 \u8fc1\u79fb\u6d41\u7a0b\u5982\u4e0b\uff1a \u8f6c\u79fb\u6a21\u578b\u6587\u4ef6 \u00b6 \u8bf7\u5c06\u6e90\u53c2\u4e0e\u65b9fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u751f\u6210\u7684\u6a21\u578b\u6587\u4ef6\uff08\u5305\u62ec\u4ee5model id\u4e3a\u547d\u540d\u7684\u76ee\u5f55\uff09\u8fdb\u884c\u6253\u5305\u5e76\u8f6c\u79fb\u5230\u76ee\u6807\u53c2\u4e0e\u65b9fate flow\u6240\u5728\u673a\u5668\u4e2d\uff0c\u8bf7\u5c06\u6a21\u578b\u6587\u4ef6\u8f6c\u79fb\u81f3\u56fa\u5b9a\u76ee\u5f55\u4e2d\uff1a $FATE_PROJECT_BASE /model_local_cache \u8bf4\u660e: 1. \u6587\u4ef6\u5939\u8f6c\u79fb\u5373\u53ef\uff0c\u5982\u679c\u662f\u901a\u8fc7\u538b\u7f29\u6253\u5305\u8fdb\u884c\u7684\u8f6c\u79fb\uff0c\u8bf7\u5728\u8f6c\u79fb\u540e\u5c06\u6a21\u578b\u6587\u4ef6\u89e3\u538b\u5230\u6a21\u578b\u6240\u5728\u76ee\u5f55\u4e2d\u3002 2. \u6a21\u578b\u6587\u4ef6\u8bf7\u6309\u6e90\u76ee\u53c2\u4e0e\u65b9\u4e00\u4e00\u5bf9\u5e94\u8f6c\u79fb \u8fc1\u79fb\u524d\u7684\u51c6\u5907\u5de5\u4f5c \u00b6 \u8bf4\u660e \u00b6 \u53c2\u8003 fate flow client \u5b89\u88c5\u652f\u6301\u6a21\u578b\u8fc1\u79fb\u7684\u5ba2\u6237\u7aeffate-client\uff0c\u53ea\u6709fate 1.5.1\u53ca\u5176\u4ee5\u4e0a\u7248\u672c\u652f\u6301 \u6267\u884c\u8fc1\u79fb\u4efb\u52a1 \u00b6 \u8bf4\u660e \u00b6 \u6267\u884c\u8fc1\u79fb\u4efb\u52a1\u662f\u5c06\u6e90\u6a21\u578b\u6587\u4ef6\u6839\u636e\u8fc1\u79fb\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\u4fee\u6539 model_id \u3001 model_version \u4ee5\u53ca\u6a21\u578b\u5185\u6d89\u53ca role \u548c party_id \u7684\u5185\u5bb9\u8fdb\u884c\u66ff\u6362 \u63d0\u4ea4\u4efb\u52a1\u7684\u96c6\u7fa4\u5fc5\u987b\u5b8c\u6210\u4e0a\u8ff0\u8fc1\u79fb\u51c6\u5907 1. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 \u5728\u65b0\u53c2\u4e0e\u65b9\uff08\u673a\u5668\uff09\u4e2d\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5bf9\u8fc1\u79fb\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u4e0b\u4e3a\u8fc1\u79fb\u4efb\u52a1\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6 migrate_model.json { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"arbiter\" : [ 100 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202006171904247702041\" , \"unify_model_version\" : \"20200901_0001\" } \u8bf7\u5c06\u4e0a\u8ff0\u914d\u7f6e\u5185\u5bb9\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u4e2d\u7684\u67d0\u4e00\u4f4d\u7f6e\u8fdb\u884c\u4fee\u6539\u3002 \u4ee5\u4e0b\u4e3a\u5bf9\u8be5\u914d\u7f6e\u4e2d\u7684\u53c2\u6570\u7684\u89e3\u91ca\u8bf4\u660e\uff1a job_parameters \uff1a\u8be5\u53c2\u6570\u4e2d\u7684 federated_mode \u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5206\u522b\u4e3a MULTIPLE \u53ca SINGLE \u3002\u5982\u679c\u8bbe\u7f6e\u4e3a SINGLE \uff0c\u5219\u8be5\u8fc1\u79fb\u4efb\u52a1\u53ea\u4f1a\u5728\u63d0\u4ea4\u8fc1\u79fb\u4efb\u52a1\u7684\u672c\u65b9\u6267\u884c\uff0c\u90a3\u4e48\u9700\u8981\u5206\u522b\u5728\u6240\u6709\u65b0\u53c2\u4e0e\u65b9\u63d0\u4ea4\u4efb\u52a1;\u5982\u679c\u8bbe\u7f6e\u4e3a MULTIPLE \uff0c\u5219\u5c06\u4efb\u52a1\u5206\u53d1\u5230 execute_party \u4e2d\u6307\u5b9a\u7684\u53c2\u4e0e\u65b9\u6267\u884c\u4efb\u52a1\uff0c\u53ea\u9700\u8981\u5728\u4f5c\u4e3a migrate_initiator \u7684\u65b0\u53c2\u4e0e\u65b9\u63d0\u4ea4\u3002 role \uff1a\u8be5\u53c2\u6570\u586b\u5199\u751f\u6210\u539f\u59cb\u6a21\u578b\u7684\u53c2\u4e0e\u65b9 role \u53ca\u5176\u5bf9\u5e94\u7684 party_id \u4fe1\u606f\u3002 migrate_initiator \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u8fc1\u79fb\u540e\u7684\u6a21\u578b\u7684\u4efb\u52a1\u53d1\u8d77\u65b9\u4fe1\u606f\uff0c\u5206\u522b\u9700\u6307\u5b9a\u53d1\u8d77\u65b9\u7684 role \u4e0e party_id \u3002 migrate_role \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u8fc1\u79fb\u540e\u7684\u6a21\u578b\u7684\u53c2\u4e0e\u65b9 role \u53ca party_id \u4fe1\u606f\u3002 execute_party \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u6267\u884c\u8fc1\u79fb\u7684 role \u53ca party_id \u4fe1\u606f, \u8be5 party_id \u4e3a\u6e90\u96c6\u7fa4 party_id \u3002 model_id \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u88ab\u8fc1\u79fb\u7684\u539f\u59cb\u6a21\u578b\u7684 model_id \u3002 model_version \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u88ab\u8fc1\u79fb\u7684\u539f\u59cb\u6a21\u578b\u7684 model_version \u3002 unify_model_version \uff1a\u6b64\u53c2\u6570\u4e3a\u975e\u5fc5\u586b\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u65b0\u6a21\u578b\u7684 model_version \u3002\u82e5\u672a\u63d0\u4f9b\u8be5\u53c2\u6570\uff0c\u65b0\u6a21\u578b\u5c06\u4ee5\u8fc1\u79fb\u4efb\u52a1\u7684 job_id \u4f5c\u4e3a\u5176\u65b0 model_version \u3002 \u4e0a\u8ff0\u914d\u7f6e\u6587\u4ef6\u4e3e\u4f8b\u8bf4\u660e\uff1a 1. \u6e90\u6a21\u578b\u7684\u53c2\u4e0e\u65b9\u4e3a guest: 9999, host: 10000, arbiter: 10000, \u5c06\u6a21\u578b\u8fc1\u79fb\u6210\u53c2\u4e0e\u65b9\u4e3a guest: 99, host: 100, arbiter: 100 , \u4e14\u65b0\u53d1\u8d77\u65b9\u4e3a guest: 99 2. federated_mode: SINGLE \u8868\u793a\u6bcf\u4e2a\u8fc1\u79fb\u4efb\u52a1\u53ea\u5728\u63d0\u4ea4\u4efb\u52a1\u7684\u96c6\u7fa4\u6267\u884c\u4efb\u52a1\uff0c\u90a3\u4e48\u9700\u8981\u572899\u3001100\u5206\u522b\u63d0\u4ea4\u4efb\u52a1 3. \u4f8b\u5982\u572899\u6267\u884c\uff0c\u5219 execute_party \u914d\u7f6e\u4e3a \"guest\": [9999] 4. \u4f8b\u5982\u5728100\u6267\u884c\uff0c\u5219 execute_party \u914d\u7f6e\u4e3a \"arbiter\": [10000], \"host\": [10000] 2. \u63d0\u4ea4\u8fc1\u79fb\u4efb\u52a1(\u5728\u6240\u6709\u76ee\u6807\u96c6\u7fa4\u5206\u522b\u64cd\u4f5c) \u00b6 \u8fc1\u79fb\u4efb\u52a1\u9700\u4f7f\u7528fate-client\u8fdb\u884c\u63d0\u4ea4\uff0c\u793a\u4f8b\u6267\u884c\u547d\u4ee4\u5982\u4e0b\uff1a flow model migrate -c $FATE_FLOW_BASE /examples/model/migrate_model.json 3. \u4efb\u52a1\u6267\u884c\u7ed3\u679c \u00b6 \u5982\u4e0b\u4e3a\u5b9e\u9645\u8fc1\u79fb\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\uff1a { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"model_id\" : \"guest-9999#host-10000#model\" , \"model_version\" : \"202010291539339602784\" , \"unify_model_version\" : \"fate_migration\" } \u8be5\u4efb\u52a1\u5b9e\u73b0\u7684\u662f\uff0c\u5c06 party_id \u4e3a9999 (guest)\uff0c10000 (host)\u7684\u96c6\u7fa4\u751f\u6210\u7684 model_id \u4e3a guest-9999#host-10000#model \uff0c model_version \u4e3a 202010291539339602784 \u7684\u6a21\u578b\u4fee\u6539\u8fc1\u79fb\u751f\u6210\u9002\u914d party_id \u4e3a99 (guest)\uff0c100 (host)\u96c6\u7fa4\u7684\u65b0\u6a21\u578b \u5982\u4e0b\u4e3a\u8fc1\u79fb\u6210\u529f\u7684\u540e\u5f97\u5230\u7684\u8fd4\u56de\u7ed3\u679c\uff1a { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: guest-99#host-100#model, model version is: fate_migration. Model files can be found at '/data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: guest-99#host-100#model, model version is: fate_migration. Model files can be found at '/data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202010292152299793981\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } \u4efb\u52a1\u6210\u529f\u6267\u884c\u540e\uff0c\u6267\u884c\u65b9\u7684\u673a\u5668\u4e2d\u90fd\u4f1a\u751f\u6210\u4e00\u4efd\u8fc1\u79fb\u540e\u6a21\u578b\u538b\u7f29\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u5728\u8fd4\u56de\u7ed3\u679c\u4e2d\u5f97\u5230\u3002\u5982\u4e0a\uff0c9999 (guest)\u7684\u8fc1\u79fb\u540e\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip \uff0c10000 (host)\u7684\u8fc1\u79fb\u540e\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip \u3002\u65b0\u7684 model_id \u4e0e model_version \u540c\u6837\u53ef\u4ee5\u4ece\u8fd4\u56de\u4e2d\u83b7\u5f97\u3002 4. \u8f6c\u79fb\u6587\u4ef6\u5e76\u5bfc\u5165(\u5728\u6240\u6709\u76ee\u6807\u96c6\u7fa4\u5206\u522b\u64cd\u4f5c) \u00b6 \u8fc1\u79fb\u4efb\u52a1\u6210\u529f\u4e4b\u540e\uff0c\u8bf7\u624b\u52a8\u5c06\u65b0\u751f\u6210\u7684\u6a21\u578b\u538b\u7f29\u6587\u4ef6\u8f6c\u79fb\u5230\u76ee\u6807\u96c6\u7fa4\u7684fate flow\u673a\u5668\u4e0a\u3002\u4f8b\u5982\uff1a\u7b2c\u4e09\u70b9\u4e2d9999 (guest)\u751f\u6210\u7684\u65b0\u6a21\u578b\u538b\u7f29\u6587\u4ef6\u9700\u8981\u88ab\u8f6c\u79fb\u523099 (guest) \u673a\u5668\u4e0a\u3002\u538b\u7f29\u6587\u4ef6\u53ef\u4ee5\u653e\u5728\u5bf9\u5e94\u673a\u5668\u4e0a\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u914d\u7f6e\u6a21\u578b\u7684\u5bfc\u5165\u4efb\u52a1\uff0c\u914d\u7f6e\u6587\u4ef6\u8bf7\u89c1 import_model.json \uff08\u538b\u7f29\u6587\u4ef6\u5185\u5305\u542b\u6b64\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\uff0c \u5207\u52ff\u76f4\u63a5\u4f7f\u7528 \uff09\u3002 \u4e0b\u9762\u4e3e\u4f8b\u4ecb\u7ecd\u5728guest (99)\u4e2d\u5bfc\u5165\u8fc1\u79fb\u540e\u6a21\u578b\u7684\u914d\u7f6e\u6587\u4ef6\uff1a { \"role\" : \"guest\" , \"party_id\" : 99 , \"model_id\" : \"guest-99#host-100#model\" , \"model_version\" : \"202010292152299793981\" , \"file\" : \"/data/projects/fate/python/temp/guest#99#guest-99#host-100#202010292152299793981.zip\" } \u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5bf9\u5e94\u586b\u5199\u89d2\u8272 role \uff0c\u5f53\u524d\u672c\u65b9 party_id \uff0c\u8fc1\u79fb\u6a21\u578b\u7684\u65b0 model_id \u53ca model_version \uff0c\u4ee5\u53ca\u8fc1\u79fb\u6a21\u578b\u7684\u538b\u7f29\u6587\u4ef6\u6240\u5728\u8def\u5f84\u3002 \u5982\u4e0b\u4e3a\u4f7f\u7528fate-client\u63d0\u4ea4\u5bfc\u5165\u6a21\u578b\u7684\u793a\u4f8b\u547d\u4ee4\uff1a flow model import -c $FATE_FLOW_BASE /examples/model/import_model.json \u5f97\u5230\u5982\u4e0b\u8fd4\u56de\u89c6\u4e3a\u5bfc\u5165\u6210\u529f\uff1a { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u8fc1\u79fb\u4efb\u52a1\u81f3\u6b64\u5b8c\u6210\uff0c\u7528\u6237\u53ef\u4f7f\u7528\u65b0\u7684 model_id \u53ca model_version \u8fdb\u884c\u4efb\u52a1\u63d0\u4ea4\uff0c\u4ee5\u5229\u7528\u8fc1\u79fb\u540e\u7684\u6a21\u578b\u6267\u884c\u9884\u6d4b\u4efb\u52a1\u3002","title":"\u96c6\u7fa4\u95f4\u6a21\u578b\u8fc1\u79fb"},{"location":"zh/fate_flow_model_migration/#_1","text":"\u6a21\u578b\u8fc1\u79fb\u529f\u80fd\u4f7f\u5f97\u6a21\u578b\u6587\u4ef6\u590d\u5236\u62f7\u8d1d\u5230\u4e0d\u540c party_id \u7684\u96c6\u7fa4\u4f9d\u7136\u53ef\u7528\uff0c\u4ee5\u4e0b\u4e24\u79cd\u573a\u666f\u9700\u8981\u505a\u6a21\u578b\u8fc1\u79fb\uff1a \u6a21\u578b\u751f\u6210\u53c2\u4e0e\u65b9\u4efb\u4f55\u4e00\u65b9\u7684\u96c6\u7fa4, \u91cd\u65b0\u90e8\u7f72\u4e14\u90e8\u7f72\u540e\u96c6\u7fa4\u7684 party_id \u53d8\u66f4, \u4f8b\u5982\u6e90\u53c2\u4e0e\u65b9\u4e3a arbiter-10000#guest-9999#host-10000 , \u6539\u4e3a arbiter-10000#guest-99#host-10000 \u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u6216\u591a\u4e2a\u53c2\u4e0e\u65b9\u5c06\u6a21\u578b\u6587\u4ef6\u4ece\u6e90\u96c6\u7fa4\u590d\u5236\u5230\u76ee\u6807\u96c6\u7fa4\uff0c\u9700\u8981\u5728\u76ee\u6807\u96c6\u7fa4\u4f7f\u7528 \u57fa\u672c\u539f\u7406\uff1a 1. \u4e0a\u8ff0\u4e24\u79cd\u573a\u666f\u4e0b\uff0c\u6a21\u578b\u7684\u53c2\u4e0e\u65b9 party_id \u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u5982 arbiter-10000#guest-9999#host-10000 -> arbiter-10000#guest-99#host-10000 \uff0c\u6216\u8005 arbiter-10000#guest-9999#host-10000 -> arbiter-100#guest-99#host-100 2. \u6a21\u578b\u7684\u53c2\u4e0e\u65b9 party_id \u53d1\u751f\u6539\u53d8\uff0c\u56e0\u6b64 model_id \u4ee5\u53ca\u6a21\u578b\u6587\u4ef6\u91cc\u9762\u6d89\u53ca party_id \u9700\u8981\u6539\u53d8 3. \u6574\u4f53\u6d41\u7a0b\u4e0b\u6765\uff0c\u6709\u4e09\u4e2a\u6b65\u9aa4\uff1a\u590d\u5236\u8f6c\u79fb\u539f\u6709\u6a21\u578b\u6587\u4ef6\u3001\u5bf9\u539f\u6709\u6a21\u578b\u6587\u4ef6\u6267\u884c\u6a21\u578b\u8fc1\u79fb\u4efb\u52a1\u3001\u5bfc\u5165\u6a21\u578b\u8fc1\u79fb\u4efb\u52a1\u751f\u6210\u7684\u65b0\u6a21\u578b 4. \u5176\u4e2d*\u539f\u6709\u6a21\u578b\u6587\u4ef6\u6267\u884c\u6a21\u578b\u8fc1\u79fb\u4efb\u52a1*\u5176\u5b9e\u5c31\u662f\u5728\u6267\u884c\u5904\u4e34\u65f6\u590d\u5236\u4e00\u4efd\u539f\u6a21\u578b\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u914d\u7f6e\uff0c\u4fee\u6539 model_id \u53ca\u6a21\u578b\u6587\u4ef6\u91cc\u9762\u6d89\u53ca party_id \u7684\u5185\u5bb9\uff0c\u4ee5\u9002\u914d\u65b0\u7684\u53c2\u4e0e\u65b9 party_id 5. \u4e0a\u8ff0\u6b65\u9aa4\u90fd\u9700\u8981\u5728\u6240\u6709\u65b0\u7684\u53c2\u4e0e\u65b9\u6267\u884c\uff0c\u5373\u4f7f\u5176\u4e2d\u67d0\u4e2a\u76ee\u6807\u53c2\u4e0e\u65b9\u7684 party_id \u6ca1\u6709\u6539\u53d8\uff0c\u4e5f\u9700\u8981\u6267\u884c 6. \u65b0\u7684\u53c2\u4e0e\u65b9\u96c6\u7fa4\u7248\u672c\u9700\u5927\u4e8e\u7b49\u4e8e 1.5.1 \u8fc1\u79fb\u6d41\u7a0b\u5982\u4e0b\uff1a","title":"\u96c6\u7fa4\u95f4\u6a21\u578b\u8fc1\u79fb"},{"location":"zh/fate_flow_model_migration/#_2","text":"\u8bf7\u5c06\u6e90\u53c2\u4e0e\u65b9fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u751f\u6210\u7684\u6a21\u578b\u6587\u4ef6\uff08\u5305\u62ec\u4ee5model id\u4e3a\u547d\u540d\u7684\u76ee\u5f55\uff09\u8fdb\u884c\u6253\u5305\u5e76\u8f6c\u79fb\u5230\u76ee\u6807\u53c2\u4e0e\u65b9fate flow\u6240\u5728\u673a\u5668\u4e2d\uff0c\u8bf7\u5c06\u6a21\u578b\u6587\u4ef6\u8f6c\u79fb\u81f3\u56fa\u5b9a\u76ee\u5f55\u4e2d\uff1a $FATE_PROJECT_BASE /model_local_cache \u8bf4\u660e: 1. \u6587\u4ef6\u5939\u8f6c\u79fb\u5373\u53ef\uff0c\u5982\u679c\u662f\u901a\u8fc7\u538b\u7f29\u6253\u5305\u8fdb\u884c\u7684\u8f6c\u79fb\uff0c\u8bf7\u5728\u8f6c\u79fb\u540e\u5c06\u6a21\u578b\u6587\u4ef6\u89e3\u538b\u5230\u6a21\u578b\u6240\u5728\u76ee\u5f55\u4e2d\u3002 2. \u6a21\u578b\u6587\u4ef6\u8bf7\u6309\u6e90\u76ee\u53c2\u4e0e\u65b9\u4e00\u4e00\u5bf9\u5e94\u8f6c\u79fb","title":"\u8f6c\u79fb\u6a21\u578b\u6587\u4ef6"},{"location":"zh/fate_flow_model_migration/#_3","text":"","title":"\u8fc1\u79fb\u524d\u7684\u51c6\u5907\u5de5\u4f5c"},{"location":"zh/fate_flow_model_migration/#_4","text":"\u53c2\u8003 fate flow client \u5b89\u88c5\u652f\u6301\u6a21\u578b\u8fc1\u79fb\u7684\u5ba2\u6237\u7aeffate-client\uff0c\u53ea\u6709fate 1.5.1\u53ca\u5176\u4ee5\u4e0a\u7248\u672c\u652f\u6301","title":"\u8bf4\u660e"},{"location":"zh/fate_flow_model_migration/#_5","text":"","title":"\u6267\u884c\u8fc1\u79fb\u4efb\u52a1"},{"location":"zh/fate_flow_model_migration/#_6","text":"\u6267\u884c\u8fc1\u79fb\u4efb\u52a1\u662f\u5c06\u6e90\u6a21\u578b\u6587\u4ef6\u6839\u636e\u8fc1\u79fb\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\u4fee\u6539 model_id \u3001 model_version \u4ee5\u53ca\u6a21\u578b\u5185\u6d89\u53ca role \u548c party_id \u7684\u5185\u5bb9\u8fdb\u884c\u66ff\u6362 \u63d0\u4ea4\u4efb\u52a1\u7684\u96c6\u7fa4\u5fc5\u987b\u5b8c\u6210\u4e0a\u8ff0\u8fc1\u79fb\u51c6\u5907","title":"\u8bf4\u660e"},{"location":"zh/fate_flow_model_migration/#1","text":"\u5728\u65b0\u53c2\u4e0e\u65b9\uff08\u673a\u5668\uff09\u4e2d\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5bf9\u8fc1\u79fb\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u4e0b\u4e3a\u8fc1\u79fb\u4efb\u52a1\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6 migrate_model.json { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"arbiter\" : [ 100 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"arbiter\" : [ 10000 ], \"host\" : [ 10000 ] }, \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202006171904247702041\" , \"unify_model_version\" : \"20200901_0001\" } \u8bf7\u5c06\u4e0a\u8ff0\u914d\u7f6e\u5185\u5bb9\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u4e2d\u7684\u67d0\u4e00\u4f4d\u7f6e\u8fdb\u884c\u4fee\u6539\u3002 \u4ee5\u4e0b\u4e3a\u5bf9\u8be5\u914d\u7f6e\u4e2d\u7684\u53c2\u6570\u7684\u89e3\u91ca\u8bf4\u660e\uff1a job_parameters \uff1a\u8be5\u53c2\u6570\u4e2d\u7684 federated_mode \u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5206\u522b\u4e3a MULTIPLE \u53ca SINGLE \u3002\u5982\u679c\u8bbe\u7f6e\u4e3a SINGLE \uff0c\u5219\u8be5\u8fc1\u79fb\u4efb\u52a1\u53ea\u4f1a\u5728\u63d0\u4ea4\u8fc1\u79fb\u4efb\u52a1\u7684\u672c\u65b9\u6267\u884c\uff0c\u90a3\u4e48\u9700\u8981\u5206\u522b\u5728\u6240\u6709\u65b0\u53c2\u4e0e\u65b9\u63d0\u4ea4\u4efb\u52a1;\u5982\u679c\u8bbe\u7f6e\u4e3a MULTIPLE \uff0c\u5219\u5c06\u4efb\u52a1\u5206\u53d1\u5230 execute_party \u4e2d\u6307\u5b9a\u7684\u53c2\u4e0e\u65b9\u6267\u884c\u4efb\u52a1\uff0c\u53ea\u9700\u8981\u5728\u4f5c\u4e3a migrate_initiator \u7684\u65b0\u53c2\u4e0e\u65b9\u63d0\u4ea4\u3002 role \uff1a\u8be5\u53c2\u6570\u586b\u5199\u751f\u6210\u539f\u59cb\u6a21\u578b\u7684\u53c2\u4e0e\u65b9 role \u53ca\u5176\u5bf9\u5e94\u7684 party_id \u4fe1\u606f\u3002 migrate_initiator \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u8fc1\u79fb\u540e\u7684\u6a21\u578b\u7684\u4efb\u52a1\u53d1\u8d77\u65b9\u4fe1\u606f\uff0c\u5206\u522b\u9700\u6307\u5b9a\u53d1\u8d77\u65b9\u7684 role \u4e0e party_id \u3002 migrate_role \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u8fc1\u79fb\u540e\u7684\u6a21\u578b\u7684\u53c2\u4e0e\u65b9 role \u53ca party_id \u4fe1\u606f\u3002 execute_party \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u6267\u884c\u8fc1\u79fb\u7684 role \u53ca party_id \u4fe1\u606f, \u8be5 party_id \u4e3a\u6e90\u96c6\u7fa4 party_id \u3002 model_id \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u88ab\u8fc1\u79fb\u7684\u539f\u59cb\u6a21\u578b\u7684 model_id \u3002 model_version \uff1a\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u9700\u8981\u88ab\u8fc1\u79fb\u7684\u539f\u59cb\u6a21\u578b\u7684 model_version \u3002 unify_model_version \uff1a\u6b64\u53c2\u6570\u4e3a\u975e\u5fc5\u586b\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u65b0\u6a21\u578b\u7684 model_version \u3002\u82e5\u672a\u63d0\u4f9b\u8be5\u53c2\u6570\uff0c\u65b0\u6a21\u578b\u5c06\u4ee5\u8fc1\u79fb\u4efb\u52a1\u7684 job_id \u4f5c\u4e3a\u5176\u65b0 model_version \u3002 \u4e0a\u8ff0\u914d\u7f6e\u6587\u4ef6\u4e3e\u4f8b\u8bf4\u660e\uff1a 1. \u6e90\u6a21\u578b\u7684\u53c2\u4e0e\u65b9\u4e3a guest: 9999, host: 10000, arbiter: 10000, \u5c06\u6a21\u578b\u8fc1\u79fb\u6210\u53c2\u4e0e\u65b9\u4e3a guest: 99, host: 100, arbiter: 100 , \u4e14\u65b0\u53d1\u8d77\u65b9\u4e3a guest: 99 2. federated_mode: SINGLE \u8868\u793a\u6bcf\u4e2a\u8fc1\u79fb\u4efb\u52a1\u53ea\u5728\u63d0\u4ea4\u4efb\u52a1\u7684\u96c6\u7fa4\u6267\u884c\u4efb\u52a1\uff0c\u90a3\u4e48\u9700\u8981\u572899\u3001100\u5206\u522b\u63d0\u4ea4\u4efb\u52a1 3. \u4f8b\u5982\u572899\u6267\u884c\uff0c\u5219 execute_party \u914d\u7f6e\u4e3a \"guest\": [9999] 4. \u4f8b\u5982\u5728100\u6267\u884c\uff0c\u5219 execute_party \u914d\u7f6e\u4e3a \"arbiter\": [10000], \"host\": [10000]","title":"1. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"zh/fate_flow_model_migration/#2","text":"\u8fc1\u79fb\u4efb\u52a1\u9700\u4f7f\u7528fate-client\u8fdb\u884c\u63d0\u4ea4\uff0c\u793a\u4f8b\u6267\u884c\u547d\u4ee4\u5982\u4e0b\uff1a flow model migrate -c $FATE_FLOW_BASE /examples/model/migrate_model.json","title":"2. \u63d0\u4ea4\u8fc1\u79fb\u4efb\u52a1(\u5728\u6240\u6709\u76ee\u6807\u96c6\u7fa4\u5206\u522b\u64cd\u4f5c)"},{"location":"zh/fate_flow_model_migration/#3","text":"\u5982\u4e0b\u4e3a\u5b9e\u9645\u8fc1\u79fb\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\uff1a { \"job_parameters\" : { \"federated_mode\" : \"SINGLE\" }, \"role\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"migrate_initiator\" : { \"role\" : \"guest\" , \"party_id\" : 99 }, \"migrate_role\" : { \"guest\" : [ 99 ], \"host\" : [ 100 ] }, \"execute_party\" : { \"guest\" : [ 9999 ], \"host\" : [ 10000 ] }, \"model_id\" : \"guest-9999#host-10000#model\" , \"model_version\" : \"202010291539339602784\" , \"unify_model_version\" : \"fate_migration\" } \u8be5\u4efb\u52a1\u5b9e\u73b0\u7684\u662f\uff0c\u5c06 party_id \u4e3a9999 (guest)\uff0c10000 (host)\u7684\u96c6\u7fa4\u751f\u6210\u7684 model_id \u4e3a guest-9999#host-10000#model \uff0c model_version \u4e3a 202010291539339602784 \u7684\u6a21\u578b\u4fee\u6539\u8fc1\u79fb\u751f\u6210\u9002\u914d party_id \u4e3a99 (guest)\uff0c100 (host)\u96c6\u7fa4\u7684\u65b0\u6a21\u578b \u5982\u4e0b\u4e3a\u8fc1\u79fb\u6210\u529f\u7684\u540e\u5f97\u5230\u7684\u8fd4\u56de\u7ed3\u679c\uff1a { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: guest-99#host-100#model, model version is: fate_migration. Model files can be found at '/data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: guest-99#host-100#model, model version is: fate_migration. Model files can be found at '/data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202010292152299793981\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } \u4efb\u52a1\u6210\u529f\u6267\u884c\u540e\uff0c\u6267\u884c\u65b9\u7684\u673a\u5668\u4e2d\u90fd\u4f1a\u751f\u6210\u4e00\u4efd\u8fc1\u79fb\u540e\u6a21\u578b\u538b\u7f29\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u5728\u8fd4\u56de\u7ed3\u679c\u4e2d\u5f97\u5230\u3002\u5982\u4e0a\uff0c9999 (guest)\u7684\u8fc1\u79fb\u540e\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /data/projects/fate/temp/fate_flow/guest#99#guest-99#host-100#model_fate_migration.zip \uff0c10000 (host)\u7684\u8fc1\u79fb\u540e\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u4e3a\uff1a /data/projects/fate/temp/fate_flow/host#100#guest-99#host-100#model_fate_migration.zip \u3002\u65b0\u7684 model_id \u4e0e model_version \u540c\u6837\u53ef\u4ee5\u4ece\u8fd4\u56de\u4e2d\u83b7\u5f97\u3002","title":"3. \u4efb\u52a1\u6267\u884c\u7ed3\u679c"},{"location":"zh/fate_flow_model_migration/#4","text":"\u8fc1\u79fb\u4efb\u52a1\u6210\u529f\u4e4b\u540e\uff0c\u8bf7\u624b\u52a8\u5c06\u65b0\u751f\u6210\u7684\u6a21\u578b\u538b\u7f29\u6587\u4ef6\u8f6c\u79fb\u5230\u76ee\u6807\u96c6\u7fa4\u7684fate flow\u673a\u5668\u4e0a\u3002\u4f8b\u5982\uff1a\u7b2c\u4e09\u70b9\u4e2d9999 (guest)\u751f\u6210\u7684\u65b0\u6a21\u578b\u538b\u7f29\u6587\u4ef6\u9700\u8981\u88ab\u8f6c\u79fb\u523099 (guest) \u673a\u5668\u4e0a\u3002\u538b\u7f29\u6587\u4ef6\u53ef\u4ee5\u653e\u5728\u5bf9\u5e94\u673a\u5668\u4e0a\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u914d\u7f6e\u6a21\u578b\u7684\u5bfc\u5165\u4efb\u52a1\uff0c\u914d\u7f6e\u6587\u4ef6\u8bf7\u89c1 import_model.json \uff08\u538b\u7f29\u6587\u4ef6\u5185\u5305\u542b\u6b64\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\uff0c \u5207\u52ff\u76f4\u63a5\u4f7f\u7528 \uff09\u3002 \u4e0b\u9762\u4e3e\u4f8b\u4ecb\u7ecd\u5728guest (99)\u4e2d\u5bfc\u5165\u8fc1\u79fb\u540e\u6a21\u578b\u7684\u914d\u7f6e\u6587\u4ef6\uff1a { \"role\" : \"guest\" , \"party_id\" : 99 , \"model_id\" : \"guest-99#host-100#model\" , \"model_version\" : \"202010292152299793981\" , \"file\" : \"/data/projects/fate/python/temp/guest#99#guest-99#host-100#202010292152299793981.zip\" } \u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5bf9\u5e94\u586b\u5199\u89d2\u8272 role \uff0c\u5f53\u524d\u672c\u65b9 party_id \uff0c\u8fc1\u79fb\u6a21\u578b\u7684\u65b0 model_id \u53ca model_version \uff0c\u4ee5\u53ca\u8fc1\u79fb\u6a21\u578b\u7684\u538b\u7f29\u6587\u4ef6\u6240\u5728\u8def\u5f84\u3002 \u5982\u4e0b\u4e3a\u4f7f\u7528fate-client\u63d0\u4ea4\u5bfc\u5165\u6a21\u578b\u7684\u793a\u4f8b\u547d\u4ee4\uff1a flow model import -c $FATE_FLOW_BASE /examples/model/import_model.json \u5f97\u5230\u5982\u4e0b\u8fd4\u56de\u89c6\u4e3a\u5bfc\u5165\u6210\u529f\uff1a { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u8fc1\u79fb\u4efb\u52a1\u81f3\u6b64\u5b8c\u6210\uff0c\u7528\u6237\u53ef\u4f7f\u7528\u65b0\u7684 model_id \u53ca model_version \u8fdb\u884c\u4efb\u52a1\u63d0\u4ea4\uff0c\u4ee5\u5229\u7528\u8fc1\u79fb\u540e\u7684\u6a21\u578b\u6267\u884c\u9884\u6d4b\u4efb\u52a1\u3002","title":"4. \u8f6c\u79fb\u6587\u4ef6\u5e76\u5bfc\u5165(\u5728\u6240\u6709\u76ee\u6807\u96c6\u7fa4\u5206\u522b\u64cd\u4f5c)"},{"location":"zh/fate_flow_model_registry/","text":"\u8054\u5408\u6a21\u578b\u6ce8\u518c\u4e2d\u5fc3 \u00b6 1. \u8bf4\u660e \u00b6 \u7531 FATE \u8bad\u7ec3\u7684\u6a21\u578b\u4f1a\u81ea\u52a8\u4fdd\u5b58\u5230\u672c\u5730\u5e76\u8bb0\u5f55\u5728 FATE-Flow \u7684\u6570\u636e\u5e93\u4e2d\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u8fd0\u884c\u5b8c\u6210\u540e\u4fdd\u5b58\u7684\u6a21\u578b\u79f0\u4e3a Pipeline \u6a21\u578b\uff0c\u5728\u7ec4\u4ef6\u8fd0\u884c\u65f6\u5b9a\u65f6\u4fdd\u5b58\u7684\u6a21\u578b\u79f0\u4e3a Checkpoint \u6a21\u578b\u3002Checkpoint \u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7ec4\u4ef6\u8fd0\u884c\u610f\u5916\u4e2d\u65ad\u540e\uff0c\u91cd\u8bd5\u65f6\u7684\u201c\u65ad\u70b9\u7eed\u4f20\u201d\u3002 Checkpoint \u6a21\u578b\u7684\u652f\u6301\u81ea 1.7.0 \u52a0\u5165\uff0c\u9ed8\u8ba4\u662f\u4e0d\u4fdd\u5b58\u7684\uff0c\u5982\u9700\u542f\u7528\uff0c\u5219\u8981\u5411 DSL \u4e2d\u52a0\u5165 callback ModelCheckpoint \u3002 \u672c\u5730\u78c1\u76d8\u5b58\u50a8 \u00b6 Pipeline \u6a21\u578b\u5b58\u50a8\u4e8e model_local_cache/<party_model_id>/<model_version>/variables/data/<component_name>/<model_alias> \u3002 Checkpoint \u6a21\u578b\u5b58\u50a8\u4e8e model_local_cache/<party_model_id>/<model_version>/checkpoint/<component_name>/<step_index>#<step_name> \u3002 \u76ee\u5f55\u7ed3\u6784 \u00b6 tree model_local_cache/guest#9999#arbiter-10000#guest-9999#host-10000#model/202112181502241234200 model_local_cache/guest#9999#arbiter-10000#guest-9999#host-10000#model/202112181502241234200 \u251c\u2500\u2500 checkpoint \u2502 \u251c\u2500\u2500 data_transform_0 \u2502 \u251c\u2500\u2500 evaluation_0 \u2502 \u251c\u2500\u2500 hetero_linr_0 \u2502 \u2502 \u251c\u2500\u2500 0#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u251c\u2500\u2500 1#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u251c\u2500\u2500 2#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u251c\u2500\u2500 3#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u2514\u2500\u2500 4#step_name \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u251c\u2500\u2500 hetero_linr_1 \u2502 \u251c\u2500\u2500 intersection_0 \u2502 \u2514\u2500\u2500 reader_0 \u251c\u2500\u2500 define \u2502 \u251c\u2500\u2500 define_meta.yaml \u2502 \u251c\u2500\u2500 proto \u2502 \u2502 \u2514\u2500\u2500 pipeline.proto \u2502 \u2514\u2500\u2500 proto_generated_python \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u2514\u2500\u2500 pipeline_pb2.cpython-36.pyc \u2502 \u2514\u2500\u2500 pipeline_pb2.py \u251c\u2500\u2500 run_parameters \u2502 \u251c\u2500\u2500 data_transform_0 \u2502 \u2502 \u2514\u2500\u2500 run_parameters.json \u2502 \u251c\u2500\u2500 hetero_linr_0 \u2502 \u2502 \u2514\u2500\u2500 run_parameters.json \u2502 \u251c\u2500\u2500 hetero_linr_1 \u2502 \u2502 \u2514\u2500\u2500 run_parameters.json \u2502 \u2514\u2500\u2500 pipeline \u2502 \u2514\u2500\u2500 run_parameters.json \u2514\u2500\u2500 variables \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 data_transform_0 \u2502 \u2502 \u2514\u2500\u2500 model \u2502 \u2502 \u251c\u2500\u2500 DataTransformMeta \u2502 \u2502 \u251c\u2500\u2500 DataTransformMeta.json \u2502 \u2502 \u251c\u2500\u2500 DataTransformParam \u2502 \u2502 \u2514\u2500\u2500 DataTransformParam.json \u2502 \u251c\u2500\u2500 hetero_linr_0 \u2502 \u2502 \u2514\u2500\u2500 model \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam \u2502 \u2502 \u2514\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u251c\u2500\u2500 hetero_linr_1 \u2502 \u2502 \u2514\u2500\u2500 model \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam \u2502 \u2502 \u2514\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2514\u2500\u2500 pipeline \u2502 \u2514\u2500\u2500 pipeline \u2502 \u251c\u2500\u2500 Pipeline \u2502 \u2514\u2500\u2500 Pipeline.json \u2514\u2500\u2500 index 32 directories, 47 files checkpoint \u6b64\u76ee\u5f55\u5b58\u50a8\u7ec4\u4ef6\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u8f6e\u8fed\u4ee3\u4ea7\u751f\u7684\u6a21\u578b\uff0c\u4e0d\u662f\u6240\u6709\u7ec4\u4ef6\u90fd\u652f\u6301 checkpoint\u3002 \u4ee5 checkpoint/hetero_linr_0/2#step_name \u4e3a\u4f8b\uff1a hetero_linr_0 \u662f component_name \uff1b 2 \u662f step_index \uff0c\u5373\u8fed\u4ee3\u6b21\u6570\uff1b step_name \u76ee\u524d\u53ea\u505a\u5360\u4f4d\u7b26\uff0c\u6ca1\u6709\u4f7f\u7528\u3002 HeteroLinearRegressionMeta.json , HeteroLinearRegressionMeta.pb , HeteroLinearRegressionParam.json , HeteroLinearRegressionParam.pb \u90fd\u662f\u8bad\u7ec3\u4ea7\u751f\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6a21\u578b\u6587\u4ef6\u3002 database.yaml \u4e3b\u8981\u8bb0\u5f55\u4e0a\u8ff0\u6587\u4ef6\u7684 hash \u4ee5\u4f5c\u6821\u9a8c\uff0c\u8fd8\u5b58\u50a8\u6709 step_index , step_name , create_time \u3002 define \u8be5\u76ee\u5f55\u50a8\u5b58\u4f5c\u4e1a\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5728\u4f5c\u4e1a\u521d\u59cb\u5316\u65f6\u521b\u5efa\u3002 pipeline \u4e0d\u662f\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u800c\u662f\u4ee3\u8868\u6574\u4e2a\u4f5c\u4e1a\u3002 define/proto/pipeline.proto \u548c define/proto/pipeline_pb2.py \u76ee\u524d\u6ca1\u6709\u4f7f\u7528\u3002 define/define_meta.yaml \u8bb0\u5f55\u7ec4\u4ef6\u5217\u8868\uff0c\u5305\u62ec component_name , componet_module_name , model_alias \u3002 run_parameters \u6b64\u76ee\u5f55\u5b58\u50a8\u7ec4\u4ef6\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4e5f\u79f0\u4e3a DSL\u3002 run_parameters/pipeline/run_parameters.json \u4e3a\u4e00\u4e2a\u7a7a\u7684 object {} \u3002 variables \u6b64\u76ee\u5f55\u5b58\u50a8\u7ec4\u4ef6\u8fd0\u884c\u7ed3\u675f\u540e\u4ea7\u751f\u7684\u6a21\u578b\uff0c\u4e0e\u6700\u540e\u4e00\u8f6e\u8fed\u4ee3\u4ea7\u751f\u7684\u6a21\u578b\u4e00\u81f4\u3002 \u4ee5 variables/data/hetero_linr_0/model \u4e3a\u4f8b\uff1a hetero_linr_0 \u662f component_name \uff1b model \u662f model_alias \u3002 HeteroLinearRegressionMeta , HeteroLinearRegressionMeta.json , HeteroLinearRegressionParam HeteroLinearRegressionParam.json \u4e0e checkpoint \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u683c\u5f0f\u5b8c\u5168\u4e00\u81f4\uff0c\u9664\u4e86 .pb \u6587\u4ef6\u53bb\u6389\u4e86\u6269\u5c55\u540d\u3002 variables/data/pipeline/ \u5b58\u50a8\u4f5c\u4e1a\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 variables/index/ \u76ee\u524d\u6ca1\u6709\u4f7f\u7528\u3002 \u8fdc\u7aef\u5b58\u50a8\u5f15\u64ce \u00b6 \u672c\u5730\u78c1\u76d8\u5e76\u4e0d\u53ef\u9760\uff0c\u56e0\u6b64\u6a21\u578b\u6709\u4e22\u5931\u7684\u98ce\u9669\uff0cFATE-Flow \u652f\u6301\u5bfc\u51fa\u6a21\u578b\u5230\u6307\u5b9a\u5b58\u50a8\u5f15\u64ce\u3001\u4ece\u6307\u5b9a\u5b58\u50a8\u5f15\u64ce\u5bfc\u5165\u4ee5\u53ca\u81ea\u52a8\u53d1\u5e03\u6a21\u578b\u65f6\u63a8\u9001\u6a21\u578b\u5230\u5f15\u64ce\u5b58\u50a8\u3002 \u5b58\u50a8\u5f15\u64ce\u652f\u6301\u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8\u3001MySQL \u548c Redis, \u5177\u4f53\u8bf7\u53c2\u8003 \u5b58\u50a8\u5f15\u64ce\u914d\u7f6e 2. Model \u00b6 load \u00b6 \u5411 Fate-Serving \u52a0\u8f7d deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u662f \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 \u5411 Fate-Serving \u7ed1\u5b9a deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" } import \u00b6 \u4ece\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b\u3002 flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 from_database --from-database \u662f \u4ece\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b \u6837\u4f8b { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } export \u00b6 \u5bfc\u51fa\u6a21\u578b\u5230\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u3002 flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 to_database --to-database \u662f \u5c06\u6a21\u578b\u5bfc\u51fa\u5230\u5b58\u50a8\u5f15\u64ce\u4e2d \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } migrate \u00b6 \u8fc1\u79fb\u6a21\u578b\u3002 flow model migrate -c examples/model/migrate_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 \u6837\u4f8b { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } tag-list \u00b6 \u83b7\u53d6\u6a21\u578b\u7684\u6807\u7b7e\u5217\u8868\u3002 flow model tag-list -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag-model \u00b6 \u4ece\u6a21\u578b\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\u3002 flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag_name -t --tag-name \u5426 \u6807\u7b7e\u540d remove --remove \u662f \u79fb\u9664\u6307\u5b9a\u7684\u6807\u7b7e deploy \u00b6 \u914d\u7f6e\u9884\u6d4b DSL\u3002 flow model deploy --model-id <model_id> --model-version <model_version> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c cpn_list --cpn-list \u662f \u7ec4\u4ef6\u5217\u8868 cpn_path --cpn-path \u662f \u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u7ec4\u4ef6\u5217\u8868 dsl_path --dsl-path \u662f \u9884\u6d4b DSL \u6587\u4ef6 cpn_step_index --cpn-step-index \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step index \u4f8b\u5982 --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step name \u4f8b\u5982 --cpn-step-name cpn_b:foobar \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } } get-predict-dsl \u00b6 \u83b7\u53d6\u9884\u6d4b DSL\u3002 flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84 get-predict-conf \u00b6 \u83b7\u53d6\u6a21\u578b\u9884\u6d4b\u6a21\u677f\u3002 flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84 get-model-info \u00b6 \u83b7\u53d6\u6a21\u578b\u4fe1\u606f\u3002 flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u662f Party \u89d2\u8272 party_id -p --party-id \u662f Party ID detail --detail \u662f \u5c55\u793a\u8be6\u7ec6\u4fe1\u606f homo-convert \u00b6 \u57fa\u4e8e\u6a2a\u5411\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u751f\u6210\u5176\u4ed6 ML \u6846\u67b6\u7684\u6a21\u578b\u6587\u4ef6\u3002 flow model homo-convert -c examples/model/homo_convert_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 homo-deploy \u00b6 \u5c06\u6a2a\u5411\u8bad\u7ec3\u540e\u4f7f\u7528 homo-convert \u751f\u6210\u7684\u6a21\u578b\u90e8\u7f72\u5230\u5728\u7ebf\u63a8\u7406\u7cfb\u7edf\u4e2d\uff0c\u5f53\u524d\u652f\u6301\u521b\u5efa\u57fa\u4e8e KFServing \u7684\u63a8\u7406\u670d\u52a1\u3002 flow model homo-deploy -c examples/model/homo_deploy_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 3. Checkpoint \u00b6 list \u00b6 \u83b7\u53d6 Checkpoint \u6a21\u578b\u5217\u8868\u3002 flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] } get \u00b6 \u83b7\u53d6 Checkpoint \u6a21\u578b\u4fe1\u606f\u3002 flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d step_index --step-index \u662f Step index\uff0c\u4e0d\u53ef\u4e0e step_name \u540c\u65f6\u4f7f\u7528 step_name --step-name \u662f Step name\uff0c\u4e0d\u53ef\u4e0e step_index \u540c\u65f6\u4f7f\u7528 \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } } 4. \u5b58\u50a8\u5f15\u64ce\u914d\u7f6e \u00b6 enable_model_store \u00b6 \u5f00\u542f\u540e\uff0c\u5728\u8c03\u7528 /model/load \u65f6\uff1a\u5982\u679c\u6a21\u578b\u6587\u4ef6\u5728\u672c\u5730\u78c1\u76d8\u5b58\u5728\u3001\u4f46\u4e0d\u5728\u5b58\u50a8\u5f15\u64ce\u4e2d\uff0c\u5219\u81ea\u52a8\u628a\u6a21\u578b\u6587\u4ef6\u4e0a\u4f20\u81f3\u5b58\u50a8\u5f15\u64ce\uff1b\u5982\u679c\u6a21\u578b\u6587\u4ef6\u5728\u5b58\u50a8\u5f15\u64ce\u5b58\u5728\u3001\u4f46\u4e0d\u5728\u672c\u5730\u78c1\u76d8\u4e2d\uff0c\u5219\u81ea\u52a8\u628a\u6a21\u578b\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8\u3002 \u6b64\u914d\u7f6e\u4e0d\u5f71\u54cd /model/store \u548c /model/restore \u3002 model_store_address \u00b6 \u6b64\u914d\u7f6e\u5b9a\u4e49\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u3002 \u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8 \u00b6 storage : tencent_cos # \u8bf7\u4ece\u817e\u8baf\u4e91\u63a7\u5236\u53f0\u83b7\u53d6\u4e0b\u5217\u914d\u7f6e Region : SecretId : SecretKey : Bucket : MySQL \u00b6 storage : mysql database : fate_model user : fate password : fate host : 127.0.0.1 port : 3306 # \u53ef\u9009\u7684\u6570\u636e\u5e93\u8fde\u63a5\u53c2\u6570 max_connections : 10 stale_timeout : 10 Redis \u00b6 storage : redis host : 127.0.0.1 port : 6379 db : 0 password : # key \u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2\u3002\u9ed8\u8ba4 None\uff0c\u6ca1\u6709\u8d85\u65f6\u65f6\u95f4\u3002 ex :","title":"\u8054\u5408\u6a21\u578b\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/fate_flow_model_registry/#_1","text":"","title":"\u8054\u5408\u6a21\u578b\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/fate_flow_model_registry/#1","text":"\u7531 FATE \u8bad\u7ec3\u7684\u6a21\u578b\u4f1a\u81ea\u52a8\u4fdd\u5b58\u5230\u672c\u5730\u5e76\u8bb0\u5f55\u5728 FATE-Flow \u7684\u6570\u636e\u5e93\u4e2d\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u8fd0\u884c\u5b8c\u6210\u540e\u4fdd\u5b58\u7684\u6a21\u578b\u79f0\u4e3a Pipeline \u6a21\u578b\uff0c\u5728\u7ec4\u4ef6\u8fd0\u884c\u65f6\u5b9a\u65f6\u4fdd\u5b58\u7684\u6a21\u578b\u79f0\u4e3a Checkpoint \u6a21\u578b\u3002Checkpoint \u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7ec4\u4ef6\u8fd0\u884c\u610f\u5916\u4e2d\u65ad\u540e\uff0c\u91cd\u8bd5\u65f6\u7684\u201c\u65ad\u70b9\u7eed\u4f20\u201d\u3002 Checkpoint \u6a21\u578b\u7684\u652f\u6301\u81ea 1.7.0 \u52a0\u5165\uff0c\u9ed8\u8ba4\u662f\u4e0d\u4fdd\u5b58\u7684\uff0c\u5982\u9700\u542f\u7528\uff0c\u5219\u8981\u5411 DSL \u4e2d\u52a0\u5165 callback ModelCheckpoint \u3002","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_model_registry/#_2","text":"Pipeline \u6a21\u578b\u5b58\u50a8\u4e8e model_local_cache/<party_model_id>/<model_version>/variables/data/<component_name>/<model_alias> \u3002 Checkpoint \u6a21\u578b\u5b58\u50a8\u4e8e model_local_cache/<party_model_id>/<model_version>/checkpoint/<component_name>/<step_index>#<step_name> \u3002","title":"\u672c\u5730\u78c1\u76d8\u5b58\u50a8"},{"location":"zh/fate_flow_model_registry/#_3","text":"tree model_local_cache/guest#9999#arbiter-10000#guest-9999#host-10000#model/202112181502241234200 model_local_cache/guest#9999#arbiter-10000#guest-9999#host-10000#model/202112181502241234200 \u251c\u2500\u2500 checkpoint \u2502 \u251c\u2500\u2500 data_transform_0 \u2502 \u251c\u2500\u2500 evaluation_0 \u2502 \u251c\u2500\u2500 hetero_linr_0 \u2502 \u2502 \u251c\u2500\u2500 0#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u251c\u2500\u2500 1#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u251c\u2500\u2500 2#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u251c\u2500\u2500 3#step_name \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u2502 \u2514\u2500\u2500 4#step_name \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.pb \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam.pb \u2502 \u2502 \u2514\u2500\u2500 database.yaml \u2502 \u251c\u2500\u2500 hetero_linr_1 \u2502 \u251c\u2500\u2500 intersection_0 \u2502 \u2514\u2500\u2500 reader_0 \u251c\u2500\u2500 define \u2502 \u251c\u2500\u2500 define_meta.yaml \u2502 \u251c\u2500\u2500 proto \u2502 \u2502 \u2514\u2500\u2500 pipeline.proto \u2502 \u2514\u2500\u2500 proto_generated_python \u2502 \u251c\u2500\u2500 __pycache__ \u2502 \u2502 \u2514\u2500\u2500 pipeline_pb2.cpython-36.pyc \u2502 \u2514\u2500\u2500 pipeline_pb2.py \u251c\u2500\u2500 run_parameters \u2502 \u251c\u2500\u2500 data_transform_0 \u2502 \u2502 \u2514\u2500\u2500 run_parameters.json \u2502 \u251c\u2500\u2500 hetero_linr_0 \u2502 \u2502 \u2514\u2500\u2500 run_parameters.json \u2502 \u251c\u2500\u2500 hetero_linr_1 \u2502 \u2502 \u2514\u2500\u2500 run_parameters.json \u2502 \u2514\u2500\u2500 pipeline \u2502 \u2514\u2500\u2500 run_parameters.json \u2514\u2500\u2500 variables \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 data_transform_0 \u2502 \u2502 \u2514\u2500\u2500 model \u2502 \u2502 \u251c\u2500\u2500 DataTransformMeta \u2502 \u2502 \u251c\u2500\u2500 DataTransformMeta.json \u2502 \u2502 \u251c\u2500\u2500 DataTransformParam \u2502 \u2502 \u2514\u2500\u2500 DataTransformParam.json \u2502 \u251c\u2500\u2500 hetero_linr_0 \u2502 \u2502 \u2514\u2500\u2500 model \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam \u2502 \u2502 \u2514\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u251c\u2500\u2500 hetero_linr_1 \u2502 \u2502 \u2514\u2500\u2500 model \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionMeta.json \u2502 \u2502 \u251c\u2500\u2500 HeteroLinearRegressionParam \u2502 \u2502 \u2514\u2500\u2500 HeteroLinearRegressionParam.json \u2502 \u2514\u2500\u2500 pipeline \u2502 \u2514\u2500\u2500 pipeline \u2502 \u251c\u2500\u2500 Pipeline \u2502 \u2514\u2500\u2500 Pipeline.json \u2514\u2500\u2500 index 32 directories, 47 files checkpoint \u6b64\u76ee\u5f55\u5b58\u50a8\u7ec4\u4ef6\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u8f6e\u8fed\u4ee3\u4ea7\u751f\u7684\u6a21\u578b\uff0c\u4e0d\u662f\u6240\u6709\u7ec4\u4ef6\u90fd\u652f\u6301 checkpoint\u3002 \u4ee5 checkpoint/hetero_linr_0/2#step_name \u4e3a\u4f8b\uff1a hetero_linr_0 \u662f component_name \uff1b 2 \u662f step_index \uff0c\u5373\u8fed\u4ee3\u6b21\u6570\uff1b step_name \u76ee\u524d\u53ea\u505a\u5360\u4f4d\u7b26\uff0c\u6ca1\u6709\u4f7f\u7528\u3002 HeteroLinearRegressionMeta.json , HeteroLinearRegressionMeta.pb , HeteroLinearRegressionParam.json , HeteroLinearRegressionParam.pb \u90fd\u662f\u8bad\u7ec3\u4ea7\u751f\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6a21\u578b\u6587\u4ef6\u3002 database.yaml \u4e3b\u8981\u8bb0\u5f55\u4e0a\u8ff0\u6587\u4ef6\u7684 hash \u4ee5\u4f5c\u6821\u9a8c\uff0c\u8fd8\u5b58\u50a8\u6709 step_index , step_name , create_time \u3002 define \u8be5\u76ee\u5f55\u50a8\u5b58\u4f5c\u4e1a\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5728\u4f5c\u4e1a\u521d\u59cb\u5316\u65f6\u521b\u5efa\u3002 pipeline \u4e0d\u662f\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u800c\u662f\u4ee3\u8868\u6574\u4e2a\u4f5c\u4e1a\u3002 define/proto/pipeline.proto \u548c define/proto/pipeline_pb2.py \u76ee\u524d\u6ca1\u6709\u4f7f\u7528\u3002 define/define_meta.yaml \u8bb0\u5f55\u7ec4\u4ef6\u5217\u8868\uff0c\u5305\u62ec component_name , componet_module_name , model_alias \u3002 run_parameters \u6b64\u76ee\u5f55\u5b58\u50a8\u7ec4\u4ef6\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4e5f\u79f0\u4e3a DSL\u3002 run_parameters/pipeline/run_parameters.json \u4e3a\u4e00\u4e2a\u7a7a\u7684 object {} \u3002 variables \u6b64\u76ee\u5f55\u5b58\u50a8\u7ec4\u4ef6\u8fd0\u884c\u7ed3\u675f\u540e\u4ea7\u751f\u7684\u6a21\u578b\uff0c\u4e0e\u6700\u540e\u4e00\u8f6e\u8fed\u4ee3\u4ea7\u751f\u7684\u6a21\u578b\u4e00\u81f4\u3002 \u4ee5 variables/data/hetero_linr_0/model \u4e3a\u4f8b\uff1a hetero_linr_0 \u662f component_name \uff1b model \u662f model_alias \u3002 HeteroLinearRegressionMeta , HeteroLinearRegressionMeta.json , HeteroLinearRegressionParam HeteroLinearRegressionParam.json \u4e0e checkpoint \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u683c\u5f0f\u5b8c\u5168\u4e00\u81f4\uff0c\u9664\u4e86 .pb \u6587\u4ef6\u53bb\u6389\u4e86\u6269\u5c55\u540d\u3002 variables/data/pipeline/ \u5b58\u50a8\u4f5c\u4e1a\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 variables/index/ \u76ee\u524d\u6ca1\u6709\u4f7f\u7528\u3002","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"zh/fate_flow_model_registry/#_4","text":"\u672c\u5730\u78c1\u76d8\u5e76\u4e0d\u53ef\u9760\uff0c\u56e0\u6b64\u6a21\u578b\u6709\u4e22\u5931\u7684\u98ce\u9669\uff0cFATE-Flow \u652f\u6301\u5bfc\u51fa\u6a21\u578b\u5230\u6307\u5b9a\u5b58\u50a8\u5f15\u64ce\u3001\u4ece\u6307\u5b9a\u5b58\u50a8\u5f15\u64ce\u5bfc\u5165\u4ee5\u53ca\u81ea\u52a8\u53d1\u5e03\u6a21\u578b\u65f6\u63a8\u9001\u6a21\u578b\u5230\u5f15\u64ce\u5b58\u50a8\u3002 \u5b58\u50a8\u5f15\u64ce\u652f\u6301\u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8\u3001MySQL \u548c Redis, \u5177\u4f53\u8bf7\u53c2\u8003 \u5b58\u50a8\u5f15\u64ce\u914d\u7f6e","title":"\u8fdc\u7aef\u5b58\u50a8\u5f15\u64ce"},{"location":"zh/fate_flow_model_registry/#load","text":"\u5411 Fate-Serving \u52a0\u8f7d deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u662f \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"load"},{"location":"zh/fate_flow_model_registry/#bind","text":"\u5411 Fate-Serving \u7ed1\u5b9a deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" }","title":"bind"},{"location":"zh/fate_flow_model_registry/#import","text":"\u4ece\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b\u3002 flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 from_database --from-database \u662f \u4ece\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b \u6837\u4f8b { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"import"},{"location":"zh/fate_flow_model_registry/#export","text":"\u5bfc\u51fa\u6a21\u578b\u5230\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u3002 flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 to_database --to-database \u662f \u5c06\u6a21\u578b\u5bfc\u51fa\u5230\u5b58\u50a8\u5f15\u64ce\u4e2d \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"export"},{"location":"zh/fate_flow_model_registry/#migrate","text":"\u8fc1\u79fb\u6a21\u578b\u3002 flow model migrate -c examples/model/migrate_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 \u6837\u4f8b { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"migrate"},{"location":"zh/fate_flow_model_registry/#tag-list","text":"\u83b7\u53d6\u6a21\u578b\u7684\u6807\u7b7e\u5217\u8868\u3002 flow model tag-list -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID","title":"tag-list"},{"location":"zh/fate_flow_model_registry/#tag-model","text":"\u4ece\u6a21\u578b\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\u3002 flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag_name -t --tag-name \u5426 \u6807\u7b7e\u540d remove --remove \u662f \u79fb\u9664\u6307\u5b9a\u7684\u6807\u7b7e","title":"tag-model"},{"location":"zh/fate_flow_model_registry/#deploy","text":"\u914d\u7f6e\u9884\u6d4b DSL\u3002 flow model deploy --model-id <model_id> --model-version <model_version> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c cpn_list --cpn-list \u662f \u7ec4\u4ef6\u5217\u8868 cpn_path --cpn-path \u662f \u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u7ec4\u4ef6\u5217\u8868 dsl_path --dsl-path \u662f \u9884\u6d4b DSL \u6587\u4ef6 cpn_step_index --cpn-step-index \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step index \u4f8b\u5982 --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step name \u4f8b\u5982 --cpn-step-name cpn_b:foobar \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } }","title":"deploy"},{"location":"zh/fate_flow_model_registry/#get-predict-dsl","text":"\u83b7\u53d6\u9884\u6d4b DSL\u3002 flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84","title":"get-predict-dsl"},{"location":"zh/fate_flow_model_registry/#get-predict-conf","text":"\u83b7\u53d6\u6a21\u578b\u9884\u6d4b\u6a21\u677f\u3002 flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84","title":"get-predict-conf"},{"location":"zh/fate_flow_model_registry/#get-model-info","text":"\u83b7\u53d6\u6a21\u578b\u4fe1\u606f\u3002 flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u662f Party \u89d2\u8272 party_id -p --party-id \u662f Party ID detail --detail \u662f \u5c55\u793a\u8be6\u7ec6\u4fe1\u606f","title":"get-model-info"},{"location":"zh/fate_flow_model_registry/#homo-convert","text":"\u57fa\u4e8e\u6a2a\u5411\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u751f\u6210\u5176\u4ed6 ML \u6846\u67b6\u7684\u6a21\u578b\u6587\u4ef6\u3002 flow model homo-convert -c examples/model/homo_convert_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6","title":"homo-convert"},{"location":"zh/fate_flow_model_registry/#homo-deploy","text":"\u5c06\u6a2a\u5411\u8bad\u7ec3\u540e\u4f7f\u7528 homo-convert \u751f\u6210\u7684\u6a21\u578b\u90e8\u7f72\u5230\u5728\u7ebf\u63a8\u7406\u7cfb\u7edf\u4e2d\uff0c\u5f53\u524d\u652f\u6301\u521b\u5efa\u57fa\u4e8e KFServing \u7684\u63a8\u7406\u670d\u52a1\u3002 flow model homo-deploy -c examples/model/homo_deploy_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6","title":"homo-deploy"},{"location":"zh/fate_flow_model_registry/#list","text":"\u83b7\u53d6 Checkpoint \u6a21\u578b\u5217\u8868\u3002 flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] }","title":"list"},{"location":"zh/fate_flow_model_registry/#get","text":"\u83b7\u53d6 Checkpoint \u6a21\u578b\u4fe1\u606f\u3002 flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d step_index --step-index \u662f Step index\uff0c\u4e0d\u53ef\u4e0e step_name \u540c\u65f6\u4f7f\u7528 step_name --step-name \u662f Step name\uff0c\u4e0d\u53ef\u4e0e step_index \u540c\u65f6\u4f7f\u7528 \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"get"},{"location":"zh/fate_flow_model_registry/#4","text":"","title":"4. \u5b58\u50a8\u5f15\u64ce\u914d\u7f6e"},{"location":"zh/fate_flow_model_registry/#enable_model_store","text":"\u5f00\u542f\u540e\uff0c\u5728\u8c03\u7528 /model/load \u65f6\uff1a\u5982\u679c\u6a21\u578b\u6587\u4ef6\u5728\u672c\u5730\u78c1\u76d8\u5b58\u5728\u3001\u4f46\u4e0d\u5728\u5b58\u50a8\u5f15\u64ce\u4e2d\uff0c\u5219\u81ea\u52a8\u628a\u6a21\u578b\u6587\u4ef6\u4e0a\u4f20\u81f3\u5b58\u50a8\u5f15\u64ce\uff1b\u5982\u679c\u6a21\u578b\u6587\u4ef6\u5728\u5b58\u50a8\u5f15\u64ce\u5b58\u5728\u3001\u4f46\u4e0d\u5728\u672c\u5730\u78c1\u76d8\u4e2d\uff0c\u5219\u81ea\u52a8\u628a\u6a21\u578b\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8\u3002 \u6b64\u914d\u7f6e\u4e0d\u5f71\u54cd /model/store \u548c /model/restore \u3002","title":"enable_model_store"},{"location":"zh/fate_flow_model_registry/#model_store_address","text":"\u6b64\u914d\u7f6e\u5b9a\u4e49\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u3002","title":"model_store_address"},{"location":"zh/fate_flow_model_registry/#_5","text":"storage : tencent_cos # \u8bf7\u4ece\u817e\u8baf\u4e91\u63a7\u5236\u53f0\u83b7\u53d6\u4e0b\u5217\u914d\u7f6e Region : SecretId : SecretKey : Bucket :","title":"\u817e\u8baf\u4e91\u5bf9\u8c61\u5b58\u50a8"},{"location":"zh/fate_flow_model_registry/#mysql","text":"storage : mysql database : fate_model user : fate password : fate host : 127.0.0.1 port : 3306 # \u53ef\u9009\u7684\u6570\u636e\u5e93\u8fde\u63a5\u53c2\u6570 max_connections : 10 stale_timeout : 10","title":"MySQL"},{"location":"zh/fate_flow_model_registry/#redis","text":"storage : redis host : 127.0.0.1 port : 6379 db : 0 password : # key \u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2\u3002\u9ed8\u8ba4 None\uff0c\u6ca1\u6709\u8d85\u65f6\u65f6\u95f4\u3002 ex :","title":"Redis"},{"location":"zh/fate_flow_monitoring/","text":"\u4f5c\u4e1a\u5b9e\u65f6\u76d1\u6d4b \u00b6 1. \u8bf4\u660e \u00b6 \u4e3b\u8981\u4ecb\u7ecd FATE Flow \u5bf9\u4f5c\u4e1a\u8fd0\u884c\u72b6\u6001\u3001Worker\u6267\u884c\u72b6\u6001\u7b49\uff0c\u8fdb\u884c\u5b9e\u65f6\u76d1\u6d4b\uff0c\u4ee5\u4fdd\u8bc1\u6700\u7ec8\u4e00\u81f4\u6027","title":"\u4f5c\u4e1a\u5b9e\u65f6\u76d1\u6d4b"},{"location":"zh/fate_flow_monitoring/#_1","text":"","title":"\u4f5c\u4e1a\u5b9e\u65f6\u76d1\u6d4b"},{"location":"zh/fate_flow_monitoring/#1","text":"\u4e3b\u8981\u4ecb\u7ecd FATE Flow \u5bf9\u4f5c\u4e1a\u8fd0\u884c\u72b6\u6001\u3001Worker\u6267\u884c\u72b6\u6001\u7b49\uff0c\u8fdb\u884c\u5b9e\u65f6\u76d1\u6d4b\uff0c\u4ee5\u4fdd\u8bc1\u6700\u7ec8\u4e00\u81f4\u6027","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_permission_management/","text":"\u591a\u65b9\u5408\u4f5c\u6743\u9650\u7ba1\u7406 \u00b6 1. \u8bf4\u660e \u00b6 fateflow\u6743\u9650\u8ba4\u8bc1\u652f\u6301flow\u81ea\u8eab\u9274\u6743\u548c\u7b2c\u4e09\u65b9\u9274\u6743\u4e24\u79cd\u65b9\u5f0f \u9274\u6743\u914d\u7f6e: $FATE_BASE/conf/service_conf.yaml \uff1a hook_module : permission : fate_flow.hook.flow.permission hook_server_name : permission : switch : false component : false dataset : false \u5176\u4e2d\uff0c\u6743\u9650\u94a9\u5b50\u652f\u6301\"fate_flow.hook.flow.permission\"\u548c\"fate_flow.hook.api.permission\"\u4e24\u79cd 2. \u6743\u9650\u8ba4\u8bc1 \u00b6 2.1 flow\u6743\u9650\u8ba4\u8bc1 \u00b6 2.1.1 \u8ba4\u8bc1\u65b9\u6848 \u00b6 flow\u6743\u9650\u8ba4\u8bc1\u65b9\u6848\u4f7f\u7528casbin\u6743\u9650\u63a7\u5236\u6846\u67b6\uff0c\u652f\u6301\u7ec4\u4ef6\u548c\u6570\u636e\u96c6\u4e24\u79cd\u6743\u9650\u3002 \u914d\u7f6e\u5982\u4e0b\uff1a hook_module : permission : fate_flow.hook.flow.permission permission : switch : true component : true dataset : true 2.1.2 \u6388\u6743 \u00b6 \u6dfb\u52a0\u6743\u9650 flow privilege grant -c fateflow/examples/permission/grant.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.1.3 \u540a\u9500\u6743\u9650 \u00b6 \u5220\u9664\u6743\u9650 flow privilege delete -c fateflow/examples/permission/delete.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868\uff0c \"*\"\u4e3a\u6240\u6709\u6570\u636e\u96c6 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.1.4 \u6743\u9650\u67e5\u8be2 \u00b6 \u67e5\u8be2\u6743\u9650 flow privilege query -p 10000 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.2 \u7b2c\u4e09\u65b9\u63a5\u53e3\u6743\u9650\u8ba4\u8bc1 \u00b6 \u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5411flow\u6743\u9650\u8ba4\u8bc1\u63a5\u53e3\uff0c\u5177\u4f53\u53c2\u8003 \u6743\u9650\u8ba4\u8bc1\u670d\u52a1\u6ce8\u518c \u82e5\u8ba4\u8bc1\u5931\u8d25\uff0cflow\u4f1a\u76f4\u63a5\u8fd4\u56de\u8ba4\u8bc1\u5931\u8d25\u7ed9\u5408\u4f5c\u65b9\u3002","title":"\u591a\u65b9\u5408\u4f5c\u6743\u9650\u7ba1\u7406"},{"location":"zh/fate_flow_permission_management/#_1","text":"","title":"\u591a\u65b9\u5408\u4f5c\u6743\u9650\u7ba1\u7406"},{"location":"zh/fate_flow_permission_management/#1","text":"fateflow\u6743\u9650\u8ba4\u8bc1\u652f\u6301flow\u81ea\u8eab\u9274\u6743\u548c\u7b2c\u4e09\u65b9\u9274\u6743\u4e24\u79cd\u65b9\u5f0f \u9274\u6743\u914d\u7f6e: $FATE_BASE/conf/service_conf.yaml \uff1a hook_module : permission : fate_flow.hook.flow.permission hook_server_name : permission : switch : false component : false dataset : false \u5176\u4e2d\uff0c\u6743\u9650\u94a9\u5b50\u652f\u6301\"fate_flow.hook.flow.permission\"\u548c\"fate_flow.hook.api.permission\"\u4e24\u79cd","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_permission_management/#2","text":"","title":"2. \u6743\u9650\u8ba4\u8bc1"},{"location":"zh/fate_flow_permission_management/#21-flow","text":"","title":"2.1 flow\u6743\u9650\u8ba4\u8bc1"},{"location":"zh/fate_flow_permission_management/#211","text":"flow\u6743\u9650\u8ba4\u8bc1\u65b9\u6848\u4f7f\u7528casbin\u6743\u9650\u63a7\u5236\u6846\u67b6\uff0c\u652f\u6301\u7ec4\u4ef6\u548c\u6570\u636e\u96c6\u4e24\u79cd\u6743\u9650\u3002 \u914d\u7f6e\u5982\u4e0b\uff1a hook_module : permission : fate_flow.hook.flow.permission permission : switch : true component : true dataset : true","title":"2.1.1 \u8ba4\u8bc1\u65b9\u6848"},{"location":"zh/fate_flow_permission_management/#212","text":"\u6dfb\u52a0\u6743\u9650 flow privilege grant -c fateflow/examples/permission/grant.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1.2 \u6388\u6743"},{"location":"zh/fate_flow_permission_management/#213","text":"\u5220\u9664\u6743\u9650 flow privilege delete -c fateflow/examples/permission/delete.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868\uff0c \"*\"\u4e3a\u6240\u6709\u6570\u636e\u96c6 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1.3 \u540a\u9500\u6743\u9650"},{"location":"zh/fate_flow_permission_management/#214","text":"\u67e5\u8be2\u6743\u9650 flow privilege query -p 10000 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1.4 \u6743\u9650\u67e5\u8be2"},{"location":"zh/fate_flow_permission_management/#22","text":"\u7b2c\u4e09\u65b9\u670d\u52a1\u9700\u8981\u5411flow\u6743\u9650\u8ba4\u8bc1\u63a5\u53e3\uff0c\u5177\u4f53\u53c2\u8003 \u6743\u9650\u8ba4\u8bc1\u670d\u52a1\u6ce8\u518c \u82e5\u8ba4\u8bc1\u5931\u8d25\uff0cflow\u4f1a\u76f4\u63a5\u8fd4\u56de\u8ba4\u8bc1\u5931\u8d25\u7ed9\u5408\u4f5c\u65b9\u3002","title":"2.2 \u7b2c\u4e09\u65b9\u63a5\u53e3\u6743\u9650\u8ba4\u8bc1"},{"location":"zh/fate_flow_resource_management/","text":"\u591a\u65b9\u8d44\u6e90\u534f\u8c03 \u00b6 1. \u8bf4\u660e \u00b6 \u8d44\u6e90\u6307\u57fa\u7840\u5f15\u64ce\u8d44\u6e90\uff0c\u4e3b\u8981\u6307\u8ba1\u7b97\u5f15\u64ce\u7684CPU\u8d44\u6e90\u548c\u5185\u5b58\u8d44\u6e90\uff0c\u4f20\u8f93\u5f15\u64ce\u7684CPU\u8d44\u6e90\u548c\u7f51\u7edc\u8d44\u6e90\uff0c\u76ee\u524d\u4ec5\u652f\u6301\u8ba1\u7b97\u5f15\u64ceCPU\u8d44\u6e90\u7684\u7ba1\u7406 2. \u603b\u8d44\u6e90\u914d\u7f6e \u00b6 \u5f53\u524d\u7248\u672c\u672a\u5b9e\u73b0\u81ea\u52a8\u83b7\u53d6\u57fa\u7840\u5f15\u64ce\u7684\u8d44\u6e90\u5927\u5c0f\uff0c\u56e0\u6b64\u4f60\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6 $FATE_PROJECT_BASE/conf/service_conf.yaml \u8fdb\u884c\u914d\u7f6e\uff0c\u4e5f\u5373\u5f53\u524d\u5f15\u64ce\u5206\u914d\u7ed9FATE\u96c6\u7fa4\u7684\u8d44\u6e90\u5927\u5c0f FATE Flow Server \u542f\u52a8\u65f6\u4ece\u914d\u7f6e\u6587\u4ef6\u83b7\u53d6\u6240\u6709\u57fa\u7840\u5f15\u64ce\u4fe1\u606f\u5e76\u6ce8\u518c\u5230\u6570\u636e\u5e93\u8868 t_engine_registry FATE Flow Server \u5df2\u7ecf\u542f\u52a8\uff0c\u4fee\u6539\u8d44\u6e90\u914d\u7f6e\uff0c\u53ef\u91cd\u542f FATE Flow Server \uff0c\u4e5f\u53ef\u4f7f\u7528\u547d\u4ee4\uff1a flow server reload \uff0c\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e total_cores = nodes * cores_per_node \u6837\u4f8b fate_on_standalone\uff1a\u662f\u4e3a\u6267\u884c\u5728 FATE Flow Server \u540c\u53f0\u673a\u5668\u7684\u5355\u673a\u5f15\u64ce\uff0c\u4e00\u822c\u7528\u4e8e\u5feb\u901f\u5b9e\u9a8c\uff0c nodes \u4e00\u822c\u8bbe\u7f6e\u4e3a1\uff0c cores_per_node \u4e00\u822c\u4e3a\u673a\u5668CPU\u6838\u6570\uff0c\u4e5f\u53ef\u9002\u91cf\u8d85\u914d fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll\uff1a\u4f9d\u636e EggRoll \u96c6\u7fa4\u5b9e\u9645\u90e8\u7f72\u60c5\u51b5\u8fdb\u884c\u914d\u7f6e\uff0c nodes \u8868\u793a node manager \u7684\u673a\u5668\u6570\u91cf\uff0c cores_per_node \u8868\u793a\u5e73\u5747\u6bcf\u53f0 node manager \u673a\u5668CPU\u6838\u6570 fate_on_eggroll : clustermanager : cores_per_node : 16 nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark\uff1a\u4f9d\u636e\u5728 Spark \u96c6\u7fa4\u4e2d\u914d\u7f6e\u7ed9 FATE \u96c6\u7fa4\u7684\u8d44\u6e90\u8fdb\u884c\u914d\u7f6e\uff0c nodes \u8868\u793a Spark \u8282\u70b9\u6570\u91cf\uff0c cores_per_node \u8868\u793a\u5e73\u5747\u6bcf\u4e2a\u8282\u70b9\u5206\u914d\u7ed9 FATE \u96c6\u7fa4\u7684CPU\u6838\u6570 fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 \u6ce8\u610f\uff1a\u8bf7\u52a1\u5fc5\u786e\u4fdd\u5728 Spark \u96c6\u7fa4\u5206\u914d\u4e86\u5bf9\u5e94\u6570\u91cf\u7684\u8d44\u6e90\u4e8e FATE \u96c6\u7fa4\uff0c\u82e5 Spark \u96c6\u7fa4\u5206\u914d\u8d44\u6e90\u5c11\u4e8e\u6b64\u5904 FATE \u6240\u914d\u7f6e\u7684\u8d44\u6e90\uff0c\u90a3\u4e48\u4f1a\u51fa\u73b0\u53ef\u4ee5\u63d0\u4ea4 FATE \u4f5c\u4e1a\uff0c\u4f46\u662f FATE Flow \u5c06\u4efb\u52a1\u63d0\u4ea4\u81f3 Spark \u96c6\u7fa4\u65f6\uff0c\u7531\u4e8e Spark \u96c6\u7fa4\u8d44\u6e90\u4e0d\u8db3\uff0c\u4efb\u52a1\u5b9e\u9645\u4e0d\u6267\u884c 3. \u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u914d\u7f6e \u00b6 \u6211\u4eec\u4e00\u822c\u4f7f\u7528 task_cores \u548c task_parallelism \u8fdb\u884c\u914d\u7f6e\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\uff0c\u5982\uff1a { \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } } \u4f5c\u4e1a\u7533\u8bf7\u7684\u603b\u8d44\u6e90\u4e3a task_cores * task_parallelism \uff0c\u521b\u5efa\u4f5c\u4e1a\u65f6\uff0c FATE Flow \u5206\u53d1\u4f5c\u4e1a\u5230\u5404 party \u65f6\u4f1a\u4f9d\u636e\u4e0a\u8ff0\u914d\u7f6e\u3001\u8fd0\u884c\u89d2\u8272\u3001\u672c\u65b9\u4f7f\u7528\u5f15\u64ce(\u901a\u8fc7 $FATE_PROJECT_BASE/conf/service_conf.yaml#default_engines )\uff0c\u9002\u914d\u8ba1\u7b97\u51fa\u5b9e\u9645\u53c2\u6570\uff0c\u5982\u4e0b 4. \u8d44\u6e90\u7533\u8bf7\u5b9e\u9645\u53c2\u6570\u9002\u914d\u8ba1\u7b97\u8fc7\u7a0b \u00b6 \u8ba1\u7b97 request_task_cores : guest\u3001host\uff1a request_task_cores = task_cores arbiter\uff0c\u8003\u8651\u5b9e\u9645\u8fd0\u884c\u8017\u8d39\u6781\u5c11\u8d44\u6e90\uff1a request_task_cores = 1 \u8fdb\u4e00\u6b65\u8ba1\u7b97 task_cores_per_node \uff1a task_cores_per_node\" = max(1, request_task_cores / task_nodes ) \u82e5\u5728\u4e0a\u8ff0 job_parameters \u4f7f\u7528\u4e86 eggroll_run \u6216 spark_run \u914d\u7f6e\u8d44\u6e90\u65f6\uff0c\u5219 task_cores \u914d\u7f6e\u65e0\u6548\uff1b\u8ba1\u7b97 task_cores_per_node \uff1a task_cores_per_node\" = eggroll_run[\u201ceggroll.session.processors.per.node\u201d] task_cores_per_node\" = spark_run[\"executor-cores\"] \u8f6c\u6362\u4e3a\u9002\u914d\u5f15\u64ce\u7684\u53c2\u6570(\u8be5\u53c2\u6570\u4f1a\u5728\u8fd0\u884c\u4efb\u52a1\u65f6\uff0c\u63d0\u4ea4\u5230\u8ba1\u7b97\u5f15\u64ce\u8bc6\u522b)\uff1a fate_on_standalone/fate_on_eggroll: eggroll_run[\"eggroll.session.processors.per.node\"] = task_cores_per_node fate_on_spark: spark_run[\"num-executors\"] = task_nodes spark_run[\"executor-cores\"] = task_cores_per_node \u6700\u7ec8\u8ba1\u7b97\u7ed3\u679c\u53ef\u4ee5\u67e5\u770bjob\u7684 job_runtime_conf_on_party.json \uff0c\u4e00\u822c\u5728 $FATE_PROJECT_BASE/jobs/$job_id/$role/$party_id/job_runtime_on_party_conf.json 5. \u8d44\u6e90\u8c03\u5ea6\u7b56\u7565 \u00b6 total_cores \u89c1\u4e0a\u8ff0 \u603b\u8d44\u6e90\u914d\u7f6e apply_cores \u89c1\u4e0a\u8ff0 \u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u914d\u7f6e \uff0c apply_cores = task_nodes * task_cores_per_node * task_parallelism \u82e5\u6240\u6709\u53c2\u4e0e\u65b9\u5747\u7533\u8bf7\u8d44\u6e90\u6210\u529f(total_cores - apply_cores) > 0\uff0c\u5219\u8be5\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u6210\u529f \u82e5\u975e\u6240\u6709\u53c2\u4e0e\u65b9\u5747\u7533\u8bf7\u8d44\u6e90\u6210\u529f\uff0c\u5219\u53d1\u9001\u8d44\u6e90\u56de\u6eda\u6307\u4ee4\u5230\u5df2\u7533\u8bf7\u6210\u529f\u7684\u53c2\u4e0e\u65b9\uff0c\u8be5\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u5931\u8d25 6. \u76f8\u5173\u547d\u4ee4 \u00b6 query \u00b6 \u7528\u4e8e\u67e5\u8be2fate\u7cfb\u7edf\u8d44\u6e90 flow resource query \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } return \u00b6 \u7528\u4e8e\u5f52\u8fd8\u67d0\u4e2ajob\u7684\u8d44\u6e90 flow resource return [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e job_id \u662f string \u4efb\u52a1id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"\u591a\u65b9\u8d44\u6e90\u534f\u8c03"},{"location":"zh/fate_flow_resource_management/#_1","text":"","title":"\u591a\u65b9\u8d44\u6e90\u534f\u8c03"},{"location":"zh/fate_flow_resource_management/#1","text":"\u8d44\u6e90\u6307\u57fa\u7840\u5f15\u64ce\u8d44\u6e90\uff0c\u4e3b\u8981\u6307\u8ba1\u7b97\u5f15\u64ce\u7684CPU\u8d44\u6e90\u548c\u5185\u5b58\u8d44\u6e90\uff0c\u4f20\u8f93\u5f15\u64ce\u7684CPU\u8d44\u6e90\u548c\u7f51\u7edc\u8d44\u6e90\uff0c\u76ee\u524d\u4ec5\u652f\u6301\u8ba1\u7b97\u5f15\u64ceCPU\u8d44\u6e90\u7684\u7ba1\u7406","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_resource_management/#2","text":"\u5f53\u524d\u7248\u672c\u672a\u5b9e\u73b0\u81ea\u52a8\u83b7\u53d6\u57fa\u7840\u5f15\u64ce\u7684\u8d44\u6e90\u5927\u5c0f\uff0c\u56e0\u6b64\u4f60\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6 $FATE_PROJECT_BASE/conf/service_conf.yaml \u8fdb\u884c\u914d\u7f6e\uff0c\u4e5f\u5373\u5f53\u524d\u5f15\u64ce\u5206\u914d\u7ed9FATE\u96c6\u7fa4\u7684\u8d44\u6e90\u5927\u5c0f FATE Flow Server \u542f\u52a8\u65f6\u4ece\u914d\u7f6e\u6587\u4ef6\u83b7\u53d6\u6240\u6709\u57fa\u7840\u5f15\u64ce\u4fe1\u606f\u5e76\u6ce8\u518c\u5230\u6570\u636e\u5e93\u8868 t_engine_registry FATE Flow Server \u5df2\u7ecf\u542f\u52a8\uff0c\u4fee\u6539\u8d44\u6e90\u914d\u7f6e\uff0c\u53ef\u91cd\u542f FATE Flow Server \uff0c\u4e5f\u53ef\u4f7f\u7528\u547d\u4ee4\uff1a flow server reload \uff0c\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e total_cores = nodes * cores_per_node \u6837\u4f8b fate_on_standalone\uff1a\u662f\u4e3a\u6267\u884c\u5728 FATE Flow Server \u540c\u53f0\u673a\u5668\u7684\u5355\u673a\u5f15\u64ce\uff0c\u4e00\u822c\u7528\u4e8e\u5feb\u901f\u5b9e\u9a8c\uff0c nodes \u4e00\u822c\u8bbe\u7f6e\u4e3a1\uff0c cores_per_node \u4e00\u822c\u4e3a\u673a\u5668CPU\u6838\u6570\uff0c\u4e5f\u53ef\u9002\u91cf\u8d85\u914d fate_on_standalone : standalone : cores_per_node : 20 nodes : 1 fate_on_eggroll\uff1a\u4f9d\u636e EggRoll \u96c6\u7fa4\u5b9e\u9645\u90e8\u7f72\u60c5\u51b5\u8fdb\u884c\u914d\u7f6e\uff0c nodes \u8868\u793a node manager \u7684\u673a\u5668\u6570\u91cf\uff0c cores_per_node \u8868\u793a\u5e73\u5747\u6bcf\u53f0 node manager \u673a\u5668CPU\u6838\u6570 fate_on_eggroll : clustermanager : cores_per_node : 16 nodes : 1 rollsite : host : 127.0.0.1 port : 9370 fate_on_spark\uff1a\u4f9d\u636e\u5728 Spark \u96c6\u7fa4\u4e2d\u914d\u7f6e\u7ed9 FATE \u96c6\u7fa4\u7684\u8d44\u6e90\u8fdb\u884c\u914d\u7f6e\uff0c nodes \u8868\u793a Spark \u8282\u70b9\u6570\u91cf\uff0c cores_per_node \u8868\u793a\u5e73\u5747\u6bcf\u4e2a\u8282\u70b9\u5206\u914d\u7ed9 FATE \u96c6\u7fa4\u7684CPU\u6838\u6570 fate_on_spark : spark : # default use SPARK_HOME environment variable home : cores_per_node : 20 nodes : 2 \u6ce8\u610f\uff1a\u8bf7\u52a1\u5fc5\u786e\u4fdd\u5728 Spark \u96c6\u7fa4\u5206\u914d\u4e86\u5bf9\u5e94\u6570\u91cf\u7684\u8d44\u6e90\u4e8e FATE \u96c6\u7fa4\uff0c\u82e5 Spark \u96c6\u7fa4\u5206\u914d\u8d44\u6e90\u5c11\u4e8e\u6b64\u5904 FATE \u6240\u914d\u7f6e\u7684\u8d44\u6e90\uff0c\u90a3\u4e48\u4f1a\u51fa\u73b0\u53ef\u4ee5\u63d0\u4ea4 FATE \u4f5c\u4e1a\uff0c\u4f46\u662f FATE Flow \u5c06\u4efb\u52a1\u63d0\u4ea4\u81f3 Spark \u96c6\u7fa4\u65f6\uff0c\u7531\u4e8e Spark \u96c6\u7fa4\u8d44\u6e90\u4e0d\u8db3\uff0c\u4efb\u52a1\u5b9e\u9645\u4e0d\u6267\u884c","title":"2. \u603b\u8d44\u6e90\u914d\u7f6e"},{"location":"zh/fate_flow_resource_management/#3","text":"\u6211\u4eec\u4e00\u822c\u4f7f\u7528 task_cores \u548c task_parallelism \u8fdb\u884c\u914d\u7f6e\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\uff0c\u5982\uff1a { \"job_parameters\" : { \"common\" : { \"job_type\" : \"train\" , \"task_cores\" : 6 , \"task_parallelism\" : 2 , \"computing_partitions\" : 8 , \"timeout\" : 36000 } } } \u4f5c\u4e1a\u7533\u8bf7\u7684\u603b\u8d44\u6e90\u4e3a task_cores * task_parallelism \uff0c\u521b\u5efa\u4f5c\u4e1a\u65f6\uff0c FATE Flow \u5206\u53d1\u4f5c\u4e1a\u5230\u5404 party \u65f6\u4f1a\u4f9d\u636e\u4e0a\u8ff0\u914d\u7f6e\u3001\u8fd0\u884c\u89d2\u8272\u3001\u672c\u65b9\u4f7f\u7528\u5f15\u64ce(\u901a\u8fc7 $FATE_PROJECT_BASE/conf/service_conf.yaml#default_engines )\uff0c\u9002\u914d\u8ba1\u7b97\u51fa\u5b9e\u9645\u53c2\u6570\uff0c\u5982\u4e0b","title":"3. \u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u914d\u7f6e"},{"location":"zh/fate_flow_resource_management/#4","text":"\u8ba1\u7b97 request_task_cores : guest\u3001host\uff1a request_task_cores = task_cores arbiter\uff0c\u8003\u8651\u5b9e\u9645\u8fd0\u884c\u8017\u8d39\u6781\u5c11\u8d44\u6e90\uff1a request_task_cores = 1 \u8fdb\u4e00\u6b65\u8ba1\u7b97 task_cores_per_node \uff1a task_cores_per_node\" = max(1, request_task_cores / task_nodes ) \u82e5\u5728\u4e0a\u8ff0 job_parameters \u4f7f\u7528\u4e86 eggroll_run \u6216 spark_run \u914d\u7f6e\u8d44\u6e90\u65f6\uff0c\u5219 task_cores \u914d\u7f6e\u65e0\u6548\uff1b\u8ba1\u7b97 task_cores_per_node \uff1a task_cores_per_node\" = eggroll_run[\u201ceggroll.session.processors.per.node\u201d] task_cores_per_node\" = spark_run[\"executor-cores\"] \u8f6c\u6362\u4e3a\u9002\u914d\u5f15\u64ce\u7684\u53c2\u6570(\u8be5\u53c2\u6570\u4f1a\u5728\u8fd0\u884c\u4efb\u52a1\u65f6\uff0c\u63d0\u4ea4\u5230\u8ba1\u7b97\u5f15\u64ce\u8bc6\u522b)\uff1a fate_on_standalone/fate_on_eggroll: eggroll_run[\"eggroll.session.processors.per.node\"] = task_cores_per_node fate_on_spark: spark_run[\"num-executors\"] = task_nodes spark_run[\"executor-cores\"] = task_cores_per_node \u6700\u7ec8\u8ba1\u7b97\u7ed3\u679c\u53ef\u4ee5\u67e5\u770bjob\u7684 job_runtime_conf_on_party.json \uff0c\u4e00\u822c\u5728 $FATE_PROJECT_BASE/jobs/$job_id/$role/$party_id/job_runtime_on_party_conf.json","title":"4. \u8d44\u6e90\u7533\u8bf7\u5b9e\u9645\u53c2\u6570\u9002\u914d\u8ba1\u7b97\u8fc7\u7a0b"},{"location":"zh/fate_flow_resource_management/#5","text":"total_cores \u89c1\u4e0a\u8ff0 \u603b\u8d44\u6e90\u914d\u7f6e apply_cores \u89c1\u4e0a\u8ff0 \u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u914d\u7f6e \uff0c apply_cores = task_nodes * task_cores_per_node * task_parallelism \u82e5\u6240\u6709\u53c2\u4e0e\u65b9\u5747\u7533\u8bf7\u8d44\u6e90\u6210\u529f(total_cores - apply_cores) > 0\uff0c\u5219\u8be5\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u6210\u529f \u82e5\u975e\u6240\u6709\u53c2\u4e0e\u65b9\u5747\u7533\u8bf7\u8d44\u6e90\u6210\u529f\uff0c\u5219\u53d1\u9001\u8d44\u6e90\u56de\u6eda\u6307\u4ee4\u5230\u5df2\u7533\u8bf7\u6210\u529f\u7684\u53c2\u4e0e\u65b9\uff0c\u8be5\u4f5c\u4e1a\u7533\u8bf7\u8d44\u6e90\u5931\u8d25","title":"5. \u8d44\u6e90\u8c03\u5ea6\u7b56\u7565"},{"location":"zh/fate_flow_resource_management/#6","text":"","title":"6. \u76f8\u5173\u547d\u4ee4"},{"location":"zh/fate_flow_resource_management/#query","text":"\u7528\u4e8e\u67e5\u8be2fate\u7cfb\u7edf\u8d44\u6e90 flow resource query \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"zh/fate_flow_resource_management/#return","text":"\u7528\u4e8e\u5f52\u8fd8\u67d0\u4e2ajob\u7684\u8d44\u6e90 flow resource return [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e job_id \u662f string \u4efb\u52a1id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"return"},{"location":"zh/fate_flow_server_operation/","text":"\u670d\u52a1\u7aef\u64cd\u4f5c \u00b6 1. \u8bf4\u660e \u00b6 \u4ece 1.7.0 \u7248\u672c\u5f00\u59cb, \u63d0\u4f9b FATE Flow Server \u7684\u4e00\u4e9b\u66f4\u65b0\u7ef4\u62a4\u529f\u80fd, \u540e\u7eed\u7248\u672c\u4f1a\u8fdb\u4e00\u6b65\u589e\u5f3a 2. \u67e5\u770b\u7248\u672c\u4fe1\u606f \u00b6 \u5217\u51fa\u6240\u6709\u76f8\u5173\u7cfb\u7edf\u7248\u672c\u53f7 flow server versions \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server versions \u8f93\u51fa: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 \u00b6 \u5982\u4e0b\u914d\u7f6e\u9879\u5728 reload \u540e\u4f1a\u91cd\u65b0\u751f\u6548 $FATE_PROJECT_BASE/conf/service_conf.yaml\u4e2d# engine services\u540e\u7684\u6240\u6709\u914d\u7f6e $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml\u4e2d\u6240\u6709\u914d\u7f6e flow server reload \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server reload \u8f93\u51fa: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"\u670d\u52a1\u7aef\u64cd\u4f5c"},{"location":"zh/fate_flow_server_operation/#_1","text":"","title":"\u670d\u52a1\u7aef\u64cd\u4f5c"},{"location":"zh/fate_flow_server_operation/#1","text":"\u4ece 1.7.0 \u7248\u672c\u5f00\u59cb, \u63d0\u4f9b FATE Flow Server \u7684\u4e00\u4e9b\u66f4\u65b0\u7ef4\u62a4\u529f\u80fd, \u540e\u7eed\u7248\u672c\u4f1a\u8fdb\u4e00\u6b65\u589e\u5f3a","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_server_operation/#2","text":"\u5217\u51fa\u6240\u6709\u76f8\u5173\u7cfb\u7edf\u7248\u672c\u53f7 flow server versions \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server versions \u8f93\u51fa: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2. \u67e5\u770b\u7248\u672c\u4fe1\u606f"},{"location":"zh/fate_flow_server_operation/#3","text":"\u5982\u4e0b\u914d\u7f6e\u9879\u5728 reload \u540e\u4f1a\u91cd\u65b0\u751f\u6548 $FATE_PROJECT_BASE/conf/service_conf.yaml\u4e2d# engine services\u540e\u7684\u6240\u6709\u914d\u7f6e $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml\u4e2d\u6240\u6709\u914d\u7f6e flow server reload \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server reload \u8f93\u51fa: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3. \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6"},{"location":"zh/fate_flow_service_registry/","text":"\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3 \u00b6 1. \u8bf4\u660e \u00b6 1.1 \u6a21\u578b\u6ce8\u518c \u00b6 FATE-Flow \u901a\u8fc7 Apache ZooKeeper \u4e0e FATE-Serving \u4ea4\u4e92\uff0c\u5982\u679c\u5728\u914d\u7f6e\u4e2d\u542f\u7528\u4e86 use_registry \uff0c\u5219 Flow \u5728\u542f\u52a8\u65f6\u4f1a\u5411 ZooKeeper \u6ce8\u518c\u6a21\u578b\u7684\u4e0b\u8f7d URL\uff0cServing \u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b URL \u83b7\u53d6\u6a21\u578b\u3002 \u540c\u6837\uff0cServing \u4e5f\u4f1a\u5411 ZooKeeper \u6ce8\u518c\u5176\u81ea\u8eab\u7684\u5730\u5740\uff0cFlow \u4f1a\u83b7\u53d6\u8be5\u5730\u5740\u4ee5\u4e0e\u4e4b\u901a\u4fe1\u3002 \u5982\u679c\u6ca1\u6709\u542f\u7528 use_registry \uff0cFlow \u5219\u4f1a\u5c1d\u8bd5\u4e0e\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e servings \u5730\u5740\u901a\u4fe1\u3002 1.2 \u9ad8\u53ef\u7528 \u00b6 FATE-Flow \u901a\u8fc7\u5411 Apache ZooKeeper \u6ce8\u518c\u81ea\u8eab\u7684 IP \u548c\u7aef\u53e3\u5b9e\u73b0\u540c\u4e00 party \u5185\u591a\u8282\u70b9\u7684\u81ea\u52a8\u53d1\u73b0\u3002 2. \u914d\u7f6e ZooKeeper \u670d\u52a1 \u00b6 zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate 3. ZNode \u00b6 FATE-Flow \u6a21\u578b\u6ce8\u518c: /FATE-SERVICES/flow/online/transfer/providers FATE-Flow \u9ad8\u53ef\u7528: /FATE-COMPONENTS/fate-flow FATE-Serving: /FATE-SERVICES/serving/online/publishLoad/providers","title":"\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/fate_flow_service_registry/#_1","text":"","title":"\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/fate_flow_service_registry/#1","text":"","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_service_registry/#11","text":"FATE-Flow \u901a\u8fc7 Apache ZooKeeper \u4e0e FATE-Serving \u4ea4\u4e92\uff0c\u5982\u679c\u5728\u914d\u7f6e\u4e2d\u542f\u7528\u4e86 use_registry \uff0c\u5219 Flow \u5728\u542f\u52a8\u65f6\u4f1a\u5411 ZooKeeper \u6ce8\u518c\u6a21\u578b\u7684\u4e0b\u8f7d URL\uff0cServing \u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b URL \u83b7\u53d6\u6a21\u578b\u3002 \u540c\u6837\uff0cServing \u4e5f\u4f1a\u5411 ZooKeeper \u6ce8\u518c\u5176\u81ea\u8eab\u7684\u5730\u5740\uff0cFlow \u4f1a\u83b7\u53d6\u8be5\u5730\u5740\u4ee5\u4e0e\u4e4b\u901a\u4fe1\u3002 \u5982\u679c\u6ca1\u6709\u542f\u7528 use_registry \uff0cFlow \u5219\u4f1a\u5c1d\u8bd5\u4e0e\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u8bbe\u7f6e servings \u5730\u5740\u901a\u4fe1\u3002","title":"1.1 \u6a21\u578b\u6ce8\u518c"},{"location":"zh/fate_flow_service_registry/#12","text":"FATE-Flow \u901a\u8fc7\u5411 Apache ZooKeeper \u6ce8\u518c\u81ea\u8eab\u7684 IP \u548c\u7aef\u53e3\u5b9e\u73b0\u540c\u4e00 party \u5185\u591a\u8282\u70b9\u7684\u81ea\u52a8\u53d1\u73b0\u3002","title":"1.2 \u9ad8\u53ef\u7528"},{"location":"zh/fate_flow_service_registry/#2-zookeeper","text":"zookeeper : hosts : - 127.0.0.1:2181 use_acl : false user : fate password : fate","title":"2. \u914d\u7f6e ZooKeeper \u670d\u52a1"},{"location":"zh/fate_flow_service_registry/#3-znode","text":"FATE-Flow \u6a21\u578b\u6ce8\u518c: /FATE-SERVICES/flow/online/transfer/providers FATE-Flow \u9ad8\u53ef\u7528: /FATE-COMPONENTS/fate-flow FATE-Serving: /FATE-SERVICES/serving/online/publishLoad/providers","title":"3. ZNode"},{"location":"zh/fate_flow_tracking/","text":"\u6570\u636e\u6d41\u52a8\u8ffd\u8e2a \u00b6 1. \u8bf4\u660e \u00b6 2. \u4efb\u52a1\u8f93\u51fa\u6307\u6807 \u00b6 2.1 \u6307\u6807\u5217\u8868 \u00b6 \u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u4ea7\u751f\u7684\u6240\u6709\u6307\u6807\u540d\u79f0\u5217\u8868 flow tracking metrics [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 2.2 \u6240\u6709\u6307\u6807 \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u4efb\u52a1\u7684\u6240\u6709\u8f93\u51fa\u6307\u6807 flow tracking metric-all [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa(\u7bc7\u5e45\u6709\u9650\uff0c\u4ec5\u663e\u793a\u90e8\u5206\u6307\u6807\u7684\u6570\u636e\u4e14\u6570\u7ec4\u578b\u6570\u636e\u4e2d\u95f4\u7701\u7565\u4e86\u4e00\u4e9b\u503c): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 3. \u4efb\u52a1\u8fd0\u884c\u53c2\u6570 \u00b6 \u63d0\u4ea4\u4f5c\u4e1a\u540e\uff0c\u7cfb\u7edf\u4f9d\u636ejob conf\u4e2d\u7684component_parameters\u7ed3\u5408\u7cfb\u7edf\u9ed8\u8ba4\u7ec4\u4ef6\u53c2\u6570\uff0c\u6700\u7ec8\u89e3\u6790\u5f97\u5230\u7684\u5b9e\u9645\u7ec4\u4ef6\u4efb\u52a1\u8fd0\u884c\u53c2\u6570 flow tracking parameters [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 4. \u4efb\u52a1\u8f93\u51fa\u6570\u636e \u00b6 4.1 \u4e0b\u8f7d\u8f93\u51fa\u6570\u636e \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u8f93\u51fa flow tracking output-data [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 -o, --output-path \u662f string \u8f93\u51fa\u6570\u636e\u7684\u5b58\u653e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o ./ \u8f93\u51fa: { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory\" } 4.2 \u83b7\u53d6\u8f93\u51fa\u6570\u636e\u5b58\u653e\u6570\u636e\u8868\u540d\u79f0 \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u8868\u540d flow tracking output-data-table [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } 5. \u4efb\u52a1\u8f93\u51fa\u6a21\u578b \u00b6 \u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u7684\u8f93\u51fa\u6a21\u578b flow tracking output-model [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 6. \u4efb\u52a1\u8f93\u51fa\u6458\u8981 \u00b6 \u6bcf\u4e2a\u7ec4\u4ef6\u5141\u8bb8\u8bbe\u7f6e\u4e00\u4e9b\u6458\u8981\u4fe1\u606f\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u5206\u6790 flow tracking get-summary [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" } 7. \u6570\u636e\u96c6\u4f7f\u7528\u8ffd\u8e2a \u00b6 \u8ffd\u8e2a\u6e90\u6570\u636e\u96c6\u53ca\u5176\u884d\u751f\u6570\u636e\u96c6\uff0c\u5982\u7ec4\u4ef6\u4efb\u52a1\u8f93\u51fa\u6570\u636e\u96c6 7.1 \u6e90\u8868\u67e5\u8be2 \u00b6 \u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u7236\u8868\u53ca\u6e90\u8868 flow table tracking-source [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero_lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } 7.2 \u7528\u8868\u4efb\u52a1\u67e5\u8be2 \u00b6 \u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u4f7f\u7528\u60c5\u51b5 flow table tracking-job [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"count\" : 2 , \"job\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" } 8. \u5f00\u53d1API \u00b6","title":"\u6570\u636e\u6d41\u52a8\u8ffd\u8e2a"},{"location":"zh/fate_flow_tracking/#_1","text":"","title":"\u6570\u636e\u6d41\u52a8\u8ffd\u8e2a"},{"location":"zh/fate_flow_tracking/#1","text":"","title":"1. \u8bf4\u660e"},{"location":"zh/fate_flow_tracking/#2","text":"","title":"2. \u4efb\u52a1\u8f93\u51fa\u6307\u6807"},{"location":"zh/fate_flow_tracking/#21","text":"\u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u4ea7\u751f\u7684\u6240\u6709\u6307\u6807\u540d\u79f0\u5217\u8868 flow tracking metrics [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.1 \u6307\u6807\u5217\u8868"},{"location":"zh/fate_flow_tracking/#22","text":"\u83b7\u53d6\u7ec4\u4ef6\u4efb\u52a1\u7684\u6240\u6709\u8f93\u51fa\u6307\u6807 flow tracking metric-all [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa(\u7bc7\u5e45\u6709\u9650\uff0c\u4ec5\u663e\u793a\u90e8\u5206\u6307\u6807\u7684\u6570\u636e\u4e14\u6570\u7ec4\u578b\u6570\u636e\u4e2d\u95f4\u7701\u7565\u4e86\u4e00\u4e9b\u503c): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"2.2 \u6240\u6709\u6307\u6807"},{"location":"zh/fate_flow_tracking/#3","text":"\u63d0\u4ea4\u4f5c\u4e1a\u540e\uff0c\u7cfb\u7edf\u4f9d\u636ejob conf\u4e2d\u7684component_parameters\u7ed3\u5408\u7cfb\u7edf\u9ed8\u8ba4\u7ec4\u4ef6\u53c2\u6570\uff0c\u6700\u7ec8\u89e3\u6790\u5f97\u5230\u7684\u5b9e\u9645\u7ec4\u4ef6\u4efb\u52a1\u8fd0\u884c\u53c2\u6570 flow tracking parameters [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"3. \u4efb\u52a1\u8fd0\u884c\u53c2\u6570"},{"location":"zh/fate_flow_tracking/#4","text":"","title":"4. \u4efb\u52a1\u8f93\u51fa\u6570\u636e"},{"location":"zh/fate_flow_tracking/#41","text":"\u83b7\u53d6\u7ec4\u4ef6\u8f93\u51fa flow tracking output-data [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 -o, --output-path \u662f string \u8f93\u51fa\u6570\u636e\u7684\u5b58\u653e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o ./ \u8f93\u51fa: { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory\" }","title":"4.1 \u4e0b\u8f7d\u8f93\u51fa\u6570\u636e"},{"location":"zh/fate_flow_tracking/#42","text":"\u83b7\u53d6\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u8868\u540d flow tracking output-data-table [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"4.2 \u83b7\u53d6\u8f93\u51fa\u6570\u636e\u5b58\u653e\u6570\u636e\u8868\u540d\u79f0"},{"location":"zh/fate_flow_tracking/#5","text":"\u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u7684\u8f93\u51fa\u6a21\u578b flow tracking output-model [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"5. \u4efb\u52a1\u8f93\u51fa\u6a21\u578b"},{"location":"zh/fate_flow_tracking/#6","text":"\u6bcf\u4e2a\u7ec4\u4ef6\u5141\u8bb8\u8bbe\u7f6e\u4e00\u4e9b\u6458\u8981\u4fe1\u606f\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u5206\u6790 flow tracking get-summary [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"6. \u4efb\u52a1\u8f93\u51fa\u6458\u8981"},{"location":"zh/fate_flow_tracking/#7","text":"\u8ffd\u8e2a\u6e90\u6570\u636e\u96c6\u53ca\u5176\u884d\u751f\u6570\u636e\u96c6\uff0c\u5982\u7ec4\u4ef6\u4efb\u52a1\u8f93\u51fa\u6570\u636e\u96c6","title":"7. \u6570\u636e\u96c6\u4f7f\u7528\u8ffd\u8e2a"},{"location":"zh/fate_flow_tracking/#71","text":"\u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u7236\u8868\u53ca\u6e90\u8868 flow table tracking-source [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero_lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"7.1 \u6e90\u8868\u67e5\u8be2"},{"location":"zh/fate_flow_tracking/#72","text":"\u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u4f7f\u7528\u60c5\u51b5 flow table tracking-job [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"count\" : 2 , \"job\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"7.2 \u7528\u8868\u4efb\u52a1\u67e5\u8be2"},{"location":"zh/fate_flow_tracking/#8-api","text":"","title":"8. \u5f00\u53d1API"},{"location":"zh/system_operational/","text":"\u7cfb\u7edf\u8fd0\u7ef4 \u00b6 1. \u8bf4\u660e \u00b6 2. \u65e5\u5fd7\u6e05\u7406 \u00b6 2.1 \u4f5c\u4e1a\u65e5\u5fd7(N=14\u5929) \u00b6 \u6240\u5728\u673a\u5668\uff1afate flow\u6240\u5728\u673a\u5668 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/fateflow/logs/ \u89c4\u5219\uff1a\u76ee\u5f55\u4ee5 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /fateflow/logs/20200417* 2.2 EggRoll Session\u65e5\u5fd7(N=14\u5929) \u00b6 \u6240\u5728\u673a\u5668\uff1aeggroll node\u8282\u70b9 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/logs/ \u89c4\u5219\uff1a\u76ee\u5f55\u4ee5 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/20200417* 2.3 fateflow \u7cfb\u7edf\u65e5\u5fd7(N=14\u5929) \u00b6 \u6240\u5728\u673a\u5668\uff1afate flow\u6240\u5728\u673a\u5668 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/logs/fate_flow/ \u89c4\u5219\uff1a\u65e5\u5fd7\u6587\u4ef6\u4ee5yyyy-dd-mm\u7ed3\u5c3e\uff0c\u6e05\u7406**N\u5929**\u524d\u7684\u6570\u636e \u5f52\u6863\uff1a\u65e5\u5fd7\u6587\u4ef6\u4ee5yyyy-dd-mm\u7ed3\u5c3e\uff0c\u5f52\u6863\u4fdd\u7559180\u5929\u7684\u65e5\u5fd7 \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /logs/fate_flow/fate_flow_stat.log.2020-12-15 2.4 EggRoll \u7cfb\u7edf\u65e5\u5fd7(N=14\u5929) \u00b6 \u6240\u5728\u673a\u5668\uff1aeggroll\u90e8\u7f72\u673a\u5668 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/logs/eggroll \u89c4\u5219\uff1a\u76ee\u5f55\u4e3ayyyy/mm/dd\uff0c\u6e05\u7406**N\u5929**\u524d\u7684\u6570\u636e \u5f52\u6863\uff1a\u76ee\u5f55\u4e3ayyyy/mm/dd\uff0c\u5f52\u6863\u4fdd\u7559180\u5929\u7684\u65e5\u5fd7 \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/2020/12/15/ 3. \u6570\u636e\u6e05\u7406 \u00b6 3.1 \u8ba1\u7b97\u4e34\u65f6\u6570\u636e(N=2\u5929) \u00b6 \u6240\u5728\u673a\u5668\uff1aeggroll node\u8282\u70b9 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/data/IN_MEMORY \u89c4\u5219\uff1anamespace\u4ee5 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/IN_MEMORY/20200417* 3.2 \u7ec4\u4ef6\u8f93\u51fa\u6570\u636e(N=14\u5929) \u00b6 \u6240\u5728\u673a\u5668\uff1aeggroll node\u8282\u70b9 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/data/LMDB \u89c4\u5219\uff1anamespace\u4ee5output_data_ jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/LMDB/output_data_20200417*","title":"\u7cfb\u7edf\u8fd0\u7ef4"},{"location":"zh/system_operational/#_1","text":"","title":"\u7cfb\u7edf\u8fd0\u7ef4"},{"location":"zh/system_operational/#1","text":"","title":"1. \u8bf4\u660e"},{"location":"zh/system_operational/#2","text":"","title":"2. \u65e5\u5fd7\u6e05\u7406"},{"location":"zh/system_operational/#21-n14","text":"\u6240\u5728\u673a\u5668\uff1afate flow\u6240\u5728\u673a\u5668 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/fateflow/logs/ \u89c4\u5219\uff1a\u76ee\u5f55\u4ee5 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /fateflow/logs/20200417*","title":"2.1 \u4f5c\u4e1a\u65e5\u5fd7(N=14\u5929)"},{"location":"zh/system_operational/#22-eggroll-sessionn14","text":"\u6240\u5728\u673a\u5668\uff1aeggroll node\u8282\u70b9 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/logs/ \u89c4\u5219\uff1a\u76ee\u5f55\u4ee5 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/20200417*","title":"2.2 EggRoll Session\u65e5\u5fd7(N=14\u5929)"},{"location":"zh/system_operational/#23-fateflow-n14","text":"\u6240\u5728\u673a\u5668\uff1afate flow\u6240\u5728\u673a\u5668 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/logs/fate_flow/ \u89c4\u5219\uff1a\u65e5\u5fd7\u6587\u4ef6\u4ee5yyyy-dd-mm\u7ed3\u5c3e\uff0c\u6e05\u7406**N\u5929**\u524d\u7684\u6570\u636e \u5f52\u6863\uff1a\u65e5\u5fd7\u6587\u4ef6\u4ee5yyyy-dd-mm\u7ed3\u5c3e\uff0c\u5f52\u6863\u4fdd\u7559180\u5929\u7684\u65e5\u5fd7 \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /logs/fate_flow/fate_flow_stat.log.2020-12-15","title":"2.3 fateflow \u7cfb\u7edf\u65e5\u5fd7(N=14\u5929)"},{"location":"zh/system_operational/#24-eggroll-n14","text":"\u6240\u5728\u673a\u5668\uff1aeggroll\u90e8\u7f72\u673a\u5668 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/logs/eggroll \u89c4\u5219\uff1a\u76ee\u5f55\u4e3ayyyy/mm/dd\uff0c\u6e05\u7406**N\u5929**\u524d\u7684\u6570\u636e \u5f52\u6863\uff1a\u76ee\u5f55\u4e3ayyyy/mm/dd\uff0c\u5f52\u6863\u4fdd\u7559180\u5929\u7684\u65e5\u5fd7 \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/logs/2020/12/15/","title":"2.4 EggRoll \u7cfb\u7edf\u65e5\u5fd7(N=14\u5929)"},{"location":"zh/system_operational/#3","text":"","title":"3. \u6570\u636e\u6e05\u7406"},{"location":"zh/system_operational/#31-n2","text":"\u6240\u5728\u673a\u5668\uff1aeggroll node\u8282\u70b9 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/data/IN_MEMORY \u89c4\u5219\uff1anamespace\u4ee5 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/IN_MEMORY/20200417*","title":"3.1 \u8ba1\u7b97\u4e34\u65f6\u6570\u636e(N=2\u5929)"},{"location":"zh/system_operational/#32-n14","text":"\u6240\u5728\u673a\u5668\uff1aeggroll node\u8282\u70b9 \u76ee\u5f55\uff1a${FATE_PROJECT_BASE}/eggroll/data/LMDB \u89c4\u5219\uff1anamespace\u4ee5output_data_ jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u5f00\u5934\uff0c\u6e05\u7406 jobid\u4e3a**N\u5929**\u524d\u7684\u6570\u636e \u53c2\u8003\u547d\u4ee4\uff1a rm -rf ${ FATE_PROJECT_BASE } /eggroll/data/LMDB/output_data_20200417*","title":"3.2 \u7ec4\u4ef6\u8f93\u51fa\u6570\u636e(N=14\u5929)"},{"location":"zh/third_party_service_registry/","text":"\u7b2c\u4e09\u65b9\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3 \u00b6 1. \u8bf4\u660e \u00b6 fateflow\u652f\u6301\u7b2c\u4e09\u65b9\u670d\u52a1\u8fdb\u884c\u6ce8\u518c\uff0c\u7528\u4e8e\u56de\u8c03\u573a\u666f \u6240\u6709\u7684\u63a5\u53e3\u9700\u8981\u5148\u6ce8\u518c\u670d\u52a1\u5730\u5740\uff0c\u518d\u6ce8\u518c\u63a5\u53e3 2. \u6ce8\u518c \u00b6 2.1 \u670d\u52a1\u5668\u6ce8\u518c \u00b6 uri: /v1/server/<server_name>/register \u65b9\u5f0f\uff1aPOST \u8bf7\u6c42\u53c2\u6570 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e host \u662f string \u670d\u52a1ip\u5730\u5740 port \u662f int \u670d\u52a1\u7aef\u53e3 \u8fd4\u56de\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f 2.2 \u670d\u52a1\u6ce8\u518c \u00b6 uri: /v1/service/registry \u65b9\u5f0f\uff1aPOST \u8bf7\u6c42\u53c2\u6570 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e server_name \u662f string \u6ce8\u518c\u7684\u670d\u52a1\u5668\u540d\u5b57 service_name \u662f string \u670d\u52a1\u540d uri \u662f string \u670d\u52a1uri method \u5426 string \u8bf7\u6c42\u65b9\u5f0f\uff0c\u9ed8\u8ba4\"POST\" protocol \u5426 string \u9ed8\u8ba4\"http\" \u8fd4\u56de\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f 3 \u63a5\u53e3\u53c2\u6570\u8be6\u60c5 \u00b6 3.1 ApiReader \u00b6 ApiReader\u7ec4\u4ef6\u9700\u8981\u7b2c\u4e09\u65b9\u670d\u52a1\u6ce8\u518c\u4e09\u4e2a\u63a5\u53e3\uff1aupload\u3001query\u3001download\uff0c\u7528\u4e8e\u8bf7\u6c42\u79bb\u7ebfid\u7684\u7279\u5f81\u6570\u636e\u3002 3.1.1 upload \u00b6 \u8bf4\u660e\uff1aupload\u63a5\u53e3\u5c06id\u4f20\u7ed9\u7b2c\u4e09\u65b9\u670d\u52a1 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"upload\" \u8bf7\u6c42\u53c2\u6570\uff1a headers: {\"Content-Type\": \"application/octet-stream\"} params: \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e requestBody \u662f string json\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u7279\u5f81\u7b5b\u9009\u53c2\u6570 - body\uff1a\u6570\u636e\u6d41 \u8bf7\u6c42\u793a\u4f8b(python)\uff1a with open ( id_path , \"w\" ) as f : data = MultipartEncoder ( fields = { 'file' : ( id_path , f , 'application/octet-stream' )} ) upload_registry_info = service_info . get ( \"upload\" ) response = getattr ( requests , upload_registry_info . f_method . lower (), None )( url = upload_registry_info . f_url , params = { \"requestBody\" : json . dumps ({ \"stat_month\" : \"202201\" , \"version\" : \"v1\" })}, data = data , headers = { 'Content-Type' : \"application/octet-stream\" } ) - \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 message string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u53c2\u6570jobId\uff0c\u7528\u4e8e\u5f02\u6b65\u72b6\u6001\u67e5\u8be2 3.1.2 query \u00b6 \u8bf4\u660e\uff1aquery\u63a5\u53e3\u7528\u4e8e\u67e5\u8be2\u4efb\u52a1\u8fdb\u5ea6 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"query\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e jobId \u662f string upload\u8fd4\u56de\u7684jobId \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 message string \u8fd4\u56de\u4fe1\u606f status string \u4efb\u52a1\u72b6\u6001 3.1.3 download \u00b6 \u8bf4\u660e\uff1aquery\u63a5\u53e3\u7528\u4e8e\u67e5\u8be2\u4efb\u52a1\u8fdb\u5ea6 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"download\" \u8bf7\u6c42\u53c2\u6570\uff1a params\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e requestBody \u662f string json\u5b57\u7b26\u4e32\uff0c\u5305\u542b\"jobId\" \u63a5\u53e3\u8fd4\u56de: \u7279\u5f81\u6570\u636e\u6d41 3.2 \u8ba4\u8bc1 \u00b6 3.2.1 \u5ba2\u6237\u7aef\u8ba4\u8bc1(client_authentication) \u00b6 \u8bf4\u660e\uff1a\u5ba2\u6237\u7aef\u8ba4\u8bc1\u7528\u4e8e\u8ba4\u8bc1\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"client_authentication\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e full_path \u662f string \u8bf7\u6c42\u8def\u5f84 headers \u662f string \u8bf7\u6c42\u5934 form \u5426 object \u8bf7\u6c42\u4f53 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 msg string \u8fd4\u56de\u4fe1\u606f 3.2.2 \u7ad9\u70b9\u8ba4\u8bc1 \u00b6 3.2.2.1 signature \u00b6 \u8bf4\u660e\uff1a\u8bf7\u6c42\u5176\u4ed6\u7ad9\u70b9\u524d\uff0cfate flow\u4f1a\u8c03\u7528\u7b7e\u540d\u63a5\u53e3\u83b7\u53d6\u7b7e\u540d\u5e76\u653e\u5230\u8bf7\u6c42\u5934\u4e2d \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"signature\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id body \u662f object \u8bf7\u6c42\u4f53 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 site_signature string \u7b7e\u540d 3.2.2.2 site_authentication \u00b6 \u8bf4\u660e\uff1a\u7528\u4e8e\u8ba4\u8bc1\u5176\u4ed6fate\u7ad9\u70b9\u7684\u8bf7\u6c42 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"site_authentication\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e src_party_id \u662f string \u8bf7\u6c42\u65b9\u7ad9\u70b9id site_signature \u662f string \u7b7e\u540d body \u662f object \u8bf7\u6c42\u4f53 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 msg string \u8fd4\u56de\u4fe1\u606f 3.3 \u9274\u6743(permission) \u00b6 \u8bf4\u660e\uff1a\u5bf9\u5176\u4ed6\u7ad9\u70b9\u7684\u8bf7\u6c42\u8fdb\u884c\u9274\u6743 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"permission\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e src_role \u662f string \u8bf7\u6c42\u65b9\u89d2\u8272 src_party_id \u662f string \u8bf7\u6c42\u65b9partyid initiator \u5426 object \u53d1\u8d77\u65b9\u4fe1\u606f roles \u5426 object \u5168\u90e8\u53c2\u4e0e\u65b9\u4fe1\u606f component_list \u662f object \u7ec4\u4ef6\u5217\u8868 dataset_list \u662f object \u6570\u636e\u96c6\u5217\u8868 run_time_conf \u5426 object job conf dsl \u5426 object job dsl component_parameters \u5426 object \u7ec4\u4ef6\u53c2\u6570 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 msg string \u8fd4\u56de\u4fe1\u606f","title":"\u7b2c\u4e09\u65b9\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/third_party_service_registry/#_1","text":"","title":"\u7b2c\u4e09\u65b9\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3"},{"location":"zh/third_party_service_registry/#1","text":"fateflow\u652f\u6301\u7b2c\u4e09\u65b9\u670d\u52a1\u8fdb\u884c\u6ce8\u518c\uff0c\u7528\u4e8e\u56de\u8c03\u573a\u666f \u6240\u6709\u7684\u63a5\u53e3\u9700\u8981\u5148\u6ce8\u518c\u670d\u52a1\u5730\u5740\uff0c\u518d\u6ce8\u518c\u63a5\u53e3","title":"1. \u8bf4\u660e"},{"location":"zh/third_party_service_registry/#2","text":"","title":"2. \u6ce8\u518c"},{"location":"zh/third_party_service_registry/#21","text":"uri: /v1/server/<server_name>/register \u65b9\u5f0f\uff1aPOST \u8bf7\u6c42\u53c2\u6570 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e host \u662f string \u670d\u52a1ip\u5730\u5740 port \u662f int \u670d\u52a1\u7aef\u53e3 \u8fd4\u56de\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f","title":"2.1 \u670d\u52a1\u5668\u6ce8\u518c"},{"location":"zh/third_party_service_registry/#22","text":"uri: /v1/service/registry \u65b9\u5f0f\uff1aPOST \u8bf7\u6c42\u53c2\u6570 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e server_name \u662f string \u6ce8\u518c\u7684\u670d\u52a1\u5668\u540d\u5b57 service_name \u662f string \u670d\u52a1\u540d uri \u662f string \u670d\u52a1uri method \u5426 string \u8bf7\u6c42\u65b9\u5f0f\uff0c\u9ed8\u8ba4\"POST\" protocol \u5426 string \u9ed8\u8ba4\"http\" \u8fd4\u56de\u53c2\u6570 \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f","title":"2.2 \u670d\u52a1\u6ce8\u518c"},{"location":"zh/third_party_service_registry/#3","text":"","title":"3 \u63a5\u53e3\u53c2\u6570\u8be6\u60c5"},{"location":"zh/third_party_service_registry/#31-apireader","text":"ApiReader\u7ec4\u4ef6\u9700\u8981\u7b2c\u4e09\u65b9\u670d\u52a1\u6ce8\u518c\u4e09\u4e2a\u63a5\u53e3\uff1aupload\u3001query\u3001download\uff0c\u7528\u4e8e\u8bf7\u6c42\u79bb\u7ebfid\u7684\u7279\u5f81\u6570\u636e\u3002","title":"3.1 ApiReader"},{"location":"zh/third_party_service_registry/#311-upload","text":"\u8bf4\u660e\uff1aupload\u63a5\u53e3\u5c06id\u4f20\u7ed9\u7b2c\u4e09\u65b9\u670d\u52a1 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"upload\" \u8bf7\u6c42\u53c2\u6570\uff1a headers: {\"Content-Type\": \"application/octet-stream\"} params: \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e requestBody \u662f string json\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u7279\u5f81\u7b5b\u9009\u53c2\u6570 - body\uff1a\u6570\u636e\u6d41 \u8bf7\u6c42\u793a\u4f8b(python)\uff1a with open ( id_path , \"w\" ) as f : data = MultipartEncoder ( fields = { 'file' : ( id_path , f , 'application/octet-stream' )} ) upload_registry_info = service_info . get ( \"upload\" ) response = getattr ( requests , upload_registry_info . f_method . lower (), None )( url = upload_registry_info . f_url , params = { \"requestBody\" : json . dumps ({ \"stat_month\" : \"202201\" , \"version\" : \"v1\" })}, data = data , headers = { 'Content-Type' : \"application/octet-stream\" } ) - \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 message string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u53c2\u6570jobId\uff0c\u7528\u4e8e\u5f02\u6b65\u72b6\u6001\u67e5\u8be2","title":"3.1.1 upload"},{"location":"zh/third_party_service_registry/#312-query","text":"\u8bf4\u660e\uff1aquery\u63a5\u53e3\u7528\u4e8e\u67e5\u8be2\u4efb\u52a1\u8fdb\u5ea6 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"query\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e jobId \u662f string upload\u8fd4\u56de\u7684jobId \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 message string \u8fd4\u56de\u4fe1\u606f status string \u4efb\u52a1\u72b6\u6001","title":"3.1.2 query"},{"location":"zh/third_party_service_registry/#313-download","text":"\u8bf4\u660e\uff1aquery\u63a5\u53e3\u7528\u4e8e\u67e5\u8be2\u4efb\u52a1\u8fdb\u5ea6 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"download\" \u8bf7\u6c42\u53c2\u6570\uff1a params\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e requestBody \u662f string json\u5b57\u7b26\u4e32\uff0c\u5305\u542b\"jobId\" \u63a5\u53e3\u8fd4\u56de: \u7279\u5f81\u6570\u636e\u6d41","title":"3.1.3 download"},{"location":"zh/third_party_service_registry/#32","text":"","title":"3.2 \u8ba4\u8bc1"},{"location":"zh/third_party_service_registry/#321-client_authentication","text":"\u8bf4\u660e\uff1a\u5ba2\u6237\u7aef\u8ba4\u8bc1\u7528\u4e8e\u8ba4\u8bc1\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"client_authentication\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e full_path \u662f string \u8bf7\u6c42\u8def\u5f84 headers \u662f string \u8bf7\u6c42\u5934 form \u5426 object \u8bf7\u6c42\u4f53 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 msg string \u8fd4\u56de\u4fe1\u606f","title":"3.2.1 \u5ba2\u6237\u7aef\u8ba4\u8bc1(client_authentication)"},{"location":"zh/third_party_service_registry/#322","text":"","title":"3.2.2 \u7ad9\u70b9\u8ba4\u8bc1"},{"location":"zh/third_party_service_registry/#3221-signature","text":"\u8bf4\u660e\uff1a\u8bf7\u6c42\u5176\u4ed6\u7ad9\u70b9\u524d\uff0cfate flow\u4f1a\u8c03\u7528\u7b7e\u540d\u63a5\u53e3\u83b7\u53d6\u7b7e\u540d\u5e76\u653e\u5230\u8bf7\u6c42\u5934\u4e2d \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"signature\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id body \u662f object \u8bf7\u6c42\u4f53 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 site_signature string \u7b7e\u540d","title":"3.2.2.1 signature"},{"location":"zh/third_party_service_registry/#3222-site_authentication","text":"\u8bf4\u660e\uff1a\u7528\u4e8e\u8ba4\u8bc1\u5176\u4ed6fate\u7ad9\u70b9\u7684\u8bf7\u6c42 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"site_authentication\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e src_party_id \u662f string \u8bf7\u6c42\u65b9\u7ad9\u70b9id site_signature \u662f string \u7b7e\u540d body \u662f object \u8bf7\u6c42\u4f53 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 msg string \u8fd4\u56de\u4fe1\u606f","title":"3.2.2.2 site_authentication"},{"location":"zh/third_party_service_registry/#33-permission","text":"\u8bf4\u660e\uff1a\u5bf9\u5176\u4ed6\u7ad9\u70b9\u7684\u8bf7\u6c42\u8fdb\u884c\u9274\u6743 \u63a5\u53e3\u6ce8\u518c\uff1a\u53c2\u8003 \u670d\u52a1\u6ce8\u518c \uff0c\u5176\u4e2dservice_name\u53c2\u6570\u4e3a\"permission\" \u8bf7\u6c42\u53c2\u6570\uff1a body\uff1a \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e src_role \u662f string \u8bf7\u6c42\u65b9\u89d2\u8272 src_party_id \u662f string \u8bf7\u6c42\u65b9partyid initiator \u5426 object \u53d1\u8d77\u65b9\u4fe1\u606f roles \u5426 object \u5168\u90e8\u53c2\u4e0e\u65b9\u4fe1\u606f component_list \u662f object \u7ec4\u4ef6\u5217\u8868 dataset_list \u662f object \u6570\u636e\u96c6\u5217\u8868 run_time_conf \u5426 object job conf dsl \u5426 object job dsl component_parameters \u5426 object \u7ec4\u4ef6\u53c2\u6570 \u63a5\u53e3\u8fd4\u56de: \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u7801 msg string \u8fd4\u56de\u4fe1\u606f","title":"3.3 \u9274\u6743(permission)"},{"location":"zh/cli/checkpoint/","text":"Checkpoint \u00b6 list \u00b6 \u83b7\u53d6 Checkpoint \u6a21\u578b\u5217\u8868\u3002 flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] } get \u00b6 \u83b7\u53d6 Checkpoint \u6a21\u578b\u4fe1\u606f\u3002 flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d step_index --step-index \u662f Step index\uff0c\u4e0d\u53ef\u4e0e step_name \u540c\u65f6\u4f7f\u7528 step_name --step-name \u662f Step name\uff0c\u4e0d\u53ef\u4e0e step_index \u540c\u65f6\u4f7f\u7528 \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"Checkpoint"},{"location":"zh/cli/checkpoint/#list","text":"\u83b7\u53d6 Checkpoint \u6a21\u578b\u5217\u8868\u3002 flow checkpoint list --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : [ { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : { \"buffer_name\" : \"LRModelMeta\" , \"sha1\" : \"6871508f6e6228341b18031b3623f99a53a87147\" }, \"HeteroLogisticRegressionParam\" : { \"buffer_name\" : \"LRModelParam\" , \"sha1\" : \"e3cb636fc93675684bff27117943f5bfa87f3029\" } } } ] }","title":"list"},{"location":"zh/cli/checkpoint/#get","text":"\u83b7\u53d6 Checkpoint \u6a21\u578b\u4fe1\u606f\u3002 flow checkpoint get --model-id <model_id> --model-version <model_version> --role <role> --party-id <party_id> --component-name <component_name> --step-index <step_index> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u5426 Party \u89d2\u8272 party_id -p --party-id \u5426 Party ID component_name -cpn --component-name \u5426 \u7ec4\u4ef6\u540d step_index --step-index \u662f Step index\uff0c\u4e0d\u53ef\u4e0e step_name \u540c\u65f6\u4f7f\u7528 step_name --step-name \u662f Step name\uff0c\u4e0d\u53ef\u4e0e step_index \u540c\u65f6\u4f7f\u7528 \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"create_time\" : \"2021-11-07T02:34:54.683015\" , \"step_index\" : 0 , \"step_name\" : \"step_name\" , \"models\" : { \"HeteroLogisticRegressionMeta\" : \"CgJMMhEtQxzr4jYaPxkAAAAAAADwPyIHcm1zcHJvcDD///////////8BOTMzMzMzM8M/QApKBGRpZmZYAQ==\" , \"HeteroLogisticRegressionParam\" : \"Ig0KAng3EW1qASu+uuO/Ig0KAng0EcNi7a65ReG/Ig0KAng4EbJbl4gvVea/Ig0KAng2EcZwlVZTkOu/Ig0KAngwEVpG8dCbGvG/Ig0KAng5ESJNTx5MLve/Ig0KAngzEZ88H9P8qfO/Ig0KAng1EVfWP8JJv/K/Ig0KAngxEVS0xVXoTem/Ig0KAngyEaApgW32Q/K/KSiiE8AukPs/MgJ4MDICeDEyAngyMgJ4MzICeDQyAng1MgJ4NjICeDcyAng4MgJ4OUj///////////8B\" } } }","title":"get"},{"location":"zh/cli/data/","text":"Data \u00b6 upload \u00b6 \u7528\u4e8e\u4e0a\u4f20\u5efa\u6a21\u4efb\u52a1\u7684\u8f93\u5165\u6570\u636e\u5230fate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf flow data upload -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e file \u662f string \u6570\u636e\u5b58\u50a8\u8def\u5f84 id_delimiter \u662f string \u6570\u636e\u5206\u9694\u7b26,\u5982\",\" head \u5426 int \u6570\u636e\u662f\u5426\u6709\u8868\u5934 partition \u662f int \u6570\u636e\u5206\u533a\u6570 storage_engine \u5426 string \u5b58\u50a8\u5f15\u64ce\u7c7b\u578b\uff0c\u9ed8\u8ba4\"EGGROLL\"\uff0c\u8fd8\u652f\u6301\"HDFS\",\"LOCALFS\", \"HIVE\"\u7b49 namespace \u662f string \u8868\u547d\u540d\u7a7a\u95f4 table_name \u662f string \u8868\u540d storage_address \u5426 object \u9700\u8981\u586b\u5199\u5bf9\u5e94\u5b58\u50a8\u5f15\u64ce\u7684\u5b58\u50a8\u5730\u5740 use_local_data \u5426 int \u9ed8\u8ba41\uff0c\u4ee3\u8868\u4f7f\u7528client\u673a\u5668\u7684\u6570\u636e;0\u4ee3\u8868\u4f7f\u7528fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u7684\u6570\u636e drop \u5426 int \u662f\u5426\u8986\u76d6\u4e0a\u4f20 extend_sid \u5426 bool \u662f\u5426\u65b0\u589e\u4e00\u5217uuid id\uff0c\u9ed8\u8ba4False auto_increasing_sid \u5426 bool \u65b0\u589e\u7684id\u5217\u662f\u5426\u81ea\u589e(extend_sid\u4e3aTrue\u624d\u4f1a\u751f\u6548), \u9ed8\u8ba4False with_meta \u5426 bool \u662f\u5426\u643a\u5e26meta\u6570\u636e, \u9ed8\u8ba4False meta \u5426 object \u5143\u6570\u636e, \u9ed8\u8ba4\u4e3a\u7a7a\uff0cwith_meta\u4e3atrue\u751f\u6548 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\u610f\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u4f20\u5165meta\u53c2\u6570\uff0c\u4f1a\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u6837\u4f8b eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } upload-history \u00b6 \u7528\u4e8e\u67e5\u8be2\u4e0a\u4f20\u5386\u53f2 flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -l --limit no int \u8fd4\u56de\u6570\u91cf (\u9ed8\u8ba4: 10) -j --job_id no string \u4efb\u52a1ID download \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u6587\u4ef6\u683c\u5f0f\u6570\u636e flow data download -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e output_path \u662f string \u4e0b\u8f7d\u8def\u5f84 table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 \u6837\u4f8b: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } writer \u00b6 \u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u5916\u90e8\u5f15\u64ce\u6216\u8005\u5c06\u6570\u636e\u53e6\u5b58\u4e3a\u65b0\u8868 flow data writer -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 storage_engine \u5426 string \u5b58\u50a8\u7c7b\u578b,\u5982\uff1aMYSQL address \u5426 object \u5b58\u50a8\u5730\u5740 output_namespace \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u547d\u540d\u7a7a\u95f4 output_name \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u540d **\u6ce8: storage_engine\u3001address\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u5b58\u50a8\u5230\u6307\u5b9a\u5f15\u64ce\u7684\u529f\u80fd\uff1b output_namespace\u3001output_name\u4e5f\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u53e6\u5b58\u4e3a\u540c\u79cd\u5f15\u64ce\u7684\u65b0\u8868\u529f\u80fd** \u6837\u4f8b: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Data"},{"location":"zh/cli/data/#upload","text":"\u7528\u4e8e\u4e0a\u4f20\u5efa\u6a21\u4efb\u52a1\u7684\u8f93\u5165\u6570\u636e\u5230fate\u6240\u652f\u6301\u7684\u5b58\u50a8\u7cfb\u7edf flow data upload -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e file \u662f string \u6570\u636e\u5b58\u50a8\u8def\u5f84 id_delimiter \u662f string \u6570\u636e\u5206\u9694\u7b26,\u5982\",\" head \u5426 int \u6570\u636e\u662f\u5426\u6709\u8868\u5934 partition \u662f int \u6570\u636e\u5206\u533a\u6570 storage_engine \u5426 string \u5b58\u50a8\u5f15\u64ce\u7c7b\u578b\uff0c\u9ed8\u8ba4\"EGGROLL\"\uff0c\u8fd8\u652f\u6301\"HDFS\",\"LOCALFS\", \"HIVE\"\u7b49 namespace \u662f string \u8868\u547d\u540d\u7a7a\u95f4 table_name \u662f string \u8868\u540d storage_address \u5426 object \u9700\u8981\u586b\u5199\u5bf9\u5e94\u5b58\u50a8\u5f15\u64ce\u7684\u5b58\u50a8\u5730\u5740 use_local_data \u5426 int \u9ed8\u8ba41\uff0c\u4ee3\u8868\u4f7f\u7528client\u673a\u5668\u7684\u6570\u636e;0\u4ee3\u8868\u4f7f\u7528fate flow\u670d\u52a1\u6240\u5728\u673a\u5668\u7684\u6570\u636e drop \u5426 int \u662f\u5426\u8986\u76d6\u4e0a\u4f20 extend_sid \u5426 bool \u662f\u5426\u65b0\u589e\u4e00\u5217uuid id\uff0c\u9ed8\u8ba4False auto_increasing_sid \u5426 bool \u65b0\u589e\u7684id\u5217\u662f\u5426\u81ea\u589e(extend_sid\u4e3aTrue\u624d\u4f1a\u751f\u6548), \u9ed8\u8ba4False with_meta \u5426 bool \u662f\u5426\u643a\u5e26meta\u6570\u636e, \u9ed8\u8ba4False meta \u5426 object \u5143\u6570\u636e, \u9ed8\u8ba4\u4e3a\u7a7a\uff0cwith_meta\u4e3atrue\u751f\u6548 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\u610f\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u4f20\u5165meta\u53c2\u6570\uff0c\u4f1a\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u6837\u4f8b eggroll { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"EGGROLL\" } hdfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 10 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"HDFS\" } localfs { \"file\" : \"examples/data/breast_hetero_guest.csv\" , \"id_delimiter\" : \",\" , \"head\" : 1 , \"partition\" : 4 , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" , \"storage_engine\" : \"LOCALFS\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081218319075660&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_dsl.json\" , \"job_id\" : \"202111081218319075660\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081218319075660\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081218319075660\" } , \"namespace\" : \"experiment\" , \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081218319075660/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081218319075660/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/job_runtime_conf.json\" , \"table_name\" : \"breast_hetero_host\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081218319075660/train_runtime_conf.json\" } , \"jobId\" : \"202111081218319075660\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"upload"},{"location":"zh/cli/data/#upload-history","text":"\u7528\u4e8e\u67e5\u8be2\u4e0a\u4f20\u5386\u53f2 flow data upload-history -l 20 flow data upload-history --job-id $JOB_ID \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -l --limit no int \u8fd4\u56de\u6570\u91cf (\u9ed8\u8ba4: 10) -j --job_id no string \u4efb\u52a1ID","title":"upload-history"},{"location":"zh/cli/data/#download","text":"\u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u6587\u4ef6\u683c\u5f0f\u6570\u636e flow data download -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e output_path \u662f string \u4e0b\u8f7d\u8def\u5f84 table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 \u6837\u4f8b: { \"output_path\" : \"/data/projects/fate/breast_hetero_guest.csv\" , \"namespace\" : \"experiment\" , \"table_name\" : \"breast_hetero_guest\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202111081457135282090&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_dsl.json\" , \"job_id\" : \"202111081457135282090\" , \"logs_directory\" : \"/data/projects/fate/logs/202111081457135282090\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111081457135282090\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/jobs/202111081457135282090/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/jobs/202111081457135282090/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/jobs/202111081457135282090/train_runtime_conf.json\" }, \"jobId\" : \"202111081457135282090\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"download"},{"location":"zh/cli/data/#writer","text":"\u7b80\u8981\u63cf\u8ff0\uff1a \u7528\u4e8e\u4e0b\u8f7dfate\u5b58\u50a8\u5f15\u64ce\u5185\u7684\u6570\u636e\u5230\u5916\u90e8\u5f15\u64ce\u6216\u8005\u5c06\u6570\u636e\u53e6\u5b58\u4e3a\u65b0\u8868 flow data writer -c ${ conf_path } \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name \u662f string fate\u8868\u540d namespace \u662f int fate\u8868\u547d\u540d\u7a7a\u95f4 storage_engine \u5426 string \u5b58\u50a8\u7c7b\u578b,\u5982\uff1aMYSQL address \u5426 object \u5b58\u50a8\u5730\u5740 output_namespace \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u547d\u540d\u7a7a\u95f4 output_name \u5426 string \u53e6\u5b58\u4e3afate\u7684\u8868\u540d **\u6ce8: storage_engine\u3001address\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u5b58\u50a8\u5230\u6307\u5b9a\u5f15\u64ce\u7684\u529f\u80fd\uff1b output_namespace\u3001output_name\u4e5f\u662f\u7ec4\u5408\u53c2\u6570\uff0c\u63d0\u4f9b\u53e6\u5b58\u4e3a\u540c\u79cd\u5f15\u64ce\u7684\u65b0\u8868\u529f\u80fd** \u6837\u4f8b: { \"table_name\" : \"name1\" , \"namespace\" : \"namespace1\" , \"output_name\" : \"name2\" , \"output_namespace\" : \"namespace2\" } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e jobId string \u4efb\u52a1id retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://xxx.xxx.xxx.xxx:8080/index.html#/dashboard?job_id=202201121235115028490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_dsl.json\" , \"job_id\" : \"202201121235115028490\" , \"logs_directory\" : \"/data/projects/fate/fateflow/logs/202201121235115028490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202201121235115028490\" }, \"pipeline_dsl_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/data/projects/fate/fateflow/jobs/202201121235115028490/train_runtime_conf.json\" }, \"jobId\" : \"202201121235115028490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"writer"},{"location":"zh/cli/job/","text":"Job \u00b6 submit \u00b6 \u901a\u8fc7\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf\u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c flow job submit [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -d, --dsl-path \u662f string job dsl\u7684\u8def\u5f84 -c, --conf-path \u662f string job conf\u7684\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e data.dsl_path string \u4f9d\u636e\u63d0\u4ea4\u7684dsl\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5b9e\u9645\u8fd0\u884cdsl\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.runtime_conf_on_party_path string \u4f9d\u636e\u63d0\u4ea4\u7684conf\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5728\u6bcf\u4e2aparty\u5b9e\u9645\u8fd0\u884cconf\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.board_url string fateboard\u67e5\u770b\u5730\u5740 data.model_info dict \u6a21\u578b\u6807\u8bc6\u4fe1\u606f \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } rerun \u00b6 \u91cd\u65b0\u8fd0\u884c\u67d0\u4e2a\u4f5c\u4e1a flow job rerun [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -cpn, --component-name \u5426 string \u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u91cd\u8dd1\uff0c\u6ca1\u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u82e5\u4e0e\u6307\u5b9a\u7ec4\u4ef6\u6ca1\u6709\u4e0a\u6e38\u4f9d\u8d56\u5173\u7cfb\u5219\u4e0d\u4f1a\u6267\u884c;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u5219\u6574\u4e2a\u4f5c\u4e1a\u91cd\u8dd1 --force \u5426 bool \u4f5c\u4e1a\u5373\u4f7f\u6210\u529f\u4e5f\u91cd\u8dd1;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u4f5c\u4e1a\u5982\u679c\u6210\u529f\uff0c\u5219\u8df3\u8fc7\u91cd\u8dd1 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force parameter-update \u00b6 \u66f4\u65b0\u4f5c\u4e1a\u53c2\u6570 flow job parameter-update [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -c, --conf-path \u662f string \u9700\u8981\u66f4\u65b0\u7684job conf\u7684\u5185\u5bb9\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u7684\u53c2\u6570\u4e0d\u9700\u8981\u586b\u5199 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u66f4\u65b0\u540e\u7684job conf \u6837\u4f8b \u5047\u8bbe\u66f4\u65b0job\u4e2dhetero_lr_0\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u90e8\u5206\u6267\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6548\uff1a flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u91cd\u8dd1\uff1a flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force stop \u00b6 \u53d6\u6d88\u6216\u7ec8\u6b62\u6307\u5b9a\u4efb\u52a1 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID \u6837\u4f8b flow job stop -j $JOB_ID query \u00b6 \u68c0\u7d22\u4efb\u52a1\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID view \u00b6 \u68c0\u7d22\u4efb\u52a1\u6570\u636e\u89c6\u56fe\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job view -j $JOB_ID -s complete config \u00b6 \u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u662f \u89d2\u8272 3 party_id -p --party_id \u662f Party ID 4 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job config -j $JOB_ID -r host -p 10000 --output-path ./examples/ log \u00b6 \u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u65e5\u5fd7\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job log -j JOB_ID --output-path ./examples/ list \u00b6 \u5c55\u793a\u4efb\u52a1\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b \uff1a flow job list flow job list -l 30 dsl \u00b6 \u9884\u6d4bDSL\u6587\u4ef6\u751f\u6210\u5668\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 cpn_list --cpn-list \u5426 \u7528\u6237\u6307\u5b9a\u7ec4\u4ef6\u540d\u5217\u8868 2 cpn_path --cpn-path \u5426 \u7528\u6237\u6307\u5b9a\u5e26\u6709\u7ec4\u4ef6\u540d\u5217\u8868\u7684\u6587\u4ef6\u8def\u5f84 3 train_dsl_path --train-dsl-path \u662f \u8bad\u7ec3dsl\u6587\u4ef6\u8def\u5f84 4 output_path -o --output-path \u5426 \u8f93\u51fa\u76ee\u5f55\u8def\u5f84 \u6837\u4f8b \uff1a flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/","title":"Job"},{"location":"zh/cli/job/#submit","text":"\u901a\u8fc7\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\uff1ajob dsl\u548cjob conf\u6784\u5efa\u4e00\u4e2a\u8054\u90a6\u5b66\u4e60\u4f5c\u4e1a\uff0c\u63d0\u4ea4\u5230\u8c03\u5ea6\u7cfb\u7edf\u6267\u884c flow job submit [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -d, --dsl-path \u662f string job dsl\u7684\u8def\u5f84 -c, --conf-path \u662f string job conf\u7684\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e data.dsl_path string \u4f9d\u636e\u63d0\u4ea4\u7684dsl\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5b9e\u9645\u8fd0\u884cdsl\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.runtime_conf_on_party_path string \u4f9d\u636e\u63d0\u4ea4\u7684conf\u5185\u5bb9\uff0c\u7531\u7cfb\u7edf\u751f\u6210\u7684\u5728\u6bcf\u4e2aparty\u5b9e\u9645\u8fd0\u884cconf\u914d\u7f6e\u7684\u5b58\u653e\u8def\u5f84 data.board_url string fateboard\u67e5\u770b\u5730\u5740 data.model_info dict \u6a21\u578b\u6807\u8bc6\u4fe1\u606f \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111061608424372620&role=guest&party_id=9999\" , \"code\" : 0 , \"dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_dsl.json\" , \"job_id\" : \"202111061608424372620\" , \"logs_directory\" : \"$FATE_PROJECT_BASE/logs/202111061608424372620\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"202111061608424372620\" }, \"pipeline_dsl_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"$FATE_FATE_PROJECT_BASE/jobs/202111061608424372620/guest/9999/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"$FATE_PROJECT_BASE/jobs/202111061608424372620/train_runtime_conf.json\" }, \"jobId\" : \"202111061608424372620\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"submit"},{"location":"zh/cli/job/#rerun","text":"\u91cd\u65b0\u8fd0\u884c\u67d0\u4e2a\u4f5c\u4e1a flow job rerun [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -cpn, --component-name \u5426 string \u6307\u5b9a\u4ece\u54ea\u4e2a\u7ec4\u4ef6\u91cd\u8dd1\uff0c\u6ca1\u88ab\u6307\u5b9a\u7684\u7ec4\u4ef6\u82e5\u4e0e\u6307\u5b9a\u7ec4\u4ef6\u6ca1\u6709\u4e0a\u6e38\u4f9d\u8d56\u5173\u7cfb\u5219\u4e0d\u4f1a\u6267\u884c;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u5219\u6574\u4e2a\u4f5c\u4e1a\u91cd\u8dd1 --force \u5426 bool \u4f5c\u4e1a\u5373\u4f7f\u6210\u529f\u4e5f\u91cd\u8dd1;\u82e5\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\uff0c\u4f5c\u4e1a\u5982\u679c\u6210\u529f\uff0c\u5219\u8df3\u8fc7\u91cd\u8dd1 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow job rerun -j 202111031100369723120 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 flow job rerun -j 202111031100369723120 -cpn hetero_lr_0 --force","title":"rerun"},{"location":"zh/cli/job/#parameter-update","text":"\u66f4\u65b0\u4f5c\u4e1a\u53c2\u6570 flow job parameter-update [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string job id \u8def\u5f84 -c, --conf-path \u662f string \u9700\u8981\u66f4\u65b0\u7684job conf\u7684\u5185\u5bb9\uff0c\u4e0d\u9700\u8981\u66f4\u65b0\u7684\u53c2\u6570\u4e0d\u9700\u8981\u586b\u5199 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f jobId string \u4f5c\u4e1aID data dict \u8fd4\u56de\u66f4\u65b0\u540e\u7684job conf \u6837\u4f8b \u5047\u8bbe\u66f4\u65b0job\u4e2dhetero_lr_0\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u90e8\u5206\u6267\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a { \"job_parameters\" : { } , \"component_parameters\" : { \"common\" : { \"hetero_lr_0\" : { \"alpha\" : 0 .02, \"max_iter\" : 5 } } } } \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6548\uff1a flow job parameter-update -j 202111061957421943730 -c examples/other/update_parameters.json \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u91cd\u8dd1\uff1a flow job rerun -j 202111061957421943730 -cpn hetero_lr_0 --force","title":"parameter-update"},{"location":"zh/cli/job/#stop","text":"\u53d6\u6d88\u6216\u7ec8\u6b62\u6307\u5b9a\u4efb\u52a1 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID \u6837\u4f8b flow job stop -j $JOB_ID","title":"stop"},{"location":"zh/cli/job/#query","text":"\u68c0\u7d22\u4efb\u52a1\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job query -r guest -p 9999 -s complete flow job query -j $JOB_ID","title":"query"},{"location":"zh/cli/job/#view","text":"\u68c0\u7d22\u4efb\u52a1\u6570\u636e\u89c6\u56fe\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b \uff1a flow job view -j $JOB_ID -s complete","title":"view"},{"location":"zh/cli/job/#config","text":"\u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 role -r --role \u662f \u89d2\u8272 3 party_id -p --party_id \u662f Party ID 4 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job config -j $JOB_ID -r host -p 10000 --output-path ./examples/","title":"config"},{"location":"zh/cli/job/#log","text":"\u4e0b\u8f7d\u6307\u5b9a\u4efb\u52a1\u7684\u65e5\u5fd7\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u662f Job ID 2 output_path -o --output-path \u662f \u8f93\u51fa\u76ee\u5f55 \u6837\u4f8b \uff1a flow job log -j JOB_ID --output-path ./examples/","title":"log"},{"location":"zh/cli/job/#list","text":"\u5c55\u793a\u4efb\u52a1\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b \uff1a flow job list flow job list -l 30","title":"list"},{"location":"zh/cli/job/#dsl","text":"\u9884\u6d4bDSL\u6587\u4ef6\u751f\u6210\u5668\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 cpn_list --cpn-list \u5426 \u7528\u6237\u6307\u5b9a\u7ec4\u4ef6\u540d\u5217\u8868 2 cpn_path --cpn-path \u5426 \u7528\u6237\u6307\u5b9a\u5e26\u6709\u7ec4\u4ef6\u540d\u5217\u8868\u7684\u6587\u4ef6\u8def\u5f84 3 train_dsl_path --train-dsl-path \u662f \u8bad\u7ec3dsl\u6587\u4ef6\u8def\u5f84 4 output_path -o --output-path \u5426 \u8f93\u51fa\u76ee\u5f55\u8def\u5f84 \u6837\u4f8b \uff1a flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json flow job dsl --cpn-path fate_flow/examples/component_list.txt --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list \"dataio_0, hetero_feature_binning_0, hetero_feature_selection_0, evaluation_0\" --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/ flow job dsl --cpn-list [ dataio_0,hetero_feature_binning_0,hetero_feature_selection_0,evaluation_0 ] --train-dsl-path fate_flow/examples/test_hetero_lr_job_dsl.json -o fate_flow/examples/","title":"dsl"},{"location":"zh/cli/key/","text":"Key \u00b6 query \u00b6 \u7528\u4e8e\u67e5\u8be2\u672c\u65b9\u6216\u5408\u4f5c\u65b9fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f flow key query -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n/wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } save \u00b6 \u7528\u4e8e\u4fdd\u5b58\u5176\u5b83fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f\uff0c\u5373\u4e3a\u548c\u5176\u4ed6\u7ad9\u70b9\u5408\u4f5c flow key save -c fateflow/examples/key/save_public_key.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id key \u662f string \u7ad9\u70b9\u516c\u94a5 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 \u5220\u9664\u5408\u4f5c\u65b9\u7ad9\u70b9\u516c\u94a5\uff0c\u5373\u4e3a\u53d6\u6d88\u5408\u4f5c\u5173\u7cfb flow key delete -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Key"},{"location":"zh/cli/key/#query","text":"\u7528\u4e8e\u67e5\u8be2\u672c\u65b9\u6216\u5408\u4f5c\u65b9fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f flow key query -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzxgbxa3cfhvwbu0AFfY/\\nkm7uFZ17J0EEDgaIWlrLakds7XboU5iOT0eReQp/KG3R0fVM9rBtdj8NcBcArtZ9\\n2242Atls3jiuza/MPPo9XACnedGW7O+VAfvVmq2sdmKZMX5l7krEXYN645UZAd8b\\nhIh+xf0qGW6IgxyKvqF13VxxB7OMUzUwyY/ZcN2rW1urfdXsCNoQ1cFl3KaarkHl\\nn/gBMcCDvACXoKysFnFE7L4E7CGglYaDBJrfIyti+sbSVNxUDx2at2VXqj/PohTa\\nkBKfrgK7sT85gz1sc9uRwhwF4nOY7izq367S7t/W8BJ75gWsr+lhhiIfE19RBbBQ\\n/wIDAQAB\\n-----END PUBLIC KEY-----\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"zh/cli/key/#save","text":"\u7528\u4e8e\u4fdd\u5b58\u5176\u5b83fate\u7ad9\u70b9\u516c\u94a5\u4fe1\u606f\uff0c\u5373\u4e3a\u548c\u5176\u4ed6\u7ad9\u70b9\u5408\u4f5c flow key save -c fateflow/examples/key/save_public_key.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id key \u662f string \u7ad9\u70b9\u516c\u94a5 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"save"},{"location":"zh/cli/key/#delete","text":"\u5220\u9664\u5408\u4f5c\u65b9\u7ad9\u70b9\u516c\u94a5\uff0c\u5373\u4e3a\u53d6\u6d88\u5408\u4f5c\u5173\u7cfb flow key delete -p 9999 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"zh/cli/model/","text":"Model \u00b6 load \u00b6 \u5411 Fate-Serving \u52a0\u8f7d deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u662f \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 \u5411 Fate-Serving \u7ed1\u5b9a deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" } import \u00b6 \u4ece\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b\u3002 flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 from_database --from-database \u662f \u4ece\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b \u6837\u4f8b { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } export \u00b6 \u5bfc\u51fa\u6a21\u578b\u5230\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u3002 flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 to_database --to-database \u662f \u5c06\u6a21\u578b\u5bfc\u51fa\u5230\u5b58\u50a8\u5f15\u64ce\u4e2d \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } migrate \u00b6 \u8fc1\u79fb\u6a21\u578b\u3002 flow model migrate -c examples/model/migrate_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 \u6837\u4f8b { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" } tag-list \u00b6 \u83b7\u53d6\u6a21\u578b\u7684\u6807\u7b7e\u5217\u8868\u3002 flow model tag-list -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag-model \u00b6 \u4ece\u6a21\u578b\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\u3002 flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag_name -t --tag-name \u5426 \u6807\u7b7e\u540d remove --remove \u662f \u79fb\u9664\u6307\u5b9a\u7684\u6807\u7b7e deploy \u00b6 \u914d\u7f6e\u9884\u6d4b DSL\u3002 flow model deploy --model-id <model_id> --model-version <model_version> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c cpn_list --cpn-list \u662f \u7ec4\u4ef6\u5217\u8868 cpn_path --cpn-path \u662f \u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u7ec4\u4ef6\u5217\u8868 dsl_path --dsl-path \u662f \u9884\u6d4b DSL \u6587\u4ef6 cpn_step_index --cpn-step-index \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step index \u4f8b\u5982 --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step name \u4f8b\u5982 --cpn-step-name cpn_b:foobar \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } } get-predict-dsl \u00b6 \u83b7\u53d6\u9884\u6d4b DSL\u3002 flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84 get-predict-conf \u00b6 \u83b7\u53d6\u6a21\u578b\u9884\u6d4b\u6a21\u677f\u3002 flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84 get-model-info \u00b6 \u83b7\u53d6\u6a21\u578b\u4fe1\u606f\u3002 flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u662f Party \u89d2\u8272 party_id -p --party-id \u662f Party ID detail --detail \u662f \u5c55\u793a\u8be6\u7ec6\u4fe1\u606f homo-convert \u00b6 \u57fa\u4e8e\u6a2a\u5411\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u751f\u6210\u5176\u4ed6 ML \u6846\u67b6\u7684\u6a21\u578b\u6587\u4ef6\u3002 flow model homo-convert -c examples/model/homo_convert_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 homo-deploy \u00b6 \u5c06\u6a2a\u5411\u8bad\u7ec3\u540e\u4f7f\u7528 homo-convert \u751f\u6210\u7684\u6a21\u578b\u90e8\u7f72\u5230\u5728\u7ebf\u63a8\u7406\u7cfb\u7edf\u4e2d\uff0c\u5f53\u524d\u652f\u6301\u521b\u5efa\u57fa\u4e8e KFServing \u7684\u63a8\u7406\u670d\u52a1\u3002 flow model homo-deploy -c examples/model/homo_deploy_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6","title":"Model"},{"location":"zh/cli/model/#load","text":"\u5411 Fate-Serving \u52a0\u8f7d deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model load -c examples/model/publish_load_model.json flow model load -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u662f \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"data\" : { \"detail\" : { \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091122168817080\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"load"},{"location":"zh/cli/model/#bind","text":"\u5411 Fate-Serving \u7ed1\u5b9a deploy \u751f\u6210\u7684\u6a21\u578b\u3002 flow model bind -c examples/model/bind_model_service.json flow model bind -c examples/model/bind_model_service.json -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 job_id -j --job-id \u662f \u4efb\u52a1 ID \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"service id is 123\" }","title":"bind"},{"location":"zh/cli/model/#import","text":"\u4ece\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b\u3002 flow model import -c examples/model/import_model.json flow model import -c examples/model/restore_model.json --from-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 from_database --from-database \u662f \u4ece\u5b58\u50a8\u5f15\u64ce\u4e2d\u5bfc\u5165\u6a21\u578b \u6837\u4f8b { \"data\" : { \"job_id\" : \"202208261102212849780\" , \"model_id\" : \"arbiter-10000#guest-9999#host-10000#model\" , \"model_version\" : \"foobar\" , \"party_id\" : \"9999\" , \"role\" : \"guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"import"},{"location":"zh/cli/model/#export","text":"\u5bfc\u51fa\u6a21\u578b\u5230\u672c\u5730\u6216\u5b58\u50a8\u5f15\u64ce\u4e2d\u3002 flow model export -c examples/model/export_model.json flow model export -c examples/model/store_model.json --to-database \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 to_database --to-database \u662f \u5c06\u6a21\u578b\u5bfc\u51fa\u5230\u5b58\u50a8\u5f15\u64ce\u4e2d \u6837\u4f8b { \"data\" : { \"board_url\" : \"http://127.0.0.1:8080/index.html#/dashboard?job_id=202111091124582110490&role=local&party_id=0\" , \"code\" : 0 , \"dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_dsl.json\" , \"job_id\" : \"202111091124582110490\" , \"logs_directory\" : \"/root/Codes/FATE-Flow/logs/202111091124582110490\" , \"message\" : \"success\" , \"model_info\" : { \"model_id\" : \"local-0#model\" , \"model_version\" : \"202111091124582110490\" }, \"pipeline_dsl_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/pipeline_dsl.json\" , \"runtime_conf_on_party_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/local/0/job_runtime_on_party_conf.json\" , \"runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/job_runtime_conf.json\" , \"train_runtime_conf_path\" : \"/root/Codes/FATE-Flow/jobs/202111091124582110490/train_runtime_conf.json\" }, \"jobId\" : \"202111091124582110490\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"export"},{"location":"zh/cli/model/#migrate","text":"\u8fc1\u79fb\u6a21\u578b\u3002 flow model migrate -c examples/model/migrate_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6 \u6837\u4f8b { \"data\" : { \"arbiter\" : { \"10000\" : 0 }, \"detail\" : { \"arbiter\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/arbiter#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"guest\" : { \"9999\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/guest#99#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } }, \"host\" : { \"10000\" : { \"retcode\" : 0 , \"retmsg\" : \"Migrating model successfully. The configuration of model has been modified automatically. New model id is: arbiter-100#guest-99#host-100#model, model version is: 202111091127392613050. Model files can be found at '/root/Codes/FATE-Flow/temp/fate_flow/host#100#arbiter-100#guest-99#host-100#model_202111091127392613050.zip'.\" } } }, \"guest\" : { \"9999\" : 0 }, \"host\" : { \"10000\" : 0 } }, \"jobId\" : \"202111091127392613050\" , \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"migrate"},{"location":"zh/cli/model/#tag-list","text":"\u83b7\u53d6\u6a21\u578b\u7684\u6807\u7b7e\u5217\u8868\u3002 flow model tag-list -j <job_id> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID","title":"tag-list"},{"location":"zh/cli/model/#tag-model","text":"\u4ece\u6a21\u578b\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u6807\u7b7e\u3002 flow model tag-model -j <job_id> -t <tag_name> flow model tag-model -j <job_id> -t <tag_name> --remove \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e job_id -j --job_id \u5426 \u4efb\u52a1 ID tag_name -t --tag-name \u5426 \u6807\u7b7e\u540d remove --remove \u662f \u79fb\u9664\u6307\u5b9a\u7684\u6807\u7b7e","title":"tag-model"},{"location":"zh/cli/model/#deploy","text":"\u914d\u7f6e\u9884\u6d4b DSL\u3002 flow model deploy --model-id <model_id> --model-version <model_version> \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c cpn_list --cpn-list \u662f \u7ec4\u4ef6\u5217\u8868 cpn_path --cpn-path \u662f \u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u7ec4\u4ef6\u5217\u8868 dsl_path --dsl-path \u662f \u9884\u6d4b DSL \u6587\u4ef6 cpn_step_index --cpn-step-index \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step index \u4f8b\u5982 --cpn-step-index cpn_a:123 cpn_step_name --cpn-step-name \u662f \u7528\u6307\u5b9a\u7684 Checkpoint \u6a21\u578b\u66ff\u6362 Pipeline \u6a21\u578b \u4f7f\u7528 : \u5206\u9694 component name \u4e0e step name \u4f8b\u5982 --cpn-step-name cpn_b:foobar \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" , \"data\" : { \"model_id\" : \"arbiter-9999#guest-10000#host-9999#model\" , \"model_version\" : \"202111032227378766180\" , \"arbiter\" : { \"party_id\" : 9999 }, \"guest\" : { \"party_id\" : 10000 }, \"host\" : { \"party_id\" : 9999 }, \"detail\" : { \"arbiter\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role arbiter 9999 success\" } }, \"guest\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role guest 10000 success\" } }, \"host\" : { \"party_id\" : { \"retcode\" : 0 , \"retmsg\" : \"deploy model of role host 9999 success\" } } } } }","title":"deploy"},{"location":"zh/cli/model/#get-predict-dsl","text":"\u83b7\u53d6\u9884\u6d4b DSL\u3002 flow model get-predict-dsl --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84","title":"get-predict-dsl"},{"location":"zh/cli/model/#get-predict-conf","text":"\u83b7\u53d6\u6a21\u578b\u9884\u6d4b\u6a21\u677f\u3002 flow model get-predict-conf --model-id <model_id> --model-version <model_version> -o ./examples/ \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c output_path -o --output-path \u5426 \u8f93\u51fa\u8def\u5f84","title":"get-predict-conf"},{"location":"zh/cli/model/#get-model-info","text":"\u83b7\u53d6\u6a21\u578b\u4fe1\u606f\u3002 flow model get-model-info --model-id <model_id> --model-version <model_version> flow model get-model-info --model-id <model_id> --model-version <model_version> --detail \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e model_id --model-id \u5426 \u6a21\u578b ID model_version --model-version \u5426 \u6a21\u578b\u7248\u672c role -r --role \u662f Party \u89d2\u8272 party_id -p --party-id \u662f Party ID detail --detail \u662f \u5c55\u793a\u8be6\u7ec6\u4fe1\u606f","title":"get-model-info"},{"location":"zh/cli/model/#homo-convert","text":"\u57fa\u4e8e\u6a2a\u5411\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u751f\u6210\u5176\u4ed6 ML \u6846\u67b6\u7684\u6a21\u578b\u6587\u4ef6\u3002 flow model homo-convert -c examples/model/homo_convert_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6","title":"homo-convert"},{"location":"zh/cli/model/#homo-deploy","text":"\u5c06\u6a2a\u5411\u8bad\u7ec3\u540e\u4f7f\u7528 homo-convert \u751f\u6210\u7684\u6a21\u578b\u90e8\u7f72\u5230\u5728\u7ebf\u63a8\u7406\u7cfb\u7edf\u4e2d\uff0c\u5f53\u524d\u652f\u6301\u521b\u5efa\u57fa\u4e8e KFServing \u7684\u63a8\u7406\u670d\u52a1\u3002 flow model homo-deploy -c examples/model/homo_deploy_model.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u53ef\u9009\u53c2\u6570 \u8bf4\u660e conf_path -c --conf-path \u5426 \u914d\u7f6e\u6587\u4ef6","title":"homo-deploy"},{"location":"zh/cli/privilege/","text":"Privilege \u00b6 grant \u00b6 \u6dfb\u52a0\u6743\u9650 flow privilege grant -c fateflow/examples/permission/grant.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 \u5220\u9664\u6743\u9650 flow privilege delete -c fateflow/examples/permission/delete.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868\uff0c \"*\"\u4e3a\u6240\u6709\u6570\u636e\u96c6 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" } query \u00b6 \u67e5\u8be2\u6743\u9650 flow privilege query -p 10000 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Privilege"},{"location":"zh/cli/privilege/#grant","text":"\u6dfb\u52a0\u6743\u9650 flow privilege grant -c fateflow/examples/permission/grant.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"grant"},{"location":"zh/cli/privilege/#delete","text":"\u5220\u9664\u6743\u9650 flow privilege delete -c fateflow/examples/permission/delete.json \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id \u662f string \u7ad9\u70b9id component \u5426 string \u7ec4\u4ef6\u540d\uff0c\u53ef\u7528\",\"\u5206\u5272\u591a\u4e2a\u7ec4\u4ef6\uff0c\"*\"\u4e3a\u6240\u6709\u7ec4\u4ef6 dataset \u5426 object \u6570\u636e\u96c6\u5217\u8868\uff0c \"*\"\u4e3a\u6240\u6709\u6570\u636e\u96c6 \u6837\u4f8b { \"party_id\" : 10000 , \"component\" : \"reader,dataio\" , \"dataset\" : [ { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_host\" } ] } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b { \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"zh/cli/privilege/#query","text":"\u67e5\u8be2\u6743\u9650 flow privilege query -p 10000 \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e party_id -p --party-id \u662f string \u7ad9\u70b9id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"component\" : [ \"reader\" , \"dataio\" ], \"dataset\" : [ { \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, { \"name\" : \"breast_hetero_host\" , \"namespace\" : \"experiment\" } ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"zh/cli/provider/","text":"Provider \u00b6 list \u00b6 \u5217\u51fa\u5f53\u524d\u6240\u6709\u7ec4\u4ef6\u63d0\u4f9b\u8005\u53ca\u5176\u63d0\u4f9b\u7ec4\u4ef6\u4fe1\u606f flow provider list [ options ] \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b \u8f93\u51fa: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5305\u542b \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u7684 \u540d\u79f0 , \u7248\u672c\u53f7 , \u4ee3\u7801\u8def\u5f84 , \u63d0\u4f9b\u7684\u7ec4\u4ef6\u5217\u8868 register \u00b6 \u6ce8\u518c\u4e00\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u8005 flow provider register [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json \u914d\u7f6e\u6587\u4ef6\uff1a { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } \u8f93\u51fa: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Provider"},{"location":"zh/cli/provider/#list","text":"\u5217\u51fa\u5f53\u524d\u6240\u6709\u7ec4\u4ef6\u63d0\u4f9b\u8005\u53ca\u5176\u63d0\u4f9b\u7ec4\u4ef6\u4fe1\u606f flow provider list [ options ] \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b \u8f93\u51fa: { \"data\" : { \"fate\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"heterodatasplit\" , \"psi\" , \"heterofastsecureboost\" , \"heterofeaturebinning\" , \"scorecard\" , \"sampleweight\" , \"homosecureboost\" , \"onehotencoder\" , \"secureinformationretrieval\" , \"homoonehotencoder\" , \"datatransform\" , \"dataio\" , \"heterosshelinr\" , \"intersection\" , \"homofeaturebinning\" , \"secureaddexample\" , \"union\" , \"datastatistics\" , \"columnexpand\" , \"homonn\" , \"labeltransform\" , \"heterosecureboost\" , \"heterofeatureselection\" , \"heterolr\" , \"feldmanverifiablesum\" , \"heteropoisson\" , \"evaluation\" , \"federatedsample\" , \"homodatasplit\" , \"ftl\" , \"localbaseline\" , \"featurescale\" , \"featureimputation\" , \"heteropearson\" , \"heterokmeans\" , \"heteronn\" , \"heterolinr\" , \"spdztest\" , \"heterosshelr\" , \"homolr\" ], \"path\" : \"${FATE_PROJECT_BASE}/python/federatedml\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } }, \"fate_flow\" : { \"1.9.0\" : { \"class_path\" : { \"anonymous_generator\" : \"util.anonymous_generator_util.Anonymous\" , \"data_format\" : \"util.data_format_preprocess.DataFormatPreProcess\" , \"feature_instance\" : \"feature.instance.Instance\" , \"feature_vector\" : \"feature.sparse_vector.SparseVector\" , \"hetero_model_merge\" : \"protobuf.model_merge.merge_hetero_models.hetero_model_merge\" , \"homo_model_convert\" : \"protobuf.homo_model_convert.homo_model_convert\" , \"interface\" : \"components.components.Components\" , \"model\" : \"protobuf.generated\" , \"model_migrate\" : \"protobuf.model_migrate.model_migrate\" }, \"components\" : [ \"writer\" , \"modelrestore\" , \"upload\" , \"apireader\" , \"modelstore\" , \"cacheloader\" , \"modelloader\" , \"download\" , \"reader\" ], \"path\" : \"${FATE_FLOW_BASE}/python/fate_flow\" , \"python\" : \"\" }, \"default\" : { \"version\" : \"1.9.0\" } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } \u5305\u542b \u7ec4\u4ef6\u63d0\u4f9b\u8005 \u7684 \u540d\u79f0 , \u7248\u672c\u53f7 , \u4ee3\u7801\u8def\u5f84 , \u63d0\u4f9b\u7684\u7ec4\u4ef6\u5217\u8868","title":"list"},{"location":"zh/cli/provider/#register","text":"\u6ce8\u518c\u4e00\u4e2a\u7ec4\u4ef6\u63d0\u4f9b\u8005 flow provider register [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -c, --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f \u6837\u4f8b flow provider register -c $FATE_FLOW_BASE /examples/other/register_provider.json \u914d\u7f6e\u6587\u4ef6\uff1a { \"name\" : \"fate\" , \"version\" : \"1.7.1\" , \"path\" : \"${FATE_FLOW_BASE}/python/component_plugins/fateb/python/federatedml\" } \u8f93\u51fa: { \"data\" : { \"flow-xxx-9380\" : { \"retcode\" : 0 , \"retmsg\" : \"success\" } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"register"},{"location":"zh/cli/resource/","text":"Resource \u00b6 query \u00b6 \u7528\u4e8e\u67e5\u8be2fate\u7cfb\u7edf\u8d44\u6e90 flow resource query \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } return \u00b6 \u7528\u4e8e\u5f52\u8fd8\u67d0\u4e2ajob\u7684\u8d44\u6e90 flow resource return [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e job_id \u662f string \u4efb\u52a1id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Resource"},{"location":"zh/cli/resource/#query","text":"\u7528\u4e8e\u67e5\u8be2fate\u7cfb\u7edf\u8d44\u6e90 flow resource query \u9009\u9879 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"computing_engine_resource\" : { \"f_cores\" : 32 , \"f_create_date\" : \"2021-09-21 19:32:59\" , \"f_create_time\" : 1632223979564 , \"f_engine_config\" : { \"cores_per_node\" : 32 , \"nodes\" : 1 }, \"f_engine_entrance\" : \"fate_on_eggroll\" , \"f_engine_name\" : \"EGGROLL\" , \"f_engine_type\" : \"computing\" , \"f_memory\" : 0 , \"f_nodes\" : 1 , \"f_remaining_cores\" : 32 , \"f_remaining_memory\" : 0 , \"f_update_date\" : \"2021-11-08 16:56:38\" , \"f_update_time\" : 1636361798812 }, \"use_resource_job\" : [] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"query"},{"location":"zh/cli/resource/#return","text":"\u7528\u4e8e\u5f52\u8fd8\u67d0\u4e2ajob\u7684\u8d44\u6e90 flow resource return [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e job_id \u662f string \u4efb\u52a1id \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"job_id\" : \"202111081612427726750\" , \"party_id\" : \"8888\" , \"resource_in_use\" : true , \"resource_return_status\" : true , \"role\" : \"guest\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"return"},{"location":"zh/cli/server/","text":"Server \u00b6 versions \u00b6 \u5217\u51fa\u6240\u6709\u76f8\u5173\u7cfb\u7edf\u7248\u672c\u53f7 flow server versions \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server versions \u8f93\u51fa: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } reload \u00b6 \u5982\u4e0b\u914d\u7f6e\u9879\u5728 reload \u540e\u4f1a\u91cd\u65b0\u751f\u6548 $FATE_PROJECT_BASE/conf/service_conf.yaml\u4e2d# engine services\u540e\u7684\u6240\u6709\u914d\u7f6e $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml\u4e2d\u6240\u6709\u914d\u7f6e flow server reload \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server reload \u8f93\u51fa: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Server"},{"location":"zh/cli/server/#versions","text":"\u5217\u51fa\u6240\u6709\u76f8\u5173\u7cfb\u7edf\u7248\u672c\u53f7 flow server versions \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server versions \u8f93\u51fa: { \"data\" : { \"API\" : \"v1\" , \"CENTOS\" : \"7.2\" , \"EGGROLL\" : \"2.4.0\" , \"FATE\" : \"1.7.0\" , \"FATEBoard\" : \"1.7.0\" , \"FATEFlow\" : \"1.7.0\" , \"JDK\" : \"8\" , \"MAVEN\" : \"3.6.3\" , \"PYTHON\" : \"3.6.5\" , \"SPARK\" : \"2.4.1\" , \"UBUNTU\" : \"16.04\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"versions"},{"location":"zh/cli/server/#reload","text":"\u5982\u4e0b\u914d\u7f6e\u9879\u5728 reload \u540e\u4f1a\u91cd\u65b0\u751f\u6548 $FATE_PROJECT_BASE/conf/service_conf.yaml\u4e2d# engine services\u540e\u7684\u6240\u6709\u914d\u7f6e $FATE_FLOW_BASE/python/fate_flow/job_default_config.yaml\u4e2d\u6240\u6709\u914d\u7f6e flow server reload \u9009\u9879 \u65e0 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow server reload \u8f93\u51fa: { \"data\" : { \"job_default_config\" : { \"auto_retries\" : 0 , \"auto_retry_delay\" : 1 , \"default_component_provider_path\" : \"component_plugins/fate/python/federatedml\" , \"end_status_job_scheduling_time_limit\" : 300000 , \"end_status_job_scheduling_updates\" : 1 , \"federated_command_trys\" : 3 , \"federated_status_collect_type\" : \"PUSH\" , \"job_timeout\" : 259200 , \"max_cores_percent_per_job\" : 1 , \"output_data_summary_count_limit\" : 100 , \"remote_request_timeout\" : 30000 , \"task_cores\" : 4 , \"task_memory\" : 0 , \"task_parallelism\" : 1 , \"total_cores_overweight_percent\" : 1 , \"total_memory_overweight_percent\" : 1 , \"upload_max_bytes\" : 4194304000 }, \"service_registry\" : null }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"reload"},{"location":"zh/cli/table/","text":"Table \u00b6 info \u00b6 \u7528\u4e8e\u67e5\u8be2fate\u8868\u7684\u76f8\u5173\u4fe1\u606f(\u771f\u5b9e\u5b58\u50a8\u5730\u5740,\u6570\u91cf,schema\u7b49) flow table info [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exist\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } delete \u00b6 \u53ef\u901a\u8fc7table delete\u5220\u9664\u8868\u6570\u636e flow table delete [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } bind \u00b6 \u53ef\u901a\u8fc7table bind\u5c06\u771f\u5b9e\u5b58\u50a8\u5730\u5740\u6620\u5c04\u5230fate\u5b58\u50a8\u8868 flow table bind [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 engine \u662f string \u5b58\u50a8\u5f15\u64ce, \u652f\u6301\"HDFS\", \"MYSQL\", \"PATH\" adress \u662f object \u771f\u5b9e\u5b58\u50a8\u5730\u5740 drop \u5426 int \u8986\u76d6\u4ee5\u524d\u7684\u4fe1\u606f head \u5426 int \u662f\u5426\u6709\u6570\u636e\u8868\u5934 id_delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26 id_column \u5426 string id\u5b57\u6bb5 feature_column \u5426 array \u7279\u5f81\u5b57\u6bb5 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u5728table bind\u9636\u6bb5\u4f20\u5165meta\u53c2\u6570\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u5f53\u6570\u636e\u7ecf\u8fc7\u4e86\u4e00\u6b21reader\u7ec4\u4ef6\u540e\u4f1a\u66f4\u65b0\u539f\u59cb\u6570\u636e\u7684\u7279\u5f81\u533f\u540d\u4fe1\u606f \u6837\u4f8b hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } disable \u00b6 \u53ef\u901a\u8fc7table disable\u5c06\u8868\u7f6e\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 flow table disable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } enable \u00b6 \u53ef\u901a\u8fc7table enable\u5c06\u8868\u7f6e\u4e3a\u53ef\u7528\u72b6\u6001 flow table enable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } disable-delete \u00b6 \u53ef\u901a\u8fc7disable-delete\u5220\u9664\u5f53\u524d\u4e0d\u53ef\u7528\u7684\u8868 flow table disable-delete \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Table"},{"location":"zh/cli/table/#info","text":"\u7528\u4e8e\u67e5\u8be2fate\u8868\u7684\u76f8\u5173\u4fe1\u606f(\u771f\u5b9e\u5b58\u50a8\u5730\u5740,\u6570\u91cf,schema\u7b49) flow table info [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"address\" : { \"home\" : null , \"name\" : \"breast_hetero_guest\" , \"namespace\" : \"experiment\" }, \"count\" : 569 , \"exist\" : 1 , \"namespace\" : \"experiment\" , \"partition\" : 4 , \"schema\" : { \"header\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" , \"sid\" : \"id\" }, \"table_name\" : \"breast_hetero_guest\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"info"},{"location":"zh/cli/table/#delete","text":"\u53ef\u901a\u8fc7table delete\u5220\u9664\u8868\u6570\u636e flow table delete [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"delete"},{"location":"zh/cli/table/#bind","text":"\u53ef\u901a\u8fc7table bind\u5c06\u771f\u5b9e\u5b58\u50a8\u5730\u5740\u6620\u5c04\u5230fate\u5b58\u50a8\u8868 flow table bind [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e conf_path -c --conf-path \u662f string \u914d\u7f6e\u8def\u5f84 \u6ce8: conf_path\u4e3a\u53c2\u6570\u8def\u5f84\uff0c\u5177\u4f53\u53c2\u6570\u5982\u4e0b \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 engine \u662f string \u5b58\u50a8\u5f15\u64ce, \u652f\u6301\"HDFS\", \"MYSQL\", \"PATH\" adress \u662f object \u771f\u5b9e\u5b58\u50a8\u5730\u5740 drop \u5426 int \u8986\u76d6\u4ee5\u524d\u7684\u4fe1\u606f head \u5426 int \u662f\u5426\u6709\u6570\u636e\u8868\u5934 id_delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26 id_column \u5426 string id\u5b57\u6bb5 feature_column \u5426 array \u7279\u5f81\u5b57\u6bb5 mete\u4fe1\u606f \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e input_format \u5426 string \u6570\u636e\u683c\u5f0f(danse\u3001svmlight\u3001tag:value)\uff0c\u7528\u6765\u5224\u65ad delimiter \u5426 string \u6570\u636e\u5206\u9694\u7b26,\u9ed8\u8ba4\",\" tag_with_value \u5426 bool \u5bf9tag\u7684\u6570\u636e\u683c\u5f0f\u751f\u6548\uff0c\u662f\u5426\u643a\u5e26value tag_value_delimiter \u5426 string tag:value\u6570\u636e\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\":\" with_match_id \u5426 bool \u662f\u5426\u643a\u5e26match id id_list \u5426 object id\u5217\u540d\u79f0\uff0c\u5f00\u542fextend_sid\u4e0b\u751f\u6548\uff0c\u5982\uff1a[\"imei\", \"phone\"] id_range \u5426 object \u5bf9\u4e8etag/svmlight\u683c\u5f0f\u6570\u636e\uff0c\u54ea\u51e0\u5217\u4e3aid exclusive_data_type \u5426 string \u7279\u6b8a\u7c7b\u578b\u6570\u636e\u5217\u683c\u5f0f data_type \u5426 string \u5217\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\"float64 with_label \u5426 bool \u662f\u5426\u6709\u6807\u7b7e\uff0c\u9ed8\u8ba4False label_name \u5426 string \u6807\u7b7e\u540d\uff0c\u9ed8\u8ba4\"y\" label_type \u5426 string \u6807\u7b7e\u7c7b\u578b, \u9ed8\u8ba4\"int\" \u6ce8\uff1a\u57281.9.0\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u82e5\u5728table bind\u9636\u6bb5\u4f20\u5165meta\u53c2\u6570\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u751f\u6210\u7279\u5f81\u7684\u533f\u540d\u4fe1\u606f\u3002 \u5f53\u6570\u636e\u7ecf\u8fc7\u4e86\u4e00\u6b21reader\u7ec4\u4ef6\u540e\u4f1a\u66f4\u65b0\u539f\u59cb\u6570\u636e\u7684\u7279\u5f81\u533f\u540d\u4fe1\u606f \u6837\u4f8b hdfs { \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"engine\" : \"HDFS\" , \"address\" : { \"name_node\" : \"hdfs://fate-cluster\" , \"path\" : \"/data/breast_hetero_guest.csv\" }, \"id_delimiter\" : \",\" , \"head\" : 1 , \"partitions\" : 10 } mysql { \"engine\" : \"MYSQL\" , \"address\" : { \"user\" : \"fate\" , \"passwd\" : \"fate\" , \"host\" : \"127.0.0.1\" , \"port\" : 3306 , \"db\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" }, \"namespace\" : \"experiment\" , \"name\" : \"breast_hetero_guest\" , \"head\" : 1 , \"id_delimiter\" : \",\" , \"partitions\" : 10 , \"id_column\" : \"id\" , \"feature_column\" : \"y,x0,x1,x2,x3,x4,x5,x6,x7,x8,x9\" } PATH { \"namespace\" : \"xxx\" , \"name\" : \"xxx\" , \"engine\" : \"PATH\" , \"address\" : { \"path\" : \"xxx\" } } \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"bind"},{"location":"zh/cli/table/#disable","text":"\u53ef\u901a\u8fc7table disable\u5c06\u8868\u7f6e\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 flow table disable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable"},{"location":"zh/cli/table/#enable","text":"\u53ef\u901a\u8fc7table enable\u5c06\u8868\u7f6e\u4e3a\u53ef\u7528\u72b6\u6001 flow table enable [ options ] \u9009\u9879 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e table_name -t --table-name \u662f string fate\u8868\u540d namespace -n --namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"enable"},{"location":"zh/cli/table/#disable-delete","text":"\u53ef\u901a\u8fc7disable-delete\u5220\u9664\u5f53\u524d\u4e0d\u53ef\u7528\u7684\u8868 flow table disable-delete \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [ { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" }, { \"namespace\" : \"xxx\" , \"table_name\" : \"xxx\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"disable-delete"},{"location":"zh/cli/tag/","text":"Tag \u00b6 create \u00b6 \u521b\u5efa\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 tag_\u53c2\u6570\u4ecb\u7ecd -d --tag-desc \u5426 \u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag create -t tag1 -d \"This is the \u53c2\u6570\u4ecb\u7ecd of tag1.\" flow tag create -t tag2 update \u00b6 \u66f4\u65b0\u6807\u7b7e\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 new_tag_name --new-tag-name \u5426 \u65b0\u6807\u7b7e\u540d 3 new_tag_desc --new-tag-desc \u5426 \u65b0\u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the new \u53c2\u6570\u4ecb\u7ecd.\" list \u00b6 \u5c55\u793a\u6807\u7b7e\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow tag list flow tag list -l 3 query \u00b6 \u68c0\u7d22\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 with_model --with-model \u5426 \u5982\u679c\u6307\u5b9a\uff0c\u5177\u6709\u8be5\u6807\u7b7e\u7684\u6a21\u578b\u4fe1\u606f\u5c06\u88ab\u5c55\u793a \u6837\u4f8b flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model delete \u00b6 \u5220\u9664\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d \u6837\u4f8b flow tag delete -t tag1","title":"Tag"},{"location":"zh/cli/tag/#create","text":"\u521b\u5efa\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 tag_\u53c2\u6570\u4ecb\u7ecd -d --tag-desc \u5426 \u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag create -t tag1 -d \"This is the \u53c2\u6570\u4ecb\u7ecd of tag1.\" flow tag create -t tag2","title":"create"},{"location":"zh/cli/tag/#update","text":"\u66f4\u65b0\u6807\u7b7e\u4fe1\u606f\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 new_tag_name --new-tag-name \u5426 \u65b0\u6807\u7b7e\u540d 3 new_tag_desc --new-tag-desc \u5426 \u65b0\u6807\u7b7e\u4ecb\u7ecd \u6837\u4f8b flow tag update -t tag1 --new-tag-name tag2 flow tag update -t tag1 --new-tag-desc \"This is the new \u53c2\u6570\u4ecb\u7ecd.\"","title":"update"},{"location":"zh/cli/tag/#list","text":"\u5c55\u793a\u6807\u7b7e\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow tag list flow tag list -l 3","title":"list"},{"location":"zh/cli/tag/#query","text":"\u68c0\u7d22\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d 2 with_model --with-model \u5426 \u5982\u679c\u6307\u5b9a\uff0c\u5177\u6709\u8be5\u6807\u7b7e\u7684\u6a21\u578b\u4fe1\u606f\u5c06\u88ab\u5c55\u793a \u6837\u4f8b flow tag query -t $TAG_NAME flow tag query -t $TAG_NAME --with-model","title":"query"},{"location":"zh/cli/tag/#delete","text":"\u5220\u9664\u6807\u7b7e\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 tag_name -t --tag-name \u662f \u6807\u7b7e\u540d \u6837\u4f8b flow tag delete -t tag1","title":"delete"},{"location":"zh/cli/task/","text":"Task \u00b6 query \u00b6 \u68c0\u7d22Task\u4fe1\u606f \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 component_name -cpn --component_name \u5426 \u7ec4\u4ef6\u540d 5 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete list \u00b6 \u5c55\u793aTask\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow task list flow task list -l 25","title":"Task"},{"location":"zh/cli/task/#query","text":"\u68c0\u7d22Task\u4fe1\u606f \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 job_id -j --job_id \u5426 Job ID 2 role -r --role \u5426 \u89d2\u8272 3 party_id -p --party_id \u5426 Party ID 4 component_name -cpn --component_name \u5426 \u7ec4\u4ef6\u540d 5 status -s --status \u5426 \u4efb\u52a1\u72b6\u6001 \u6837\u4f8b flow task query -j $JOB_ID -p 9999 -r guest flow task query -cpn hetero_feature_binning_0 -s complete","title":"query"},{"location":"zh/cli/task/#list","text":"\u5c55\u793aTask\u5217\u8868\u3002 \u9009\u9879 \u7f16\u53f7 \u53c2\u6570 \u77ed\u683c\u5f0f \u957f\u683c\u5f0f \u5fc5\u8981\u53c2\u6570 \u53c2\u6570\u4ecb\u7ecd 1 limit -l --limit \u5426 \u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u9650\u5236\uff08\u9ed8\u8ba4\uff1a10\uff09 \u6837\u4f8b flow task list flow task list -l 25","title":"list"},{"location":"zh/cli/tracking/","text":"Tracking \u00b6 metrics \u00b6 \u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u4ea7\u751f\u7684\u6240\u6709\u6307\u6807\u540d\u79f0\u5217\u8868 flow tracking metrics [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" } metric-all \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u4efb\u52a1\u7684\u6240\u6709\u8f93\u51fa\u6307\u6807 flow tracking metric-all [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa(\u7bc7\u5e45\u6709\u9650\uff0c\u4ec5\u663e\u793a\u90e8\u5206\u6307\u6807\u7684\u6570\u636e\u4e14\u6570\u7ec4\u578b\u6570\u636e\u4e2d\u95f4\u7701\u7565\u4e86\u4e00\u4e9b\u503c): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" } parameters \u00b6 \u63d0\u4ea4\u4f5c\u4e1a\u540e\uff0c\u7cfb\u7edf\u4f9d\u636ejob conf\u4e2d\u7684component_parameters\u7ed3\u5408\u7cfb\u7edf\u9ed8\u8ba4\u7ec4\u4ef6\u53c2\u6570\uff0c\u6700\u7ec8\u89e3\u6790\u5f97\u5230\u7684\u5b9e\u9645\u7ec4\u4ef6\u4efb\u52a1\u8fd0\u884c\u53c2\u6570 flow tracking parameters [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } output-data \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u8f93\u51fa flow tracking output-data [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 -o, --output-path \u662f string \u8f93\u51fa\u6570\u636e\u7684\u5b58\u653e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o ./ \u8f93\u51fa: { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory\" } output-data-table \u00b6 \u83b7\u53d6\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u8868\u540d flow tracking output-data-table [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" } output-model \u00b6 \u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u7684\u8f93\u51fa\u6a21\u578b flow tracking output-model [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" } get-summary \u00b6 \u6bcf\u4e2a\u7ec4\u4ef6\u5141\u8bb8\u8bbe\u7f6e\u4e00\u4e9b\u6458\u8981\u4fe1\u606f\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u5206\u6790 flow tracking get-summary [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-source \u00b6 \u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u7236\u8868\u53ca\u6e90\u8868 flow table tracking-source [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero_lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" } tracking-job \u00b6 \u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u4f7f\u7528\u60c5\u51b5 flow table tracking-job [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"count\" : 2 , \"job\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"Tracking"},{"location":"zh/cli/tracking/#metrics","text":"\u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u4ea7\u751f\u7684\u6240\u6709\u6307\u6807\u540d\u79f0\u5217\u8868 flow tracking metrics [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e \u6837\u4f8b flow tracking metrics -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa: { \"data\" : { \"train\" : [ \"hetero_lr_0\" , \"hetero_lr_0_ks_fpr\" , \"hetero_lr_0_ks_tpr\" , \"hetero_lr_0_lift\" , \"hetero_lr_0_gain\" , \"hetero_lr_0_accuracy\" , \"hetero_lr_0_precision\" , \"hetero_lr_0_recall\" , \"hetero_lr_0_roc\" , \"hetero_lr_0_confusion_mat\" , \"hetero_lr_0_f1_score\" , \"hetero_lr_0_quantile_pr\" ] }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metrics"},{"location":"zh/cli/tracking/#metric-all","text":"\u83b7\u53d6\u7ec4\u4ef6\u4efb\u52a1\u7684\u6240\u6709\u8f93\u51fa\u6307\u6807 flow tracking metric-all [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking metric-all -j 202111081618357358520 -r guest -p 9999 -cpn evaluation_0 \u8f93\u51fa(\u7bc7\u5e45\u6709\u9650\uff0c\u4ec5\u663e\u793a\u90e8\u5206\u6307\u6807\u7684\u6570\u636e\u4e14\u6570\u7ec4\u578b\u6570\u636e\u4e2d\u95f4\u7701\u7565\u4e86\u4e00\u4e9b\u503c): { \"data\" : { \"train\" : { \"hetero_lr_0\" : { \"data\" : [ [ \"auc\" , 0.293893 ], [ \"ks\" , 0.0 ] ], \"meta\" : { \"metric_type\" : \"EVALUATION_SUMMARY\" , \"name\" : \"hetero_lr_0\" } }, \"hetero_lr_0_accuracy\" : { \"data\" : [ [ 0.0 , 0.372583 ], [ 0.99 , 0.616872 ] ], \"meta\" : { \"curve_name\" : \"hetero_lr_0\" , \"metric_type\" : \"ACCURACY_EVALUATION\" , \"name\" : \"hetero_lr_0_accuracy\" , \"thresholds\" : [ 0.999471 , 0.002577 ] } }, \"hetero_lr_0_confusion_mat\" : { \"data\" : [], \"meta\" : { \"fn\" : [ 357 , 0 ], \"fp\" : [ 0 , 212 ], \"metric_type\" : \"CONFUSION_MAT\" , \"name\" : \"hetero_lr_0_confusion_mat\" , \"thresholds\" : [ 0.999471 , 0.0 ], \"tn\" : [ 212 , 0 ], \"tp\" : [ 0 , 357 ] } } } }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"metric-all"},{"location":"zh/cli/tracking/#parameters","text":"\u63d0\u4ea4\u4f5c\u4e1a\u540e\uff0c\u7cfb\u7edf\u4f9d\u636ejob conf\u4e2d\u7684component_parameters\u7ed3\u5408\u7cfb\u7edf\u9ed8\u8ba4\u7ec4\u4ef6\u53c2\u6570\uff0c\u6700\u7ec8\u89e3\u6790\u5f97\u5230\u7684\u5b9e\u9645\u7ec4\u4ef6\u4efb\u52a1\u8fd0\u884c\u53c2\u6570 flow tracking parameters [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking parameters -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"ComponentParam\" : { \"_feeded_deprecated_params\" : [], \"_is_raw_conf\" : false , \"_name\" : \"HeteroLR#hetero_lr_0\" , \"_user_feeded_params\" : [ \"batch_size\" , \"penalty\" , \"max_iter\" , \"learning_rate\" , \"init_param\" , \"optimizer\" , \"init_param.init_method\" , \"alpha\" ], \"alpha\" : 0.01 , \"batch_size\" : 320 , \"callback_param\" : { \"callbacks\" : [], \"early_stopping_rounds\" : null , \"metrics\" : [], \"save_freq\" : 1 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"cv_param\" : { \"history_value_type\" : \"score\" , \"mode\" : \"hetero\" , \"n_splits\" : 5 , \"need_cv\" : false , \"output_fold_history\" : true , \"random_seed\" : 1 , \"role\" : \"guest\" , \"shuffle\" : true }, \"decay\" : 1 , \"decay_sqrt\" : true , \"early_stop\" : \"diff\" , \"early_stopping_rounds\" : null , \"encrypt_param\" : { \"key_length\" : 1024 , \"method\" : \"Paillier\" }, \"encrypted_mode_calculator_param\" : { \"mode\" : \"strict\" , \"re_encrypted_rate\" : 1 }, \"floating_point_precision\" : 23 , \"init_param\" : { \"fit_intercept\" : true , \"init_const\" : 1 , \"init_method\" : \"random_uniform\" , \"random_seed\" : null }, \"learning_rate\" : 0.15 , \"max_iter\" : 3 , \"metrics\" : [ \"auc\" , \"ks\" ], \"multi_class\" : \"ovr\" , \"optimizer\" : \"rmsprop\" , \"penalty\" : \"L2\" , \"predict_param\" : { \"threshold\" : 0.5 }, \"sqn_param\" : { \"memory_M\" : 5 , \"random_seed\" : null , \"sample_size\" : 5000 , \"update_interval_L\" : 3 }, \"stepwise_param\" : { \"direction\" : \"both\" , \"max_step\" : 10 , \"mode\" : \"hetero\" , \"need_stepwise\" : false , \"nvmax\" : null , \"nvmin\" : 2 , \"role\" : \"guest\" , \"score_name\" : \"AIC\" }, \"tol\" : 0.0001 , \"use_first_metric_only\" : false , \"validation_freqs\" : null }, \"module\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"parameters"},{"location":"zh/cli/tracking/#output-data","text":"\u83b7\u53d6\u7ec4\u4ef6\u8f93\u51fa flow tracking output-data [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 -o, --output-path \u662f string \u8f93\u51fa\u6570\u636e\u7684\u5b58\u653e\u8def\u5f84 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 -o ./ \u8f93\u51fa: { \"retcode\" : 0 , \"directory\" : \"$FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data\" , \"retmsg\" : \"Download successfully, please check $FATE_PROJECT_BASE/job_202111081618357358520_hetero_lr_0_guest_9999_output_data directory\" }","title":"output-data"},{"location":"zh/cli/tracking/#output-data-table","text":"\u83b7\u53d6\u7ec4\u4ef6\u7684\u8f93\u51fa\u6570\u636e\u8868\u540d flow tracking output-data-table [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-data-table -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : [ { \"data_name\" : \"train\" , \"table_name\" : \"9688fa00406c11ecbd0bacde48001122\" , \"table_namespace\" : \"output_data_202111081618357358520_hetero_lr_0_0\" } ], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-data-table"},{"location":"zh/cli/tracking/#output-model","text":"\u83b7\u53d6\u67d0\u4e2a\u7ec4\u4ef6\u4efb\u52a1\u7684\u8f93\u51fa\u6a21\u578b flow tracking output-model [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking output-model -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"bestIteration\" : -1 , \"encryptedWeight\" : {}, \"header\" : [ \"x0\" , \"x1\" , \"x2\" , \"x3\" , \"x4\" , \"x5\" , \"x6\" , \"x7\" , \"x8\" , \"x9\" ], \"intercept\" : 0.24451607054764884 , \"isConverged\" : false , \"iters\" : 3 , \"lossHistory\" : [], \"needOneVsRest\" : false , \"weight\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 } }, \"meta\" : { \"meta_data\" : { \"alpha\" : 0.01 , \"batchSize\" : \"320\" , \"earlyStop\" : \"diff\" , \"fitIntercept\" : true , \"learningRate\" : 0.15 , \"maxIter\" : \"3\" , \"needOneVsRest\" : false , \"optimizer\" : \"rmsprop\" , \"partyWeight\" : 0.0 , \"penalty\" : \"L2\" , \"reEncryptBatches\" : \"0\" , \"revealStrategy\" : \"\" , \"tol\" : 0.0001 }, \"module_name\" : \"HeteroLR\" }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"output-model"},{"location":"zh/cli/tracking/#get-summary","text":"\u6bcf\u4e2a\u7ec4\u4ef6\u5141\u8bb8\u8bbe\u7f6e\u4e00\u4e9b\u6458\u8981\u4fe1\u606f\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u5206\u6790 flow tracking get-summary [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e -j, --job-id \u662f string \u4f5c\u4e1aid -r, --role \u662f string \u53c2\u4e0e\u89d2\u8272 -p, --partyid \u662f string \u53c2\u4e0e\u65b9id -cpn, --component-name \u662f string \u7ec4\u4ef6\u540d\uff0c\u4e0ejob dsl\u4e2d\u7684\u4fdd\u6301\u4e00\u81f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data dict \u8fd4\u56de\u6570\u636e jobId string \u4f5c\u4e1aid \u6837\u4f8b flow tracking get-summary -j 202111081618357358520 -r guest -p 9999 -cpn hetero_lr_0 \u8f93\u51fa: { \"data\" : { \"best_iteration\" : -1 , \"coef\" : { \"x0\" : 0.04639947589856569 , \"x1\" : 0.19899685467216902 , \"x2\" : -0.18133550931649306 , \"x3\" : 0.44928868756862206 , \"x4\" : 0.05285905125502288 , \"x5\" : 0.319187932844076 , \"x6\" : 0.42578983446194013 , \"x7\" : -0.025765956309895477 , \"x8\" : -0.3699194462271593 , \"x9\" : -0.1212094750908295 }, \"intercept\" : 0.24451607054764884 , \"is_converged\" : false , \"one_vs_rest\" : false }, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"get-summary"},{"location":"zh/cli/tracking/#tracking-source","text":"\u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u7236\u8868\u53ca\u6e90\u8868 flow table tracking-source [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : [{ \"parent_table_name\" : \"61210fa23c8d11ec849a5254004fdc71\" , \"parent_table_namespace\" : \"output_data_202111031759294631020_hetero_lr_0_0\" , \"source_table_name\" : \"breast_hetero_guest\" , \"source_table_namespace\" : \"experiment\" }], \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-source"},{"location":"zh/cli/tracking/#tracking-job","text":"\u7528\u4e8e\u67e5\u8be2\u67d0\u5f20\u8868\u7684\u4f7f\u7528\u60c5\u51b5 flow table tracking-job [ options ] \u9009\u9879 \u53c2\u6570\u540d \u5fc5\u9009 \u7c7b\u578b \u8bf4\u660e name \u662f string fate\u8868\u540d namespace \u662f string fate\u8868\u547d\u540d\u7a7a\u95f4 \u8fd4\u56de \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e retcode int \u8fd4\u56de\u7801 retmsg string \u8fd4\u56de\u4fe1\u606f data object \u8fd4\u56de\u6570\u636e \u6837\u4f8b { \"data\" : { \"count\" : 2 , \"job\" :[ \"202111052115375327830\" , \"202111031816501123160\" ]}, \"retcode\" : 0 , \"retmsg\" : \"success\" }","title":"tracking-job"}]}