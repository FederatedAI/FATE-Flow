swagger: '2.0'
basePath: /v2
paths:
  /client/client/create:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseClientInfo'
      operationId: post_create_client_app
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqAppName'
      tags:
        - client
  /client/client/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseStatus'
      operationId: post_delete_client_app
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqAppId'
      tags:
        - client
  /client/client/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseClientInfo'
      operationId: get_client_QueryClientApp
      parameters:
        - required: false
          description: App ID for the client
          in: query
          name: app_id
          type: string
        - required: false
          description: App name for the client
          in: query
          name: app_name
          type: string
      tags:
        - client
  /client/partner/create:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponsePartnerInfo'
      operationId: post_create_partner_app
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqPartnerCreate'
      tags:
        - client
  /client/partner/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseStatus'
      operationId: post_delete_partner_app
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqPartyId'
      tags:
        - client
  /client/partner/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseClientInfo'
      operationId: get_client_QueryPartnerApp
      parameters:
        - required: false
          description: Site ID
          in: query
          name: party_id
          type: string
      tags:
        - client
  /client/site/create:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseClientInfo'
      operationId: post_create_site_app
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqPartyId'
      tags:
        - client
  /client/site/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseStatus'
      operationId: post_delete_site_app
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqPartyId'
      tags:
        - client
  /client/site/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseClientInfo'
      operationId: get_client_QuerySiteApp
      parameters:
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
      tags:
        - client
  /data/component/dataframe/transformer:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseUploadData'
      operationId: post_transformer_data
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqTransformerData'
      tags:
        - data
  /data/component/download:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseComponentDownload'
      operationId: post_download_data
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqComponentDownload'
      tags:
        - data
  /data/component/upload:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseUploadData'
      operationId: post_upload_data
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqComponentUpload'
      tags:
        - data
  /data/component/upload/file:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseUploadData'
      operationId: post_upload_data_file
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqComponentUploadFile'
      tags:
        - data
  /data/download:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseUploadData'
      operationId: get_data_Download
      parameters:
        - required: true
          description: Name of the data table
          in: query
          name: name
          type: string
        - required: true
          description: Namespace of the data table
          in: query
          name: namespace
          type: string
        - required: false
          description: Whether the first row of the file is the data's head
          in: query
          name: header
          type: string
      tags:
        - data
  /job/clean:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseJobClean'
      operationId: post_clean_job
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqJobId'
      tags:
        - job
  /job/dag/dependency:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonDictModel'
      operationId: get_job_DagDependency
      parameters:
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
      tags:
        - job
  /job/data/view:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseJobClean'
      operationId: get_data_view
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqDataView'
      tags:
        - job
  /job/list/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonDictModel'
      operationId: get_job_QueryJobList
      parameters:
        - required: false
          description: Limit of rows or entries
          in: query
          name: limit
          type: string
        - required: false
          description: Page number
          in: query
          name: page
          type: string
        - required: false
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: false
          description: Description information
          in: query
          name: description
          type: string
        - required: false
          description: Participant information
          in: query
          name: partner
          type: string
        - required: false
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: false
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: false
          description: Status of the job or task
          in: query
          name: status
          type: string
        - required: false
          description: Field name for sorting
          in: query
          name: order_by
          type: string
        - required: false
          description: 'Sorting order: asc/desc'
          in: query
          name: order
          type: string
        - required: false
          description: Username provided by the upper-level system
          in: header
          name: user_name
          type: string
      tags:
        - job
  /job/log/download:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_download_job_logs
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqJobId'
      produces:
        - application/gzip
      tags:
        - job
  /job/notes/add:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_add_notes
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqNodesAdd'
      tags:
        - job
  /job/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonListToDictModel'
      operationId: get_job_QueryJob
      parameters:
        - required: false
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: false
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: false
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: false
          description: Status of the job or task
          in: query
          name: status
          type: string
        - required: false
          description: Username provided by the upper-level system
          in: header
          name: user_name
          type: string
      tags:
        - job
  /job/queue/clean:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseJobClean'
      operationId: post_clean_queue
      tags:
        - job
  /job/rerun:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_request_rerun_job
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqJobId'
      tags:
        - job
  /job/stop:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_request_stop_job
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqJobId'
      tags:
        - job
  /job/submit:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseJobSubmit'
      operationId: post_submit_job
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqSubmitJob'
      tags:
        - job
  /job/task/list/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonDictModel'
      operationId: get_job_QueryTaskList
      parameters:
        - required: false
          description: Limit of rows or entries
          in: query
          name: limit
          type: string
        - required: false
          description: Page number
          in: query
          name: page
          type: string
        - required: false
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: false
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: false
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: false
          description: Task name
          in: query
          name: task_name
          type: string
        - required: false
          description: Field name for sorting
          in: query
          name: order_by
          type: string
        - required: false
          description: 'Sorting order: asc/desc'
          in: query
          name: order
          type: string
      tags:
        - job
  /job/task/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonListToDictModel'
      operationId: get_job_QueryTask
      parameters:
        - required: false
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: false
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: false
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: false
          description: Status of the job or task
          in: query
          name: status
          type: string
        - required: false
          description: Task name
          in: query
          name: task_name
          type: string
        - required: false
          description: Task ID
          in: query
          name: task_id
          type: string
        - required: false
          description: Task version
          in: query
          name: task_version
          type: string
      tags:
        - job
  /log/count:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonDataModel'
      operationId: get_log_Count
      parameters:
        - required: true
          description: Log level or type
          in: query
          name: log_type
          type: string
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: false
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: false
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: false
          description: Task name
          in: query
          name: task_name
          type: string
        - required: false
          description: Instance ID of the FATE Flow service
          in: query
          name: instance_id
          type: string
      tags:
        - log
  /log/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonListDictModel'
      operationId: get_log_Get
      parameters:
        - required: true
          description: Log level or type
          in: query
          name: log_type
          type: string
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: false
          description: Task name
          in: query
          name: task_name
          type: string
        - required: false
          description: Starting line number
          in: query
          name: begin
          type: string
        - required: false
          description: Ending line number
          in: query
          name: end
          type: string
        - required: false
          description: Instance ID of the FATE Flow service
          in: query
          name: instance_id
          type: string
      tags:
        - log
  /model/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModelDelete'
      operationId: post_delete_model
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqModelDelete'
      tags:
        - model
  /model/export:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_export
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqModelExport'
      tags:
        - model
  /model/import:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_import_model
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqModelImport'
      tags:
        - model
  /model/load:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_load
      tags:
        - model
  /model/migrate:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_migrate
      tags:
        - model
  /model/restore:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_restore
      tags:
        - model
  /model/store:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_store
      tags:
        - model
  /output/data/display:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseTableDisplay'
      operationId: get_output_OutputDataDisplay
      parameters:
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: true
          description: Task name
          in: query
          name: task_name
          type: string
      tags:
        - output
  /output/data/download:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: get_output_OutputDataDownload
      parameters:
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: true
          description: Task name
          in: query
          name: task_name
          type: string
        - required: false
          description: Primary key for output data or model of the task
          in: query
          name: output_key
          type: string
      produces:
        - application/gzip
      tags:
        - output
  /output/data/table:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseDataTable'
      operationId: get_output_OutputDataTable
      parameters:
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: true
          description: Task name
          in: query
          name: task_name
          type: string
      tags:
        - output
  /output/metric/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseDeleteMetric'
      operationId: post_delete_metric
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqMetricDelete'
      tags:
        - output
  /output/metric/key/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OutputQuery'
      operationId: get_output_QueryMetricKey
      parameters:
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: true
          description: Task name
          in: query
          name: task_name
          type: string
      tags:
        - output
  /output/metric/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonDictModel'
      operationId: get_output_QueryMetric
      parameters:
        - required: true
          description: Site ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: true
          description: Task name
          in: query
          name: task_name
          type: string
        - required: false
          description: Filter conditions
          in: query
          name: filters
          type: string
      tags:
        - output
  /output/model/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_output_delete_model
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqMetricDelete'
      tags:
        - output
  /output/model/download:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: get_output_Download
      parameters:
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: true
          description: Task name
          in: query
          name: task_name
          type: string
      produces:
        - application/x-tar
      tags:
        - output
  /output/model/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseFateFlow'
      operationId: get_output_QueryModel
      parameters:
        - required: true
          description: Job ID
          in: query
          name: job_id
          type: string
        - required: true
          description: 'Role of the participant: guest/host/arbiter/local'
          in: query
          name: role
          type: string
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: true
          description: Task name
          in: query
          name: task_name
          type: string
      tags:
        - output
  /permission/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseGrantPermission'
      operationId: post_delete
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqGrant'
      tags:
        - permission
  /permission/grant:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseGrantPermission'
      operationId: post_grant
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqGrant'
      tags:
        - permission
  /permission/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponsePermissionModel'
      operationId: get_permission_Query
      parameters:
        - required: true
          description: App ID
          in: query
          name: app_id
          type: string
      tags:
        - permission
  /permission/resource/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_delete_resource_permission
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqResourceGrant'
      tags:
        - permission
  /permission/resource/grant:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_grant_resource_permission
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqResourceGrant'
      tags:
        - permission
  /permission/resource/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseResourceModel'
      operationId: get_permission_QueryResourcePrivilege
      parameters:
        - required: true
          description: Site ID
          in: query
          name: party_id
          type: string
        - required: false
          description: Component name
          in: query
          name: component
          type: string
        - required: false
          description: List of datasets
          in: query
          name: dataset
          type: string
      tags:
        - permission
  /permission/role/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonListModel'
      operationId: get_permission_QueryRoles
      tags:
        - permission
  /provider/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseGrantPermission'
      operationId: post_provider_Delete
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqProviderDelete'
      tags:
        - provider
  /provider/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonDictModel'
      operationId: get_provider_Query
      parameters:
        - required: false
          description: Component provider name
          in: query
          name: name
          type: string
        - required: false
          description: Component running mode
          in: query
          name: device
          type: string
        - required: false
          description: Component version
          in: query
          name: version
          type: string
        - required: false
          description: Registered algorithm full name, provider + ':' + version + '@' + running mode, e.g., fate:2.0.0@local
          in: query
          name: provider_name
          type: string
      tags:
        - provider
  /provider/register:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_register
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqProviderRegister'
      tags:
        - provider
  /server/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_delete_server
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqServerDelete'
      tags:
        - server
  /server/fateflow:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseFateFlow'
      operationId: get_server_FateFlowServerInfo
      tags:
        - server
  /server/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonListModel'
      operationId: get_server_QueryServer
      parameters:
        - required: true
          description: Server name
          in: query
          name: server_name
          type: string
      tags:
        - server
  /server/query/all:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseFateFlow'
      operationId: get_server_QueryAll
      tags:
        - server
  /server/registry:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseServerRegister'
      operationId: post_register_server
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqServerRegistry'
      tags:
        - server
  /server/service/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_delete_service
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqServiceRegistry'
      tags:
        - server
  /server/service/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseFateFlow'
      operationId: get_server_QueryService
      parameters:
        - required: true
          description: Server name
          in: query
          name: server_name
          type: string
        - required: true
          description: Service name
          in: query
          name: service_name
          type: string
      tags:
        - server
  /server/service/registry:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_registry_service
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqServiceRegistry'
      tags:
        - server
  /site/info/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseFateFlow'
      operationId: get_site_QuerySiteInfo
      tags:
        - site
  /table/bind/path:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_bind_path
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqBindPath'
      tags:
        - table
  /table/delete:
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CommonModel'
      operationId: post_delete_table
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ReqServiceRegistry'
      tags:
        - table
  /table/query:
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResponseFateFlow'
      operationId: get_table_QueryTable
      parameters:
        - required: true
          description: Namespace of the data table
          in: query
          name: namespace
          type: string
        - required: true
          description: Name of the data table
          in: query
          name: name
          type: string
        - required: false
          description: Whether to return preview data
          in: query
          name: display
          type: string
      tags:
        - table
info:
  title: FATE Flow restful api
  version: 2.0.0
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: client
    description: client-Related Operations
  - name: data
    description: data-Related Operations
  - name: job
    description: job-Related Operations
  - name: log
    description: log-Related Operations
  - name: model
    description: model-Related Operations
  - name: output
    description: output-Related Operations
  - name: permission
    description: permission-Related Operations
  - name: provider
    description: provider-Related Operations
  - name: server
    description: server-Related Operations
  - name: site
    description: site-Related Operations
  - name: table
    description: table-Related Operations
definitions:
  ReqAppName:
    required:
      - app_name
    properties:
      app_name:
        type: string
        description: App name for the client
    type: object
  ResponseClientInfo:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/ClientInfo'
        type: object
  CommonModel:
    properties:
      message:
        type: string
      code:
        type: integer
    type: object
  ClientInfo:
    properties:
      app_name:
        type: string
      app_id:
        type: string
      app_token:
        type: string
      app_type:
        type: string
    type: object
  ReqAppId:
    required:
      - app_id
    properties:
      app_id:
        type: string
        description: App ID for the client
    type: object
  ResponseStatus:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/Status'
        type: object
  Status:
    properties:
      status:
        type: integer
    type: object
  ReqPartyId:
    required:
      - party_id
    properties:
      party_id:
        type: string
        description: Site ID
    type: object
  ReqPartnerCreate:
    required:
      - app_id
      - app_token
      - party_id
    properties:
      party_id:
        type: string
        description: Site ID
      app_id:
        type: string
        description: App ID for the site
      app_token:
        type: string
        description: App token for the site
    type: object
  ResponsePartnerInfo:
    properties:
      message:
        type: string
      code:
        type: integer
    x-mask: '{data}'
    type: object
  ReqComponentUpload:
    required:
      - file
      - head
      - partitions
    properties:
      file:
        type: string
        description: File path on the server
      head:
        type: boolean
        description: Whether the first row of the file is the data's head
      partitions:
        type: integer
        description: Number of data partitions
      meta:
        type: object
        description: Metadata of the data
      extend_sid:
        type: boolean
        description: Whether to automatically fill a column as data row ID
      namespace:
        type: string
        description: Namespace of the data table
      name:
        type: string
        description: Name of the data table
    type: object
  ResponseUploadData:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/dataInfo'
          job_id:
            type: string
        type: object
  dataInfo:
    properties:
      name:
        type: string
      namespace:
        type: string
    type: object
  ReqComponentUploadFile:
    required:
      - head
      - partitions
    properties:
      head:
        type: boolean
        description: Whether the first row of the file is the data's head
      partitions:
        type: integer
        description: Number of data partitions
      meta:
        type: object
        description: Metadata of the data
      extend_sid:
        type: boolean
        description: Whether to automatically fill a column as data row ID
      namespace:
        type: string
        description: Namespace of the data table
      name:
        type: string
        description: Name of the data table
    type: object
  ReqComponentDownload:
    required:
      - name
      - namespace
    properties:
      namespace:
        type: string
        description: Namespace of the data table
      name:
        type: string
        description: Name of the data table
      path:
        type: string
        description: File path on the server
    type: object
  ResponseComponentDownload:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/ComponentInfo'
          job_id:
            type: string
        type: object
  ComponentInfo:
    properties:
      name:
        type: string
      namespace:
        type: string
      path:
        type: string
    type: object
  ReqTransformerData:
    required:
      - name
      - namespace
    properties:
      data_warehouse:
        type: object
        description: 'Data output, content like: {name: xxx, namespace: xxx}'
      namespace:
        type: string
        description: Namespace of the data table
      name:
        type: string
        description: Name of the data table
      site_name:
        type: string
        description: Site name
      drop:
        type: boolean
        description: Whether to destroy data if it already exists
    type: object
  ReqSubmitJob:
    required:
      - dag_schema
    properties:
      dag_schema:
        type: object
        description: Definition and configuration of jobs, including the configuration of multiple tasks
      user_name:
        type: string
        description: Name of the data table
    type: object
  ResponseJobSubmit:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/JobInfo'
          job_id:
            type: string
        type: object
  JobInfo:
    properties:
      model_id:
        type: string
      model_version:
        type: string
    type: object
  CommonListToDictModel:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            type: array
            items:
              type: object
        type: object
  ReqJobId:
    required:
      - job_id
    properties:
      job_id:
        type: string
        description: Job ID
    type: object
  CommonDictModel:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            type: object
        type: object
  ResponseJobClean:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/queueInfo'
        type: object
  queueInfo:
    properties:
      job_id:
        type: string
    type: object
  ReqDataView:
    required:
      - job_id
      - party_id
      - role
    properties:
      job_id:
        type: string
        description: Job ID
      role:
        type: string
        description: 'Role of the participant: guest/host/arbiter/local'
      party_id:
        type: string
        description: Site ID
    type: object
  ReqNodesAdd:
    required:
      - job_id
      - notes
      - party_id
      - role
    properties:
      job_id:
        type: string
        description: Job ID
      role:
        type: string
        description: 'Role of the participant: guest/host/arbiter/local'
      party_id:
        type: string
        description: Site ID
      notes:
        type: string
        description: Tags and customizable information for tasks
    type: object
  CommonDataModel:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            type: integer
        type: object
  CommonListDictModel:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            type: array
            items:
              type: object
        type: object
  ReqModelExport:
    required:
      - model_id
      - model_version
      - party_id
      - path
      - role
    properties:
      model_id:
        type: string
        description: Model ID
      model_version:
        type: string
        description: Model version
      party_id:
        type: string
        description: Site ID
      role:
        type: string
        description: 'Role of the participant: guest/host/arbiter/local'
      path:
        type: string
        description: Directory path on the server
    type: object
  ReqModelImport:
    required:
      - model_id
      - model_version
    properties:
      model_id:
        type: string
        description: Model ID
      model_version:
        type: string
        description: Model version
    type: object
  ReqModelDelete:
    allOf:
      - $ref: '#/definitions/ReqModelImport'
      - properties:
          role:
            type: string
            description: 'Role of the participant: guest/host/arbiter/local'
          party_id:
            type: string
            description: Site ID
          task_name:
            type: string
            description: Task name
          output_key:
            type: string
            description: Primary key for output data or model of the task
        type: object
  ModelDelete:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/Delete'
        type: object
  Delete:
    properties:
      count:
        type: boolean
    type: object
  OutputQuery:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/MetricKeyInfo'
        type: object
  MetricKeyInfo:
    properties:
      name:
        type: string
      step_axis:
        type: string
      type:
        type: string
      groups:
        type: array
        items:
          type: object
    type: object
  ReqMetricDelete:
    required:
      - job_id
      - role
      - task_name
    properties:
      job_id:
        type: string
        description: Job ID
      role:
        type: string
        description: 'Role of the participant: guest/host/arbiter/local'
      task_name:
        type: string
        description: Task name
    type: object
  ResponseDeleteMetric:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            type: boolean
        type: object
  ResponseFateFlow:
    properties:
      code:
        type: integer
      message:
        type: string
      data:
        type: object
    type: object
  ResponseDataTable:
    properties:
      train_out_data:
        type: array
        items:
          $ref: '#/definitions/dataInfo'
    type: object
  ResponseTableDisplay:
    properties:
      train_out_data:
        type: array
        items:
          type: array
          items:
            type: string
    type: object
  ReqGrant:
    required:
      - app_id
      - role
    properties:
      app_id:
        type: string
        description: App ID
      role:
        type: string
        description: Permission name
    type: object
  ResponseGrantPermission:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/GrantInfo'
        type: object
  GrantInfo:
    properties:
      status:
        type: boolean
    type: object
  ResponsePermissionModel:
    properties:
      data:
        $ref: '#/definitions/PermissionInfo'
    type: object
  PermissionInfo:
    properties:
      client:
        type: array
        items:
          type: object
    type: object
  CommonListModel:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            type: array
            items:
              type: string
        type: object
  ReqResourceGrant:
    required:
      - party_id
    properties:
      party_id:
        type: string
        description: Site ID
      component:
        type: string
        description: Component name
      dataset:
        type: array
        items:
          type: object
    type: object
  ResponseResourceModel:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            type: object
        type: object
  ReqProviderRegister:
    required:
      - device
      - metadata
      - name
      - version
    properties:
      name:
        type: string
        description: Component provider name
      device:
        type: string
        description: Component running mode
      version:
        type: string
        description: Component version
      metadata:
        type: string
        description: Detailed information about component registration
      protocol:
        type: string
        description: 'Protocol: fate/bfia,etc.'
      components_description:
        type: string
        description: Components description
    type: object
  ReqProviderDelete:
    properties:
      name:
        type: string
        description: Component provider name
      device:
        type: string
        description: Component running mode
      version:
        type: string
        description: Component version
      provider_name:
        type: string
        description: Registered algorithm full name, provider + ':' + version + '@' + running mode, e.g., fate:2.0.0@local
    type: object
  ReqServerRegistry:
    required:
      - host
      - port
      - server_name
    properties:
      server_name:
        type: string
        description: Server name
      host:
        type: string
        description: Host IP
      port:
        type: string
        description: Service port
      protocol:
        type: string
        description: 'Protocol: fate/bfia,etc.'
    type: object
  ResponseServerRegister:
    allOf:
      - $ref: '#/definitions/CommonModel'
      - properties:
          data:
            $ref: '#/definitions/RegisterInfo'
        type: object
  RegisterInfo:
    properties:
      host:
        type: string
      port:
        type: string
      protocol:
        type: string
      server_name:
        type: string
    type: object
  ReqServerDelete:
    required:
      - server_name
    properties:
      server_name:
        type: string
        description: Server name
    type: object
  ReqServiceRegistry:
    required:
      - name
      - namespace
    properties:
      namespace:
        type: string
        description: Namespace of the data table
      name:
        type: string
        description: Name of the data table
    type: object
  ReqBindPath:
    required:
      - name
      - namespace
      - path
    properties:
      namespace:
        type: string
        description: Namespace of the data table
      name:
        type: string
        description: Name of the data table
      path:
        type: string
        description: File path on the server
    type: object
responses:
  ParseError:
    description: When a mask can't be parsed
  MaskError:
    description: When any error occurs on mask
